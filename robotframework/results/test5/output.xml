<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.12.3 on linux)" generated="2025-09-28T14:07:46.521754" rpa="false" schemaversion="5">
<suite id="s1" name="Disk Space Validation" source="/mnt/c/Users/sacpa/Projects/robot/robotframework/tests/test5/disk_space_validation.robot">
<kw name="Initialize Test Environment" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.856134" level="INFO">🔧 Initializing Test-5: Disk Space Allocation Information</msg>
<arg>🔧 Initializing Test-5: Disk Space Allocation Information</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:46.854682" elapsed="0.001815"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.857855" level="INFO">${TOTAL_TESTS} = 0</msg>
<arg>${TOTAL_TESTS}</arg>
<arg>0</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-28T14:07:46.857407" elapsed="0.000636"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.858479" level="INFO">${PASSED_TESTS} = 0</msg>
<arg>${PASSED_TESTS}</arg>
<arg>0</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-28T14:07:46.858237" elapsed="0.000290"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.858936" level="INFO">@{TEST_RESULTS} = [ ]</msg>
<arg>@{TEST_RESULTS}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-28T14:07:46.858654" elapsed="0.000624"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.860401" level="INFO">@{PERFORMANCE_METRICS} = [ ]</msg>
<arg>@{PERFORMANCE_METRICS}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-28T14:07:46.859765" elapsed="0.000729"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.862103" level="INFO">@{VALIDATION_ERRORS} = [ ]</msg>
<arg>@{VALIDATION_ERRORS}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-28T14:07:46.861419" elapsed="0.000748"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-09-28T14:07:46.862547" level="INFO" html="true">Directory '&lt;a href="file:///tmp/system_info"&gt;/tmp/system_info&lt;/a&gt;' already exists.</msg>
<arg>${OUTPUT_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-09-28T14:07:46.862314" elapsed="0.000299"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.862992" level="INFO">📁 Created output directory: /tmp/system_info</msg>
<arg>📁 Created output directory: ${OUTPUT_DIR}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:46.862742" elapsed="0.000405"/>
</kw>
<doc>🚀 Initialize test environment and create output directories</doc>
<status status="PASS" start="2025-09-28T14:07:46.852900" elapsed="0.010372"/>
</kw>
<test id="s1-t1" name="Critical - SSH Connection to Target Machine" line="29">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.866460" level="INFO">🚀 Starting: Critical - SSH Connection to Target Machine</msg>
<arg>🚀 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:46.864999" elapsed="0.001632"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>🚀 Log the start of a test case</doc>
<status status="PASS" start="2025-09-28T14:07:46.864443" elapsed="0.002373"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.867324" level="INFO">🔍 Establishing SSH connection to target machine...</msg>
<arg>🔍 Establishing SSH connection to target machine...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:46.867042" elapsed="0.000473"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.868161" level="INFO">${total} = 1</msg>
<var>${total}</var>
<arg>${TOTAL_TESTS} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-09-28T14:07:46.867731" elapsed="0.000476"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.868768" level="INFO">${TOTAL_TESTS} = 1</msg>
<arg>${TOTAL_TESTS}</arg>
<arg>${total}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-28T14:07:46.868413" elapsed="0.000433"/>
</kw>
<kw name="Connect To Target Machine" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.870388" level="INFO">🔗 Connecting to target machine: target.local</msg>
<arg>🔗 Connecting to target machine: ${host}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:46.870100" elapsed="0.000512"/>
</kw>
<try>
<branch type="TRY">
<kw name="Open Connection" owner="SSHLibrary">
<arg>${host}</arg>
<arg>timeout=${SSH_TIMEOUT}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-09-28T14:07:46.871010" elapsed="0.000706"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-09-28T14:07:46.872321" level="INFO">Logging into 'target.local:22' as 'root'.</msg>
<msg time="2025-09-28T14:07:46.971853" level="FAIL">gaierror: [Errno -2] Name or service not known</msg>
<arg>${username}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="FAIL" start="2025-09-28T14:07:46.871918" elapsed="0.118540">gaierror: [Errno -2] Name or service not known</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Successfully connected to ${host}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:46.991502" elapsed="0.000079"/>
</kw>
<return>
<value>${True}</value>
<status status="NOT RUN" start="2025-09-28T14:07:46.991715" elapsed="0.000052"/>
</return>
<status status="FAIL" start="2025-09-28T14:07:46.870828" elapsed="0.121075">gaierror: [Errno -2] Name or service not known</status>
</branch>
<branch type="EXCEPT">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.992792" level="INFO">❌ Failed to connect to target.local</msg>
<arg>❌ Failed to connect to ${host}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:46.992272" elapsed="0.000695"/>
</kw>
<return>
<value>${False}</value>
<status status="PASS" start="2025-09-28T14:07:46.993075" elapsed="0.000085"/>
</return>
<status status="PASS" start="2025-09-28T14:07:46.992019" elapsed="0.001209"/>
</branch>
<status status="PASS" start="2025-09-28T14:07:46.870738" elapsed="0.122560"/>
</try>
<msg time="2025-09-28T14:07:46.993629" level="INFO">${connection_success} = False</msg>
<var>${connection_success}</var>
<arg>${TARGET_MACHINE}</arg>
<doc>🌐 Establish SSH connection to target machine</doc>
<status status="PASS" start="2025-09-28T14:07:46.869356" elapsed="0.124351"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<msg time="2025-09-28T14:07:46.994894" level="FAIL">Failed to establish SSH connection to target machine</msg>
<arg>${connection_success}</arg>
<arg>Failed to establish SSH connection to target machine</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="FAIL" start="2025-09-28T14:07:46.994071" elapsed="0.001077">Failed to establish SSH connection to target machine</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:46.995581" elapsed="0.000083"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${TEST_RESULTS}</arg>
<arg>SSH Connection: PASS - Connected to ${TARGET_MACHINE}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:46.997098" elapsed="0.000065"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${passed}</var>
<arg>${PASSED_TESTS} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:46.997420" elapsed="0.000045"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${PASSED_TESTS}</arg>
<arg>${passed}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:46.997671" elapsed="0.000040"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.001360" level="INFO">🏁 Finished: Critical - SSH Connection to Target Machine - Status: FAIL</msg>
<arg>🏁 Finished: ${test_name} - Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.000380" elapsed="0.001257"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>🏁 Log the end of a test case</doc>
<status status="PASS" start="2025-09-28T14:07:46.998508" elapsed="0.003331"/>
</kw>
<doc>🌐 Establish SSH connection to target machine for system analysis
Tests connectivity through codeserver to target machine</doc>
<tag>automated</tag>
<tag>connectivity</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="FAIL" start="2025-09-28T14:07:46.863381" elapsed="0.138621">Failed to establish SSH connection to target machine</status>
</test>
<test id="s1-t2" name="Critical - Disk Space Information Collection" line="48">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.007181" level="INFO">🚀 Starting: Critical - Disk Space Information Collection</msg>
<arg>🚀 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.006792" elapsed="0.000743"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>🚀 Log the start of a test case</doc>
<status status="PASS" start="2025-09-28T14:07:47.005239" elapsed="0.002529"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.009285" level="INFO">🔍 Collecting disk space information using df -h...</msg>
<arg>🔍 Collecting disk space information using df -h...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.008921" elapsed="0.000636"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.011162" level="INFO">${total} = 1</msg>
<var>${total}</var>
<arg>${TOTAL_TESTS} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-09-28T14:07:47.010043" elapsed="0.001207"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.012077" level="INFO">${TOTAL_TESTS} = 1</msg>
<arg>${TOTAL_TESTS}</arg>
<arg>${total}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-28T14:07:47.011612" elapsed="0.000583"/>
</kw>
<kw name="Collect Disk Space Information" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.013650" level="INFO">📊 Collecting disk space information...</msg>
<arg>📊 Collecting disk space information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.013371" elapsed="0.000502"/>
</kw>
<kw name="Execute Storage Command" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.015434" level="INFO">🔍 Executing: df -h (Disk space usage)</msg>
<arg>🔍 Executing: ${command} (${description})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.015126" elapsed="0.000429"/>
</kw>
<try>
<branch type="TRY">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-09-28T14:07:47.016357" level="INFO">Executing command 'df -h'.</msg>
<msg time="2025-09-28T14:07:47.016656" level="FAIL">Connection not open</msg>
<var>${result}</var>
<arg>${command}</arg>
<arg>timeout=${COMMAND_TIMEOUT}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="FAIL" start="2025-09-28T14:07:47.015996" elapsed="0.001620">Connection not open</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Command output:\n${result}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.017967" elapsed="0.000056"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output_file}&quot; != &quot;${EMPTY}&quot;">
<kw name="Set Variable" owner="BuiltIn">
<var>${file_path}</var>
<arg>${OUTPUT_DIR}/${output_file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.018618" elapsed="0.000059"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<arg>${file_path}</arg>
<arg>${result}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.018948" elapsed="0.000042"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>💾 Output saved to: ${file_path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.019200" elapsed="0.000056"/>
</kw>
<status status="NOT RUN" start="2025-09-28T14:07:47.018262" elapsed="0.001068"/>
</branch>
<status status="NOT RUN" start="2025-09-28T14:07:47.018197" elapsed="0.001204"/>
</if>
<return>
<value>${result}</value>
<status status="NOT RUN" start="2025-09-28T14:07:47.019484" elapsed="0.000039"/>
</return>
<status status="FAIL" start="2025-09-28T14:07:47.015799" elapsed="0.003847">Connection not open</status>
</branch>
<branch type="EXCEPT" assign="${error}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.020696" level="INFO">❌ Command failed: Connection not open</msg>
<arg>❌ Command failed: ${error}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.020070" elapsed="0.000889"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${VALIDATION_ERRORS}</arg>
<arg>Command failed: ${command} - ${error}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-09-28T14:07:47.021239" elapsed="0.000488"/>
</kw>
<return>
<value>${EMPTY}</value>
<status status="PASS" start="2025-09-28T14:07:47.021879" elapsed="0.000181"/>
</return>
<status status="PASS" start="2025-09-28T14:07:47.019833" elapsed="0.002374"/>
</branch>
<status status="PASS" start="2025-09-28T14:07:47.015696" elapsed="0.006669"/>
</try>
<msg time="2025-09-28T14:07:47.024963" level="INFO">${df_output} = </msg>
<var>${df_output}</var>
<arg>df -h</arg>
<arg>Disk space usage</arg>
<arg>${DISK_INFO_FILE}</arg>
<doc>💻 Execute storage-related command and save output</doc>
<status status="PASS" start="2025-09-28T14:07:47.014385" elapsed="0.010685"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.025943" level="INFO">Length is 0.</msg>
<msg time="2025-09-28T14:07:47.026141" level="FAIL">df command returned no output</msg>
<arg>${df_output}</arg>
<arg>df command returned no output</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="FAIL" start="2025-09-28T14:07:47.025464" elapsed="0.000843">df command returned no output</status>
</kw>
<kw name="Execute Storage Command" owner="storage_keywords">
<var>${lsblk_output}</var>
<arg>lsblk -f</arg>
<arg>Block device info</arg>
<arg>block_devices.txt</arg>
<doc>💻 Execute storage-related command and save output</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.027194" elapsed="0.000977"/>
</kw>
<kw name="Execute Storage Command" owner="storage_keywords">
<var>${fdisk_output}</var>
<arg>fdisk -l</arg>
<arg>Partition table info</arg>
<arg>partition_info.txt</arg>
<doc>💻 Execute storage-related command and save output</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.029685" elapsed="0.000083"/>
</kw>
<return>
<value>${df_output}</value>
<status status="NOT RUN" start="2025-09-28T14:07:47.029876" elapsed="0.000034"/>
</return>
<var>${disk_info}</var>
<doc>💿 Collect comprehensive disk space information using df -h</doc>
<status status="FAIL" start="2025-09-28T14:07:47.012785" elapsed="0.017341">df command returned no output</status>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<arg>${disk_info}</arg>
<arg>Disk space information collection failed</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.030755" elapsed="0.000060"/>
</kw>
<kw name="Validate Disk Space Requirements" owner="storage_keywords">
<var>${total_space}</var>
<arg>${disk_info}</arg>
<doc>✅ Validate disk space against build sheet requirements</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.031375" elapsed="0.000108"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Disk space information collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.031668" elapsed="0.000083"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Total disk space: ${total_space}GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.031927" elapsed="0.000031"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${TEST_RESULTS}</arg>
<arg>Disk Space Collection: PASS - Total: ${total_space}GB</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.032123" elapsed="0.000030"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${passed}</var>
<arg>${PASSED_TESTS} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.032285" elapsed="0.000025"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${PASSED_TESTS}</arg>
<arg>${passed}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.032443" elapsed="0.000023"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.035378" level="INFO">🏁 Finished: Critical - Disk Space Information Collection - Status: FAIL</msg>
<arg>🏁 Finished: ${test_name} - Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.034799" elapsed="0.000866"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>🏁 Log the end of a test case</doc>
<status status="PASS" start="2025-09-28T14:07:47.033052" elapsed="0.002773"/>
</kw>
<doc>💿 Execute df -h command and collect comprehensive disk space information
Gathers disk usage, filesystem types, and partition information</doc>
<tag>automated</tag>
<tag>critical</tag>
<tag>data-collection</tag>
<tag>disk-space</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-09-28T14:07:47.002942" elapsed="0.032986">df command returned no output</status>
</test>
<test id="s1-t3" name="Critical - CPU Information and Validation" line="71">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.038837" level="INFO">🚀 Starting: Critical - CPU Information and Validation</msg>
<arg>🚀 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.038561" elapsed="0.000418"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>🚀 Log the start of a test case</doc>
<status status="PASS" start="2025-09-28T14:07:47.037928" elapsed="0.001210"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.039603" level="INFO">🔍 Collecting and validating CPU information...</msg>
<arg>🔍 Collecting and validating CPU information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.039385" elapsed="0.000328"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.040285" level="INFO">${total} = 1</msg>
<var>${total}</var>
<arg>${TOTAL_TESTS} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-09-28T14:07:47.039903" elapsed="0.000429"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.040881" level="INFO">${TOTAL_TESTS} = 1</msg>
<arg>${TOTAL_TESTS}</arg>
<arg>${total}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-28T14:07:47.040572" elapsed="0.000390"/>
</kw>
<kw name="Collect CPU Information" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.042602" level="INFO">🔍 Collecting CPU information...</msg>
<arg>🔍 Collecting CPU information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.042358" elapsed="0.000392"/>
</kw>
<kw name="Execute Storage Command" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.044403" level="INFO">🔍 Executing: cat /proc/cpuinfo (CPU information)</msg>
<arg>🔍 Executing: ${command} (${description})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.044082" elapsed="0.000454"/>
</kw>
<try>
<branch type="TRY">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-09-28T14:07:47.045806" level="INFO">Executing command 'cat /proc/cpuinfo'.</msg>
<msg time="2025-09-28T14:07:47.046030" level="FAIL">Connection not open</msg>
<var>${result}</var>
<arg>${command}</arg>
<arg>timeout=${COMMAND_TIMEOUT}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="FAIL" start="2025-09-28T14:07:47.045259" elapsed="0.001505">Connection not open</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Command output:\n${result}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.047002" elapsed="0.000040"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output_file}&quot; != &quot;${EMPTY}&quot;">
<kw name="Set Variable" owner="BuiltIn">
<var>${file_path}</var>
<arg>${OUTPUT_DIR}/${output_file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.047392" elapsed="0.000023"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<arg>${file_path}</arg>
<arg>${result}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.047530" elapsed="0.000020"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>💾 Output saved to: ${file_path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.047781" elapsed="0.000046"/>
</kw>
<status status="NOT RUN" start="2025-09-28T14:07:47.047196" elapsed="0.000670"/>
</branch>
<status status="NOT RUN" start="2025-09-28T14:07:47.047148" elapsed="0.000756"/>
</if>
<return>
<value>${result}</value>
<status status="NOT RUN" start="2025-09-28T14:07:47.047950" elapsed="0.000019"/>
</return>
<status status="FAIL" start="2025-09-28T14:07:47.045011" elapsed="0.003794">Connection not open</status>
</branch>
<branch type="EXCEPT" assign="${error}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.049295" level="INFO">❌ Command failed: Connection not open</msg>
<arg>❌ Command failed: ${error}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.049059" elapsed="0.000404"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${VALIDATION_ERRORS}</arg>
<arg>Command failed: ${command} - ${error}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-09-28T14:07:47.049625" elapsed="0.000220"/>
</kw>
<return>
<value>${EMPTY}</value>
<status status="PASS" start="2025-09-28T14:07:47.049892" elapsed="0.000035"/>
</return>
<status status="PASS" start="2025-09-28T14:07:47.048941" elapsed="0.001017"/>
</branch>
<status status="PASS" start="2025-09-28T14:07:47.044863" elapsed="0.005125"/>
</try>
<msg time="2025-09-28T14:07:47.050681" level="INFO">${cpu_info} = </msg>
<var>${cpu_info}</var>
<arg>cat /proc/cpuinfo</arg>
<arg>CPU information</arg>
<arg>${CPU_INFO_FILE}</arg>
<doc>💻 Execute storage-related command and save output</doc>
<status status="PASS" start="2025-09-28T14:07:47.043326" elapsed="0.007393"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.050998" level="INFO">Length is 0.</msg>
<msg time="2025-09-28T14:07:47.051077" level="FAIL">CPU information not available</msg>
<arg>${cpu_info}</arg>
<arg>CPU information not available</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="FAIL" start="2025-09-28T14:07:47.050836" elapsed="0.000324">CPU information not available</status>
</kw>
<kw name="Execute Storage Command" owner="storage_keywords">
<var>${cpu_count}</var>
<arg>nproc</arg>
<arg>CPU core count</arg>
<arg>cpu_count.txt</arg>
<doc>💻 Execute storage-related command and save output</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.051610" elapsed="0.000038"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<var>${cpu_model}</var>
<arg>grep "model name" /proc/cpuinfo | head -1 | cut -d: -f2 | xargs</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.051798" elapsed="0.000025"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>💻 CPU Model: ${cpu_model}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.051925" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔢 CPU Cores: ${cpu_count}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.052059" elapsed="0.000020"/>
</kw>
<return>
<value>${cpu_info}</value>
<status status="NOT RUN" start="2025-09-28T14:07:47.052120" elapsed="0.000017"/>
</return>
<var>${cpu_info}</var>
<doc>🖥️ Collect CPU information and specifications</doc>
<status status="FAIL" start="2025-09-28T14:07:47.041336" elapsed="0.010903">CPU information not available</status>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<arg>${cpu_info}</arg>
<arg>CPU information collection failed</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.052356" elapsed="0.000025"/>
</kw>
<kw name="Validate CPU Requirements" owner="storage_keywords">
<var>${cpu_cores}</var>
<arg>${cpu_info}</arg>
<doc>🖥️ Validate CPU specifications against build requirements</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.052811" elapsed="0.000044"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ CPU information validated successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.053026" elapsed="0.000030"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>💻 CPU cores: ${cpu_cores}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.053232" elapsed="0.000027"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${TEST_RESULTS}</arg>
<arg>CPU Validation: PASS - Cores: ${cpu_cores}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.053380" elapsed="0.000024"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${passed}</var>
<arg>${PASSED_TESTS} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.053589" elapsed="0.000029"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${PASSED_TESTS}</arg>
<arg>${passed}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.053746" elapsed="0.000017"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.056875" level="INFO">🏁 Finished: Critical - CPU Information and Validation - Status: FAIL</msg>
<arg>🏁 Finished: ${test_name} - Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.055544" elapsed="0.001693"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>🏁 Log the end of a test case</doc>
<status status="PASS" start="2025-09-28T14:07:47.054108" elapsed="0.003348"/>
</kw>
<doc>🖥️ Collect CPU information and validate against build requirements
Gathers CPU model, core count, and performance specifications</doc>
<tag>automated</tag>
<tag>compute</tag>
<tag>cpu</tag>
<tag>critical</tag>
<tag>specifications</tag>
<status status="FAIL" start="2025-09-28T14:07:47.036439" elapsed="0.021141">CPU information not available</status>
</test>
<test id="s1-t4" name="Critical - Storage Capacity and Allocation Analysis" line="94">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.060909" level="INFO">🚀 Starting: Critical - Storage Capacity and Allocation Analysis</msg>
<arg>🚀 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.060486" elapsed="0.000594"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>🚀 Log the start of a test case</doc>
<status status="PASS" start="2025-09-28T14:07:47.059718" elapsed="0.001477"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.061621" level="INFO">🔍 Analyzing storage capacity and allocation...</msg>
<arg>🔍 Analyzing storage capacity and allocation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.061436" elapsed="0.000286"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.062088" level="INFO">${total} = 1</msg>
<var>${total}</var>
<arg>${TOTAL_TESTS} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-09-28T14:07:47.061844" elapsed="0.000271"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.062379" level="INFO">${TOTAL_TESTS} = 1</msg>
<arg>${TOTAL_TESTS}</arg>
<arg>${total}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-28T14:07:47.062224" elapsed="0.000190"/>
</kw>
<kw name="Collect Storage Capacity Information" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.063117" level="INFO">📊 Collecting storage capacity information...</msg>
<arg>📊 Collecting storage capacity information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.062964" elapsed="0.000254"/>
</kw>
<kw name="Execute Storage Command" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.065389" level="INFO">🔍 Executing: df -T (Filesystem types)</msg>
<arg>🔍 Executing: ${command} (${description})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.065101" elapsed="0.000434"/>
</kw>
<try>
<branch type="TRY">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-09-28T14:07:47.066228" level="INFO">Executing command 'df -T'.</msg>
<msg time="2025-09-28T14:07:47.066331" level="FAIL">Connection not open</msg>
<var>${result}</var>
<arg>${command}</arg>
<arg>timeout=${COMMAND_TIMEOUT}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="FAIL" start="2025-09-28T14:07:47.065987" elapsed="0.000750">Connection not open</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Command output:\n${result}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.066929" elapsed="0.000081"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output_file}&quot; != &quot;${EMPTY}&quot;">
<kw name="Set Variable" owner="BuiltIn">
<var>${file_path}</var>
<arg>${OUTPUT_DIR}/${output_file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.067447" elapsed="0.000040"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<arg>${file_path}</arg>
<arg>${result}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.067663" elapsed="0.000035"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>💾 Output saved to: ${file_path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.068517" elapsed="0.000136"/>
</kw>
<status status="NOT RUN" start="2025-09-28T14:07:47.067228" elapsed="0.001501"/>
</branch>
<status status="NOT RUN" start="2025-09-28T14:07:47.067109" elapsed="0.001700"/>
</if>
<return>
<value>${result}</value>
<status status="NOT RUN" start="2025-09-28T14:07:47.068909" elapsed="0.000034"/>
</return>
<status status="FAIL" start="2025-09-28T14:07:47.065864" elapsed="0.003183">Connection not open</status>
</branch>
<branch type="EXCEPT" assign="${error}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.069832" level="INFO">❌ Command failed: Connection not open</msg>
<arg>❌ Command failed: ${error}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.069368" elapsed="0.000684"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${VALIDATION_ERRORS}</arg>
<arg>Command failed: ${command} - ${error}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-09-28T14:07:47.070256" elapsed="0.000347"/>
</kw>
<return>
<value>${EMPTY}</value>
<status status="PASS" start="2025-09-28T14:07:47.070689" elapsed="0.000066"/>
</return>
<status status="PASS" start="2025-09-28T14:07:47.069200" elapsed="0.001611"/>
</branch>
<status status="PASS" start="2025-09-28T14:07:47.065807" elapsed="0.005069"/>
</try>
<msg time="2025-09-28T14:07:47.071956" level="INFO">${filesystem_info} = </msg>
<var>${filesystem_info}</var>
<arg>df -T</arg>
<arg>Filesystem types</arg>
<arg>${STORAGE_INFO_FILE}</arg>
<doc>💻 Execute storage-related command and save output</doc>
<status status="PASS" start="2025-09-28T14:07:47.064217" elapsed="0.007785"/>
</kw>
<kw name="Execute Storage Command" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.073591" level="INFO">🔍 Executing: mount | grep -E "^/dev" (Mount points)</msg>
<arg>🔍 Executing: ${command} (${description})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.073216" elapsed="0.000556"/>
</kw>
<try>
<branch type="TRY">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-09-28T14:07:47.074424" level="INFO">Executing command 'mount | grep -E "^/dev"'.</msg>
<msg time="2025-09-28T14:07:47.074570" level="FAIL">Connection not open</msg>
<var>${result}</var>
<arg>${command}</arg>
<arg>timeout=${COMMAND_TIMEOUT}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="FAIL" start="2025-09-28T14:07:47.074092" elapsed="0.000995">Connection not open</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Command output:\n${result}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.075298" elapsed="0.000033"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output_file}&quot; != &quot;${EMPTY}&quot;">
<kw name="Set Variable" owner="BuiltIn">
<var>${file_path}</var>
<arg>${OUTPUT_DIR}/${output_file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.075645" elapsed="0.000033"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<arg>${file_path}</arg>
<arg>${result}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.075839" elapsed="0.000033"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>💾 Output saved to: ${file_path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.076021" elapsed="0.000029"/>
</kw>
<status status="NOT RUN" start="2025-09-28T14:07:47.075484" elapsed="0.000656"/>
</branch>
<status status="NOT RUN" start="2025-09-28T14:07:47.075449" elapsed="0.000736"/>
</if>
<return>
<value>${result}</value>
<status status="NOT RUN" start="2025-09-28T14:07:47.076260" elapsed="0.000026"/>
</return>
<status status="FAIL" start="2025-09-28T14:07:47.073934" elapsed="0.002439">Connection not open</status>
</branch>
<branch type="EXCEPT" assign="${error}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.077010" level="INFO">❌ Command failed: Connection not open</msg>
<arg>❌ Command failed: ${error}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.076748" elapsed="0.000447"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${VALIDATION_ERRORS}</arg>
<arg>Command failed: ${command} - ${error}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-09-28T14:07:47.077340" elapsed="0.000531"/>
</kw>
<return>
<value>${EMPTY}</value>
<status status="PASS" start="2025-09-28T14:07:47.077934" elapsed="0.000042"/>
</return>
<status status="PASS" start="2025-09-28T14:07:47.076573" elapsed="0.001436"/>
</branch>
<status status="PASS" start="2025-09-28T14:07:47.073882" elapsed="0.004160"/>
</try>
<msg time="2025-09-28T14:07:47.078929" level="INFO">${mount_info} = </msg>
<var>${mount_info}</var>
<arg>mount | grep -E "^/dev"</arg>
<arg>Mount points</arg>
<arg>mount_points.txt</arg>
<doc>💻 Execute storage-related command and save output</doc>
<status status="PASS" start="2025-09-28T14:07:47.072531" elapsed="0.006443"/>
</kw>
<kw name="Execute Storage Command" owner="storage_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.080781" level="INFO">🔍 Executing: du -sh /* 2&gt;/dev/null | sort -hr (Directory usage)</msg>
<arg>🔍 Executing: ${command} (${description})</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.080514" elapsed="0.000437"/>
</kw>
<try>
<branch type="TRY">
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2025-09-28T14:07:47.081583" level="INFO">Executing command 'du -sh /* 2&gt;/dev/null | sort -hr'.</msg>
<msg time="2025-09-28T14:07:47.081743" level="FAIL">Connection not open</msg>
<var>${result}</var>
<arg>${command}</arg>
<arg>timeout=${COMMAND_TIMEOUT}</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="FAIL" start="2025-09-28T14:07:47.081246" elapsed="0.001935">Connection not open</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Command output:\n${result}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.083519" elapsed="0.000035"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output_file}&quot; != &quot;${EMPTY}&quot;">
<kw name="Set Variable" owner="BuiltIn">
<var>${file_path}</var>
<arg>${OUTPUT_DIR}/${output_file}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.083757" elapsed="0.000019"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<arg>${file_path}</arg>
<arg>${result}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.083865" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>💾 Output saved to: ${file_path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.083965" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-09-28T14:07:47.083650" elapsed="0.000361"/>
</branch>
<status status="NOT RUN" start="2025-09-28T14:07:47.083626" elapsed="0.000409"/>
</if>
<return>
<value>${result}</value>
<status status="NOT RUN" start="2025-09-28T14:07:47.084070" elapsed="0.000016"/>
</return>
<status status="FAIL" start="2025-09-28T14:07:47.081094" elapsed="0.003043">Connection not open</status>
</branch>
<branch type="EXCEPT" assign="${error}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.084509" level="INFO">❌ Command failed: Connection not open</msg>
<arg>❌ Command failed: ${error}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.084298" elapsed="0.000378"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${VALIDATION_ERRORS}</arg>
<arg>Command failed: ${command} - ${error}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2025-09-28T14:07:47.084794" elapsed="0.000221"/>
</kw>
<return>
<value>${EMPTY}</value>
<status status="PASS" start="2025-09-28T14:07:47.085068" elapsed="0.000033"/>
</return>
<status status="PASS" start="2025-09-28T14:07:47.084216" elapsed="0.000919"/>
</branch>
<status status="PASS" start="2025-09-28T14:07:47.081041" elapsed="0.004122"/>
</try>
<msg time="2025-09-28T14:07:47.085758" level="INFO">${du_info} = </msg>
<var>${du_info}</var>
<arg>du -sh /* 2&gt;/dev/null | sort -hr</arg>
<arg>Directory usage</arg>
<arg>directory_usage.txt</arg>
<doc>💻 Execute storage-related command and save output</doc>
<status status="PASS" start="2025-09-28T14:07:47.079964" elapsed="0.005826"/>
</kw>
<return>
<value>${filesystem_info}</value>
<status status="PASS" start="2025-09-28T14:07:47.085843" elapsed="0.000028"/>
</return>
<msg time="2025-09-28T14:07:47.085996" level="INFO">${storage_info} = </msg>
<var>${storage_info}</var>
<doc>📦 Collect detailed storage capacity and allocation information</doc>
<status status="PASS" start="2025-09-28T14:07:47.062614" elapsed="0.023404"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.086293" level="INFO">Length is 0.</msg>
<msg time="2025-09-28T14:07:47.086367" level="FAIL">Storage capacity information collection failed</msg>
<arg>${storage_info}</arg>
<arg>Storage capacity information collection failed</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="FAIL" start="2025-09-28T14:07:47.086128" elapsed="0.000300">Storage capacity information collection failed</status>
</kw>
<kw name="Validate Storage Allocation" owner="storage_keywords">
<var>${allocation_valid}</var>
<arg>${storage_info}</arg>
<doc>📦 Validate storage allocation for root, application, and cyber tools</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.086791" elapsed="0.000028"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Storage allocation analysis completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.086918" elapsed="0.000018"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${TEST_RESULTS}</arg>
<arg>Storage Allocation: PASS - Build compliant</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.087060" elapsed="0.000022"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${passed}</var>
<arg>${PASSED_TESTS} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.087175" elapsed="0.000018"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${PASSED_TESTS}</arg>
<arg>${passed}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.087313" elapsed="0.000041"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.090061" level="INFO">🏁 Finished: Critical - Storage Capacity and Allocation Analysis - Status: FAIL</msg>
<arg>🏁 Finished: ${test_name} - Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.089532" elapsed="0.000710"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>🏁 Log the end of a test case</doc>
<status status="PASS" start="2025-09-28T14:07:47.088023" elapsed="0.002347"/>
</kw>
<doc>📦 Analyze storage capacity and validate disk allocation for different purposes
Validates root, application, and cyber tools disk separation and sizing</doc>
<tag>allocation</tag>
<tag>automated</tag>
<tag>build-compliance</tag>
<tag>capacity</tag>
<tag>critical</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-09-28T14:07:47.058260" elapsed="0.032191">Storage capacity information collection failed</status>
</test>
<test id="s1-t5" name="Normal - Build Sheet Compliance Verification" line="116">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.093031" level="INFO">🚀 Starting: Normal - Build Sheet Compliance Verification</msg>
<arg>🚀 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.092639" elapsed="0.000600"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>🚀 Log the start of a test case</doc>
<status status="PASS" start="2025-09-28T14:07:47.091984" elapsed="0.001398"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.093926" level="INFO">🔍 Verifying build sheet compliance...</msg>
<arg>🔍 Verifying build sheet compliance...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.093622" elapsed="0.000457"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.094682" level="INFO">${total} = 1</msg>
<var>${total}</var>
<arg>${TOTAL_TESTS} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-09-28T14:07:47.094309" elapsed="0.000412"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.095252" level="INFO">${TOTAL_TESTS} = 1</msg>
<arg>${TOTAL_TESTS}</arg>
<arg>${total}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-28T14:07:47.094909" elapsed="0.000407"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.096006" level="FAIL">Insufficient test data for compliance verification</msg>
<arg>len($TEST_RESULTS) &gt;= 3</arg>
<arg>Insufficient test data for compliance verification</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="FAIL" start="2025-09-28T14:07:47.095481" elapsed="0.000652">Insufficient test data for compliance verification</status>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${error_count}</var>
<arg>${VALIDATION_ERRORS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.097124" elapsed="0.000037"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${error_count}</arg>
<arg>0</arg>
<arg>Build sheet compliance failed: ${error_count} errors found</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.097303" elapsed="0.000025"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${success_rate}</var>
<arg>${PASSED_TESTS} / ${TOTAL_TESTS} * 100</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.097458" elapsed="0.000020"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success_rate} &gt;= 80</arg>
<arg>Build compliance success rate too low: ${success_rate}%</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.097587" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Build sheet compliance verified</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.097859" elapsed="0.000053"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Compliance success rate: ${success_rate}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.098039" elapsed="0.000027"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${TEST_RESULTS}</arg>
<arg>Build Compliance: PASS - Success Rate: ${success_rate}%</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.098155" elapsed="0.000020"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${passed}</var>
<arg>${PASSED_TESTS} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.098282" elapsed="0.000016"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${PASSED_TESTS}</arg>
<arg>${passed}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.098395" elapsed="0.000015"/>
</kw>
<kw name="Log Test End" owner="storage_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.099993" level="INFO">🏁 Finished: Normal - Build Sheet Compliance Verification - Status: FAIL</msg>
<arg>🏁 Finished: ${test_name} - Status: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.099698" elapsed="0.000482"/>
</kw>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>🏁 Log the end of a test case</doc>
<status status="PASS" start="2025-09-28T14:07:47.099027" elapsed="0.001288"/>
</kw>
<doc>📋 Verify all collected information against EDS/Build sheet requirements
Comprehensive validation of compute and storage specifications</doc>
<tag>automated</tag>
<tag>build-sheet</tag>
<tag>compliance</tag>
<tag>normal</tag>
<tag>verification</tag>
<status status="FAIL" start="2025-09-28T14:07:47.090912" elapsed="0.009479">Insufficient test data for compliance verification</status>
</test>
<test id="s1-t6" name="Normal - System Resource Documentation" line="143">
<kw name="Log Test Start" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.102378" level="INFO">🚀 Starting: Normal - System Resource Documentation</msg>
<arg>🚀 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.102187" elapsed="0.000316"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>🚀 Log the start of a test case</doc>
<status status="PASS" start="2025-09-28T14:07:47.101790" elapsed="0.000792"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.102868" level="INFO">🔍 Generating system resource documentation...</msg>
<arg>🔍 Generating system resource documentation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.102722" elapsed="0.000237"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.103317" level="INFO">${total} = 1</msg>
<var>${total}</var>
<arg>${TOTAL_TESTS} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-09-28T14:07:47.103070" elapsed="0.000271"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.103589" level="INFO">${TOTAL_TESTS} = 1</msg>
<arg>${TOTAL_TESTS}</arg>
<arg>${total}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-28T14:07:47.103445" elapsed="0.000179"/>
</kw>
<kw name="File Should Exist" owner="SSHLibrary">
<msg time="2025-09-28T14:07:47.103708" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
<msg time="2025-09-28T14:07:47.104201" level="FAIL">Keyword 'SSHLibrary.File Should Exist' expected 1 argument, got 2.</msg>
<arg>${OUTPUT_DIR}/${DISK_INFO_FILE}</arg>
<arg>Disk information file not created</arg>
<doc>Fails if the given ``path`` does NOT point to an existing file.</doc>
<status status="FAIL" start="2025-09-28T14:07:47.103738" elapsed="0.000514">Keyword 'SSHLibrary.File Should Exist' expected 1 argument, got 2.</status>
</kw>
<kw name="File Should Exist" owner="SSHLibrary">
<arg>${OUTPUT_DIR}/${CPU_INFO_FILE}</arg>
<arg>CPU information file not created</arg>
<doc>Fails if the given ``path`` does NOT point to an existing file.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.104388" elapsed="0.000023"/>
</kw>
<kw name="File Should Exist" owner="SSHLibrary">
<arg>${OUTPUT_DIR}/${STORAGE_INFO_FILE} Storage information file not created</arg>
<doc>Fails if the given ``path`` does NOT point to an existing file.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.104675" elapsed="0.000033"/>
</kw>
<kw name="List Files In Directory" owner="SSHLibrary">
<var>@{output_files}</var>
<arg>${OUTPUT_DIR}</arg>
<doc>A wrapper for `List Directory` that returns only files.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.104822" elapsed="0.000018"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${file_count}</var>
<arg>${output_files}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.104926" elapsed="0.000017"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${file_count} &gt;= 3</arg>
<arg>Insufficient documentation files generated</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.105022" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ System resource documentation completed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.105157" elapsed="0.000026"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📁 Generated ${file_count} documentation files</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.105301" elapsed="0.000024"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${TEST_RESULTS}</arg>
<arg>Documentation: PASS - ${file_count} files generated</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.105460" elapsed="0.000023"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${passed}</var>
<arg>${PASSED_TESTS} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.106490" elapsed="0.000026"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${PASSED_TESTS}</arg>
<arg>${passed}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.106638" elapsed="0.000025"/>
</kw>
<kw name="Close Target Connection" owner="storage_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.107715" level="INFO">🔒 Closing connection to target machine</msg>
<arg>🔒 Closing connection to target machine</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.107360" elapsed="0.000771"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-09-28T14:07:47.108679" elapsed="0.000279"/>
</kw>
<doc>🔒 Close SSH connection to target machine</doc>
<status status="PASS" start="2025-09-28T14:07:47.107001" elapsed="0.002072"/>
</kw>
<doc>📄 Generate comprehensive documentation of system resources
Creates detailed reports for audit and compliance purposes</doc>
<tag>audit</tag>
<tag>automated</tag>
<tag>documentation</tag>
<tag>normal</tag>
<tag>reporting</tag>
<status status="FAIL" start="2025-09-28T14:07:47.100849" elapsed="0.008279">Keyword 'SSHLibrary.File Should Exist' expected 1 argument, got 2.</status>
</test>
<kw name="Generate Storage Summary Report" owner="storage_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.112768" level="INFO">📋 Generating storage summary report...</msg>
<arg>📋 Generating storage summary report...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.112432" elapsed="0.000585"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.113773" level="INFO">${report_content} = ['=====================================\n', '🗂️ DISK SPACE ALLOCATION REPORT\n', '=====================================\n\n', '📊 Test Summary:\n', '- Total Tests: 0\n', '- Passed Tests: 0\n', '- Succe...</msg>
<var>${report_content}</var>
<arg>=====================================\n</arg>
<arg>🗂️ DISK SPACE ALLOCATION REPORT\n</arg>
<arg>=====================================\n\n</arg>
<arg>📊 Test Summary:\n</arg>
<arg>- Total Tests: ${TOTAL_TESTS}\n</arg>
<arg>- Passed Tests: ${PASSED_TESTS}\n</arg>
<arg>- Success Rate: ${PASSED_TESTS}/${TOTAL_TESTS}\n\n</arg>
<arg>💾 Storage Information:\n</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-28T14:07:47.113197" elapsed="0.000624"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<var>${report_content}</var>
<arg>${report_content}- ${result}\n</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.114283" elapsed="0.000026"/>
</kw>
<var name="${result}"/>
<status status="NOT RUN" start="2025-09-28T14:07:47.114160" elapsed="0.000225"/>
</iter>
<var>${result}</var>
<value>@{TEST_RESULTS}</value>
<status status="NOT RUN" start="2025-09-28T14:07:47.113959" elapsed="0.000467"/>
</for>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.114780" level="INFO">${report_content} = ['=====================================\n', '🗂️ DISK SPACE ALLOCATION REPORT\n', '=====================================\n\n', '📊 Test Summary:\n', '- Total Tests: 0\n', '- Passed Tests: 0\n', '- Succe...</msg>
<var>${report_content}</var>
<arg>${report_content}\n🖥️ Performance Metrics:\n</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-28T14:07:47.114550" elapsed="0.000277"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<var>${report_content}</var>
<arg>${report_content}- ${metric}\n</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.115250" elapsed="0.000023"/>
</kw>
<var name="${metric}"/>
<status status="NOT RUN" start="2025-09-28T14:07:47.115146" elapsed="0.000169"/>
</iter>
<var>${metric}</var>
<value>@{PERFORMANCE_METRICS}</value>
<status status="NOT RUN" start="2025-09-28T14:07:47.114895" elapsed="0.000502"/>
</for>
<if>
<branch type="IF" condition="${VALIDATION_ERRORS}">
<kw name="Set Variable" owner="BuiltIn">
<var>${report_content}</var>
<arg>${report_content}\n❌ Validation Errors:\n</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.115684" elapsed="0.000026"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<var>${report_content}</var>
<arg>${report_content}- ${error}\n</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-09-28T14:07:47.115939" elapsed="0.000020"/>
</kw>
<var name="${error}"/>
<status status="NOT RUN" start="2025-09-28T14:07:47.115835" elapsed="0.000159"/>
</iter>
<var>${error}</var>
<value>@{VALIDATION_ERRORS}</value>
<status status="NOT RUN" start="2025-09-28T14:07:47.115772" elapsed="0.000249"/>
</for>
<status status="NOT RUN" start="2025-09-28T14:07:47.115488" elapsed="0.000563"/>
</branch>
<status status="PASS" start="2025-09-28T14:07:47.115465" elapsed="0.000611"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.116440" level="INFO">${report_content} = ['=====================================\n', '🗂️ DISK SPACE ALLOCATION REPORT\n', '=====================================\n\n', '📊 Test Summary:\n', '- Total Tests: 0\n', '- Passed Tests: 0\n', '- Succe...</msg>
<var>${report_content}</var>
<arg>${report_content}\n=====================================\n</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-28T14:07:47.116173" elapsed="0.000302"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.116978" level="INFO">${report_file} = /tmp/system_info/storage_summary_report.txt</msg>
<var>${report_file}</var>
<arg>${OUTPUT_DIR}/storage_summary_report.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-28T14:07:47.116695" elapsed="0.000317"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-09-28T14:07:47.117869" level="INFO" html="true">Created file '&lt;a href="file:///tmp/system_info/storage_summary_report.txt"&gt;/tmp/system_info/storage_summary_report.txt&lt;/a&gt;'.</msg>
<arg>${report_file}</arg>
<arg>${report_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-09-28T14:07:47.117131" elapsed="0.000819"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.118340" level="INFO">📊 Storage summary report generated: /tmp/system_info/storage_summary_report.txt</msg>
<arg>📊 Storage summary report generated: ${report_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.118109" elapsed="0.000364"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-28T14:07:47.119314" level="INFO">['=====================================\n', '🗂️ DISK SPACE ALLOCATION REPORT\n', '=====================================\n\n', '📊 Test Summary:\n', '- Total Tests: 0\n', '- Passed Tests: 0\n', '- Success Rate: 0/0\n\n', '💾 Storage Information:\n']
🖥️ Performance Metrics:

=====================================
</msg>
<arg>${report_content}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-28T14:07:47.118955" elapsed="0.001400"/>
</kw>
<doc>📊 Generate comprehensive storage and system summary report</doc>
<status status="PASS" start="2025-09-28T14:07:47.111988" elapsed="0.008978"/>
</kw>
<doc>💿 Disk Space Allocation Information Test Suite - Test-5
Comprehensive storage, compute, and disk space validation
✨ Features: SSH connectivity, disk space analysis, CPU validation, storage allocation
📊 Results: Detailed reports with build sheet compliance verification
🎯 Run with: robot disk_space_validation.robot</doc>
<meta name="Environment">Production-Ready</meta>
<meta name="Features">Storage, CPU, Disk Allocation, Build Compliance</meta>
<meta name="Reporting">Comprehensive Storage Reports + Executive Dashboard</meta>
<meta name="Test Suite">Disk Space Allocation Test-5</meta>
<meta name="Version">1.0.0</meta>
<status status="FAIL" start="2025-09-28T14:07:46.528693" elapsed="0.593054"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="6" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">allocation</stat>
<stat pass="0" fail="1" skip="0">audit</stat>
<stat pass="0" fail="6" skip="0">automated</stat>
<stat pass="0" fail="1" skip="0">build-compliance</stat>
<stat pass="0" fail="1" skip="0">build-sheet</stat>
<stat pass="0" fail="1" skip="0">capacity</stat>
<stat pass="0" fail="1" skip="0">compliance</stat>
<stat pass="0" fail="1" skip="0">compute</stat>
<stat pass="0" fail="1" skip="0">connectivity</stat>
<stat pass="0" fail="1" skip="0">cpu</stat>
<stat pass="0" fail="4" skip="0">critical</stat>
<stat pass="0" fail="1" skip="0">data-collection</stat>
<stat pass="0" fail="1" skip="0">disk-space</stat>
<stat pass="0" fail="1" skip="0">documentation</stat>
<stat pass="0" fail="1" skip="0">infrastructure</stat>
<stat pass="0" fail="2" skip="0">normal</stat>
<stat pass="0" fail="1" skip="0">reporting</stat>
<stat pass="0" fail="1" skip="0">specifications</stat>
<stat pass="0" fail="1" skip="0">ssh</stat>
<stat pass="0" fail="2" skip="0">storage</stat>
<stat pass="0" fail="1" skip="0">verification</stat>
</tag>
<suite>
<stat name="Disk Space Validation" id="s1" pass="0" fail="6" skip="0">Disk Space Validation</stat>
</suite>
</statistics>
<errors>
<msg time="2025-09-28T14:07:47.103708" level="WARN">Keyword 'File Should Exist' found both from a custom library 'SSHLibrary' and a standard library 'OperatingSystem'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'SSHLibrary.File Should Exist' or 'OperatingSystem.File Should Exist'.</msg>
</errors>
</robot>
