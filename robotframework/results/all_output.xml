<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.3.2 (Python 3.13.8 on win32)" generated="2025-10-07T19:57:11.196170" rpa="false" schemaversion="5">
<suite id="s1" name="Backup Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration">
<suite id="s1-s1" name="Backup Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test15_backup_validation\backup_validation.robot">
<kw name="Initialize Backup Validation Test Environment" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.590593" level="INFO">🚀 Initializing Backup Validation Test Environment...</msg>
<arg>🚀 Initializing Backup Validation Test Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.590389" elapsed="0.000407"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.592234" level="INFO">${VCENTER_API_CONN} = None</msg>
<arg>${VCENTER_API_CONN}</arg>
<arg>${None}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T19:56:45.591032" elapsed="0.001282"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.594335" level="INFO">${TEST_START_TIME} = </msg>
<arg>${TEST_START_TIME}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T19:56:45.592469" elapsed="0.001923"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T19:56:45.594825" level="INFO">${start_time} = 2025-10-07 19:56:45</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T19:56:45.594528" elapsed="0.000331"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.595208" level="INFO">${TEST_START_TIME} = 2025-10-07 19:56:45</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T19:56:45.594988" elapsed="0.000268"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T19:56:45.595595" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation"&gt;C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation&lt;/a&gt;' already exists.</msg>
<arg>results/test15_backup_validation</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T19:56:45.595400" elapsed="0.000263"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.595987" level="INFO">✅ Test environment initialized at 2025-10-07 19:56:45</msg>
<arg>✅ Test environment initialized at ${TEST_START_TIME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.595787" elapsed="0.000409"/>
</kw>
<doc>Initialize test environment for backup validation</doc>
<status status="PASS" start="2025-10-07T19:56:45.589430" elapsed="0.006860"/>
</kw>
<test id="s1-s1-t1" name="Critical - Connect to vCenter API" line="18">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.598127" level="INFO">🏁 Starting: Critical - Connect to vCenter API</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.597910" elapsed="0.000409"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.597381" elapsed="0.001063"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.598881" level="INFO">🔍 Establishing API connection to vCenter...</msg>
<arg>🔍 Establishing API connection to vCenter...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.598723" elapsed="0.000336"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.599488" level="INFO">📋 vCenter Server: vcenter.example.com</msg>
<arg>📋 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.599323" elapsed="0.000397"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.600247" level="INFO">📋 API Endpoint: https://vcenter.example.com/api</msg>
<arg>📋 API Endpoint: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.600015" elapsed="0.000456"/>
</kw>
<kw name="Connect To vCenter API" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.606909" level="INFO">🔗 Connecting to vCenter API: https://vcenter.example.com/api</msg>
<arg>🔗 Connecting to vCenter API: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.606473" elapsed="0.000679"/>
</kw>
<kw name="Vcenter Api Connect" owner="VCenterAPILibrary">
<msg time="2025-10-07T19:56:45.608211" level="INFO">${connection} = {'endpoint': 'https://vcenter.example.com/api', 'username': 'administrator@vsphere.local', 'authenticated': True, 'timeout': 30, 'verify_ssl': True, 'session_token': 'mock-session-token-12345'}</msg>
<var>${connection}</var>
<arg>${VCENTER_API_ENDPOINT}</arg>
<arg>${VCENTER_USERNAME}</arg>
<arg>${VCENTER_PASSWORD}</arg>
<arg>${API_TIMEOUT}</arg>
<arg>${API_VERIFY_SSL}</arg>
<doc>Establish connection to vCenter REST API</doc>
<status status="PASS" start="2025-10-07T19:56:45.607455" elapsed="0.000798"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.609039" level="INFO">${VCENTER_API_CONN} = {'endpoint': 'https://vcenter.example.com/api', 'username': 'administrator@vsphere.local', 'authenticated': True, 'timeout': 30, 'verify_ssl': True, 'session_token': 'mock-session-token-12345'}</msg>
<arg>${VCENTER_API_CONN}</arg>
<arg>${connection}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T19:56:45.608416" elapsed="0.000688"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.609466" level="INFO">✅ Connected to vCenter API: https://vcenter.example.com/api</msg>
<arg>✅ Connected to vCenter API: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.609248" elapsed="0.000398"/>
</kw>
<return>
<value>${connection}</value>
<status status="PASS" start="2025-10-07T19:56:45.609768" elapsed="0.000070"/>
</return>
<doc>Establish connection to vCenter REST API</doc>
<status status="PASS" start="2025-10-07T19:56:45.600824" elapsed="0.009134"/>
</kw>
<kw name="Verify vCenter API Connection" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.610541" level="INFO">🔍 Verifying vCenter API connection status...</msg>
<arg>🔍 Verifying vCenter API connection status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.610436" elapsed="0.000291"/>
</kw>
<kw name="Vcenter Api Verify Connection" owner="VCenterAPILibrary">
<msg time="2025-10-07T19:56:45.611182" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>${VCENTER_API_CONN}</arg>
<doc>Verify vCenter API connection is active</doc>
<status status="PASS" start="2025-10-07T19:56:45.610945" elapsed="0.000282"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.611590" level="INFO">✅ vCenter API connection verified: True</msg>
<arg>✅ vCenter API connection verified: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.611399" elapsed="0.000586"/>
</kw>
<return>
<value>${status}</value>
<status status="PASS" start="2025-10-07T19:56:45.612052" elapsed="0.000046"/>
</return>
<msg time="2025-10-07T19:56:45.612246" level="INFO">${connection_status} = True</msg>
<var>${connection_status}</var>
<doc>Verify vCenter API connection is active</doc>
<status status="PASS" start="2025-10-07T19:56:45.610216" elapsed="0.002057"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>msg=Failed to establish vCenter API connection</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:56:45.612490" elapsed="0.000194"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.613009" level="INFO">✅ vCenter API connection established successfully</msg>
<arg>✅ vCenter API connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.612875" elapsed="0.000275"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.614343" level="INFO">✅ Completed: Critical - Connect to vCenter API - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.614151" elapsed="0.000349"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.613916" elapsed="0.000631"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.614691" elapsed="0.000020"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.614582" elapsed="0.000243"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.613887" elapsed="0.000975"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.613572" elapsed="0.001357"/>
</kw>
<doc>🔗 Establish API connection to VMware vCenter for backup policy queries</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>vcenter_api</tag>
<status status="PASS" start="2025-10-07T19:56:45.596369" elapsed="0.018795"/>
</test>
<test id="s1-s1-t2" name="Critical - Collect VM Backup Policy Configuration" line="35">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.616938" level="INFO">🏁 Starting: Critical - Collect VM Backup Policy Configuration</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.616803" elapsed="0.000290"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.616549" elapsed="0.000653"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.617550" level="INFO">🔍 Collecting VM backup policy configuration...</msg>
<arg>🔍 Collecting VM backup policy configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.617424" elapsed="0.000325"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.618084" level="INFO">📋 Target VMs: ['production-db-01', 'production-web-01', 'production-app-01', 'file-server-01']</msg>
<arg>📋 Target VMs: ${TARGET_VMS}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.617941" elapsed="0.000356"/>
</kw>
<kw name="Collect Backup Policy Configuration" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.618898" level="INFO">📊 Collecting backup policy configuration via API...</msg>
<arg>📊 Collecting backup policy configuration via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.618793" elapsed="0.000248"/>
</kw>
<kw name="Vcenter Api Get Backup Policies" owner="VCenterAPILibrary">
<msg time="2025-10-07T19:56:45.619398" level="INFO">${policies} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<var>${policies}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get backup policy configuration for VMs via API</doc>
<status status="PASS" start="2025-10-07T19:56:45.619201" elapsed="0.000223"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.619613" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T19:56:45.619672" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${policies}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.619521" elapsed="0.000170"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.619920" level="INFO">📊 Collected backup policies for 4 VMs</msg>
<arg>📊 Collected backup policies for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.619783" elapsed="0.000280"/>
</kw>
<return>
<value>${policies}</value>
<status status="PASS" start="2025-10-07T19:56:45.620129" elapsed="0.000043"/>
</return>
<msg time="2025-10-07T19:56:45.620595" level="INFO">${policy_data} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<var>${policy_data}</var>
<doc>Collect VM backup policy configuration via API</doc>
<status status="PASS" start="2025-10-07T19:56:45.618590" elapsed="0.002053"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.621102" level="INFO">${POLICY_DATA} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<arg>${POLICY_DATA}</arg>
<arg>${policy_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:56:45.620846" elapsed="0.000300"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.621491" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T19:56:45.621554" level="INFO">${vm_count} = 4</msg>
<var>${vm_count}</var>
<arg>${policy_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.621380" elapsed="0.000195"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${vm_count} &gt; 0</arg>
<arg>msg=No backup policies found for target VMs</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:56:45.621765" elapsed="0.000222"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.622323" level="INFO">📊 Backup policies collected for 4 VMs</msg>
<arg>📊 Backup policies collected for ${vm_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.622160" elapsed="0.000364"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.624897" level="INFO">📊 VM: production-db-01 - Policy: Critical-DB-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.623317" elapsed="0.001826"/>
</kw>
<var name="${policy}">{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-07T19:56:45.623180" elapsed="0.002023"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.626527" level="INFO">📊 VM: production-web-01 - Policy: High-Priority-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.625436" elapsed="0.001278"/>
</kw>
<var name="${policy}">{'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'policy_id': 'policy-002', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-07T19:56:45.625320" elapsed="0.001448"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.628416" level="INFO">📊 VM: production-app-01 - Policy: High-Priority-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.626996" elapsed="0.001602"/>
</kw>
<var name="${policy}">{'vm_name': 'production-app-01', 'policy_name': 'High-Priority-Policy', 'policy_id': 'policy-002', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-07T19:56:45.626892" elapsed="0.001766"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.630179" level="INFO">📊 VM: file-server-01 - Policy: Standard-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.628896" elapsed="0.001486"/>
</kw>
<var name="${policy}">{'vm_name': 'file-server-01', 'policy_name': 'Standard-Policy', 'policy_id': 'policy-003', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-07T19:56:45.628796" elapsed="0.001634"/>
</iter>
<var>${policy}</var>
<value>@{policy_data}</value>
<status status="PASS" start="2025-10-07T19:56:45.622721" elapsed="0.007742"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.630963" level="INFO">✅ Backup policy configuration collection complete</msg>
<arg>✅ Backup policy configuration collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.630825" elapsed="0.000300"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.632518" level="INFO">✅ Completed: Critical - Collect VM Backup Policy Configuration - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.632128" elapsed="0.000595"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.631912" elapsed="0.000899"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.632973" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.632859" elapsed="0.000166"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.631886" elapsed="0.001159"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.631560" elapsed="0.001532"/>
</kw>
<doc>📊 Retrieve VM backup policy details via vCenter REST API</doc>
<tag>api_collection</tag>
<tag>backup_policy</tag>
<tag>critical</tag>
<status status="PASS" start="2025-10-07T19:56:45.616056" elapsed="0.017217"/>
</test>
<test id="s1-s1-t3" name="Critical - Collect Backup Schedule Settings" line="56">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.634976" level="INFO">🏁 Starting: Critical - Collect Backup Schedule Settings</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.634837" elapsed="0.000351"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.634539" elapsed="0.000750"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.635633" level="INFO">🔍 Collecting backup schedule settings...</msg>
<arg>🔍 Collecting backup schedule settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.635523" elapsed="0.000306"/>
</kw>
<kw name="Collect Backup Schedule Settings" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.636487" level="INFO">📊 Collecting backup schedule settings via API...</msg>
<arg>📊 Collecting backup schedule settings via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.636377" elapsed="0.000298"/>
</kw>
<kw name="Vcenter Api Get Backup Schedules" owner="VCenterAPILibrary">
<msg time="2025-10-07T19:56:45.637311" level="INFO">${schedules} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-07 23:56:45'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<var>${schedules}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get backup schedule settings for VMs via API</doc>
<status status="PASS" start="2025-10-07T19:56:45.636830" elapsed="0.000516"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.637618" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T19:56:45.637704" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${schedules}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.637499" elapsed="0.000234"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.638049" level="INFO">📊 Collected backup schedules for 4 VMs</msg>
<arg>📊 Collected backup schedules for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.637872" elapsed="0.000372"/>
</kw>
<return>
<value>${schedules}</value>
<status status="PASS" start="2025-10-07T19:56:45.638399" elapsed="0.000050"/>
</return>
<msg time="2025-10-07T19:56:45.638608" level="INFO">${schedule_data} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-07 23:56:45'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<var>${schedule_data}</var>
<doc>Collect backup schedule settings via API</doc>
<status status="PASS" start="2025-10-07T19:56:45.636158" elapsed="0.002475"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.639336" level="INFO">${SCHEDULE_DATA} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-07 23:56:45'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<arg>${SCHEDULE_DATA}</arg>
<arg>${schedule_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:56:45.638849" elapsed="0.000627"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.639829" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T19:56:45.639902" level="INFO">${schedule_count} = 4</msg>
<var>${schedule_count}</var>
<arg>${schedule_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.639716" elapsed="0.000219"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${schedule_count} &gt; 0</arg>
<arg>msg=No backup schedules found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:56:45.640109" elapsed="0.000237"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.640705" level="INFO">📊 Backup schedules collected for 4 VMs</msg>
<arg>📊 Backup schedules collected for ${schedule_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.640538" elapsed="0.000341"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.642875" level="INFO">📊 VM: production-db-01 - Frequency: Every 4 hours, RPO: 4h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.641342" elapsed="0.001736"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-07 23:56:45'}</var>
<status status="PASS" start="2025-10-07T19:56:45.641262" elapsed="0.001920"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.645567" level="INFO">📊 VM: production-web-01 - Frequency: Every 12 hours, RPO: 12h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.643424" elapsed="0.002307"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'next_run': '2025-10-08 07:56:45'}</var>
<status status="PASS" start="2025-10-07T19:56:45.643309" elapsed="0.002485"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.647638" level="INFO">📊 VM: production-app-01 - Frequency: Every 12 hours, RPO: 12h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.645989" elapsed="0.001854"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-app-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'next_run': '2025-10-08 07:56:45'}</var>
<status status="PASS" start="2025-10-07T19:56:45.645897" elapsed="0.001993"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.649553" level="INFO">📊 VM: file-server-01 - Frequency: Daily, RPO: 24h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.648091" elapsed="0.001668"/>
</kw>
<var name="${schedule}">{'vm_name': 'file-server-01', 'frequency': 'Daily', 'rpo_hours': 24, 'next_run': '2025-10-08 19:56:45'}</var>
<status status="PASS" start="2025-10-07T19:56:45.647988" elapsed="0.001819"/>
</iter>
<var>${schedule}</var>
<value>@{schedule_data}</value>
<status status="PASS" start="2025-10-07T19:56:45.641065" elapsed="0.008787"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.650223" level="INFO">✅ Backup schedule settings collection complete</msg>
<arg>✅ Backup schedule settings collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.650112" elapsed="0.000302"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.651685" level="INFO">✅ Completed: Critical - Collect Backup Schedule Settings - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.651522" elapsed="0.000362"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.651339" elapsed="0.000592"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.652066" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.651969" elapsed="0.000146"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.651319" elapsed="0.000815"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.651038" elapsed="0.001140"/>
</kw>
<doc>📅 Retrieve backup schedule settings and RPO configuration via API</doc>
<tag>api_collection</tag>
<tag>backup_schedule</tag>
<tag>critical</tag>
<tag>rpo</tag>
<status status="PASS" start="2025-10-07T19:56:45.634001" elapsed="0.018371"/>
</test>
<test id="s1-s1-t4" name="Critical - Collect Recent Backup Job Status" line="76">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.653937" level="INFO">🏁 Starting: Critical - Collect Recent Backup Job Status</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.653771" elapsed="0.000361"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.653361" elapsed="0.000848"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.654590" level="INFO">🔍 Collecting recent backup job status...</msg>
<arg>🔍 Collecting recent backup job status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.654474" elapsed="0.000268"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.655244" level="INFO">📋 Looking back 7 days</msg>
<arg>📋 Looking back ${BACKUP_LOOKBACK_DAYS} days</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.654992" elapsed="0.000425"/>
</kw>
<kw name="Collect Recent Backup Job Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.656060" level="INFO">📊 Collecting recent backup job status via API...</msg>
<arg>📊 Collecting recent backup job status via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.655923" elapsed="0.000328"/>
</kw>
<kw name="Vcenter Api Get Recent Backup Jobs" owner="VCenterAPILibrary">
<msg time="2025-10-07T19:56:45.656924" level="INFO">${jobs} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-07 19:26:45', 'end_time': '2025-10-07 19:56:45', 'data_transferred_gb': 50, 'error_mess...</msg>
<var>${jobs}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<arg>${BACKUP_LOOKBACK_DAYS}</arg>
<doc>Get recent backup job status for VMs via API</doc>
<status status="PASS" start="2025-10-07T19:56:45.656442" elapsed="0.000648"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.657333" level="INFO">Length is 12.</msg>
<msg time="2025-10-07T19:56:45.657398" level="INFO">${count} = 12</msg>
<var>${count}</var>
<arg>${jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.657217" elapsed="0.000211"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.657652" level="INFO">📊 Collected 12 recent backup jobs</msg>
<arg>📊 Collected ${count} recent backup jobs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.657519" elapsed="0.000315"/>
</kw>
<return>
<value>${jobs}</value>
<status status="PASS" start="2025-10-07T19:56:45.657912" elapsed="0.000039"/>
</return>
<msg time="2025-10-07T19:56:45.658119" level="INFO">${job_status} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-07 19:26:45', 'end_time': '2025-10-07 19:56:45', 'data_transferred_gb': 50, 'error_mess...</msg>
<var>${job_status}</var>
<doc>Collect recent backup job status via API</doc>
<status status="PASS" start="2025-10-07T19:56:45.655680" elapsed="0.002463"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.658603" level="INFO">${JOB_STATUS} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-07 19:26:45', 'end_time': '2025-10-07 19:56:45', 'data_transferred_gb': 50, 'error_mess...</msg>
<arg>${JOB_STATUS}</arg>
<arg>${job_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:56:45.658396" elapsed="0.000247"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.659021" level="INFO">Length is 12.</msg>
<msg time="2025-10-07T19:56:45.659087" level="INFO">${job_count} = 12</msg>
<var>${job_count}</var>
<arg>${job_status}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.658899" elapsed="0.000223"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${job_count} &gt; 0</arg>
<arg>msg=No recent backup jobs found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:56:45.659319" elapsed="0.000215"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.659861" level="INFO">📊 Recent backup jobs collected: 12 jobs</msg>
<arg>📊 Recent backup jobs collected: ${job_count} jobs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.659726" elapsed="0.000321"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.662244" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-07 19:56:45</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.660547" elapsed="0.001919"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-07 19:26:45', 'end_time': '2025-10-07 19:56:45', 'data_transferred_gb': 50, 'error_messa...</var>
<status status="PASS" start="2025-10-07T19:56:45.660436" elapsed="0.002101"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.664369" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-05 19:56:45</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.662771" elapsed="0.001804"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-1', 'status': 'Success', 'start_time': '2025-10-05 19:26:45', 'end_time': '2025-10-05 19:56:45', 'data_transferred_gb': 60, 'error_messa...</var>
<status status="PASS" start="2025-10-07T19:56:45.662650" elapsed="0.001972"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.666383" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-03 19:56:45</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.664833" elapsed="0.001761"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-2', 'status': 'Success', 'start_time': '2025-10-03 19:26:45', 'end_time': '2025-10-03 19:56:45', 'data_transferred_gb': 70, 'error_messa...</var>
<status status="PASS" start="2025-10-07T19:56:45.664731" elapsed="0.001911"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.668948" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-07 19:56:45</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.666825" elapsed="0.002292"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-0', 'status': 'Success', 'start_time': '2025-10-07 19:26:45', 'end_time': '2025-10-07 19:56:45', 'data_transferred_gb': 50, 'error_mes...</var>
<status status="PASS" start="2025-10-07T19:56:45.666748" elapsed="0.002433"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.671273" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-05 19:56:45</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.669404" elapsed="0.002030"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-1', 'status': 'Success', 'start_time': '2025-10-05 19:26:45', 'end_time': '2025-10-05 19:56:45', 'data_transferred_gb': 60, 'error_mes...</var>
<status status="PASS" start="2025-10-07T19:56:45.669291" elapsed="0.002198"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.674013" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-03 19:56:45</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.671721" elapsed="0.002578"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-2', 'status': 'Success', 'start_time': '2025-10-03 19:26:45', 'end_time': '2025-10-03 19:56:45', 'data_transferred_gb': 70, 'error_mes...</var>
<status status="PASS" start="2025-10-07T19:56:45.671605" elapsed="0.002751"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.676165" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-07 19:56:45</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.674590" elapsed="0.001787"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-0', 'status': 'Success', 'start_time': '2025-10-07 19:26:45', 'end_time': '2025-10-07 19:56:45', 'data_transferred_gb': 50, 'error_mes...</var>
<status status="PASS" start="2025-10-07T19:56:45.674480" elapsed="0.001957"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.678756" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-05 19:56:45</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.676727" elapsed="0.002237"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-1', 'status': 'Success', 'start_time': '2025-10-05 19:26:45', 'end_time': '2025-10-05 19:56:45', 'data_transferred_gb': 60, 'error_mes...</var>
<status status="PASS" start="2025-10-07T19:56:45.676644" elapsed="0.002367"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.680962" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-03 19:56:45</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.679218" elapsed="0.001929"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-2', 'status': 'Success', 'start_time': '2025-10-03 19:26:45', 'end_time': '2025-10-03 19:56:45', 'data_transferred_gb': 70, 'error_mes...</var>
<status status="PASS" start="2025-10-07T19:56:45.679123" elapsed="0.002070"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.683116" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-07 19:56:45</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.681375" elapsed="0.001915"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-0', 'status': 'Success', 'start_time': '2025-10-07 19:26:45', 'end_time': '2025-10-07 19:56:45', 'data_transferred_gb': 50, 'error_message':...</var>
<status status="PASS" start="2025-10-07T19:56:45.681298" elapsed="0.002052"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.685058" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-05 19:56:45</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.683536" elapsed="0.001734"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-1', 'status': 'Success', 'start_time': '2025-10-05 19:26:45', 'end_time': '2025-10-05 19:56:45', 'data_transferred_gb': 60, 'error_message':...</var>
<status status="PASS" start="2025-10-07T19:56:45.683459" elapsed="0.001857"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.687288" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-03 19:56:45</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.685522" elapsed="0.001971"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-2', 'status': 'Success', 'start_time': '2025-10-03 19:26:45', 'end_time': '2025-10-03 19:56:45', 'data_transferred_gb': 70, 'error_message':...</var>
<status status="PASS" start="2025-10-07T19:56:45.685423" elapsed="0.002150"/>
</iter>
<var>${job}</var>
<value>@{job_status}</value>
<status status="PASS" start="2025-10-07T19:56:45.660205" elapsed="0.027422"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.688273" level="INFO">✅ Recent backup job status collection complete</msg>
<arg>✅ Recent backup job status collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.688052" elapsed="0.000446"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.689944" level="INFO">✅ Completed: Critical - Collect Recent Backup Job Status - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.689722" elapsed="0.000440"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.689417" elapsed="0.000815"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.690419" elapsed="0.000022"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.690278" elapsed="0.000197"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.689387" elapsed="0.001108"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.688949" elapsed="0.001596"/>
</kw>
<doc>✅ Retrieve recent backup job execution status via API</doc>
<tag>api_collection</tag>
<tag>backup_jobs</tag>
<tag>critical</tag>
<tag>job_status</tag>
<status status="PASS" start="2025-10-07T19:56:45.652835" elapsed="0.037868"/>
</test>
<test id="s1-s1-t5" name="Critical - Collect Retention Policy Settings" line="97">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.693713" level="INFO">🏁 Starting: Critical - Collect Retention Policy Settings</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.693529" elapsed="0.000374"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.693188" elapsed="0.000832"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.694417" level="INFO">🔍 Collecting retention policy settings...</msg>
<arg>🔍 Collecting retention policy settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.694281" elapsed="0.000372"/>
</kw>
<kw name="Collect Retention Policy Settings" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.695855" level="INFO">📊 Collecting retention policy settings via API...</msg>
<arg>📊 Collecting retention policy settings via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.695712" elapsed="0.000317"/>
</kw>
<kw name="Vcenter Api Get Retention Policies" owner="VCenterAPILibrary">
<msg time="2025-10-07T19:56:45.696412" level="INFO">${retention} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<var>${retention}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get retention policy settings for VMs via API</doc>
<status status="PASS" start="2025-10-07T19:56:45.696198" elapsed="0.000239"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.696636" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T19:56:45.696714" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${retention}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.696537" elapsed="0.000202"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.697185" level="INFO">📊 Collected retention policies for 4 VMs</msg>
<arg>📊 Collected retention policies for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.696997" elapsed="0.000340"/>
</kw>
<return>
<value>${retention}</value>
<status status="PASS" start="2025-10-07T19:56:45.697406" elapsed="0.000048"/>
</return>
<msg time="2025-10-07T19:56:45.697622" level="INFO">${retention_data} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<var>${retention_data}</var>
<doc>Collect retention policy settings via API</doc>
<status status="PASS" start="2025-10-07T19:56:45.695383" elapsed="0.002267"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.698097" level="INFO">${RETENTION_DATA} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<arg>${RETENTION_DATA}</arg>
<arg>${retention_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:56:45.697850" elapsed="0.000299"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.698501" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T19:56:45.698568" level="INFO">${retention_count} = 4</msg>
<var>${retention_count}</var>
<arg>${retention_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.698391" elapsed="0.000210"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${retention_count} &gt; 0</arg>
<arg>msg=No retention policies found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:56:45.698797" elapsed="0.000203"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.699500" level="INFO">📊 Retention policies collected for 4 VMs</msg>
<arg>📊 Retention policies collected for ${retention_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.699297" elapsed="0.000397"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.701542" level="INFO">📊 VM: production-db-01 - Daily: 14d, Weekly: 8w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.700103" elapsed="0.001611"/>
</kw>
<var name="${retention}">{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-07T19:56:45.700011" elapsed="0.001759"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.703292" level="INFO">📊 VM: production-web-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.701960" elapsed="0.001698"/>
</kw>
<var name="${retention}">{'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-07T19:56:45.701881" elapsed="0.001913"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.706213" level="INFO">📊 VM: production-app-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.704032" elapsed="0.002428"/>
</kw>
<var name="${retention}">{'vm_name': 'production-app-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-07T19:56:45.703924" elapsed="0.002619"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.708878" level="INFO">📊 VM: file-server-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.706798" elapsed="0.002300"/>
</kw>
<var name="${retention}">{'vm_name': 'file-server-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-07T19:56:45.706675" elapsed="0.002483"/>
</iter>
<var>${retention}</var>
<value>@{retention_data}</value>
<status status="PASS" start="2025-10-07T19:56:45.699861" elapsed="0.009351"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.709648" level="INFO">✅ Retention policy settings collection complete</msg>
<arg>✅ Retention policy settings collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.709514" elapsed="0.000331"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.711101" level="INFO">✅ Completed: Critical - Collect Retention Policy Settings - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.710948" elapsed="0.000364"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.710780" elapsed="0.000578"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.711496" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.711386" elapsed="0.000201"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.710758" elapsed="0.000849"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.710497" elapsed="0.001156"/>
</kw>
<doc>🗄️ Retrieve backup retention policy settings via API</doc>
<tag>api_collection</tag>
<tag>compliance</tag>
<tag>critical</tag>
<tag>retention</tag>
<status status="PASS" start="2025-10-07T19:56:45.692525" elapsed="0.019372"/>
</test>
<test id="s1-s1-t6" name="Critical - Collect Latest Backup Timestamps" line="117">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.713344" level="INFO">🏁 Starting: Critical - Collect Latest Backup Timestamps</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.713214" elapsed="0.000317"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.712977" elapsed="0.000670"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.714125" level="INFO">🔍 Collecting latest backup timestamps...</msg>
<arg>🔍 Collecting latest backup timestamps...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.713995" elapsed="0.000318"/>
</kw>
<kw name="Collect Latest Backup Timestamps" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.715137" level="INFO">📊 Collecting latest backup timestamps via API...</msg>
<arg>📊 Collecting latest backup timestamps via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.714992" elapsed="0.000337"/>
</kw>
<kw name="Vcenter Api Get Latest Backup Timestamps" owner="VCenterAPILibrary">
<msg time="2025-10-07T19:56:45.715900" level="INFO">${timestamps} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-07 16:56:45', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<var>${timestamps}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get latest successful backup timestamps for VMs via API</doc>
<status status="PASS" start="2025-10-07T19:56:45.715514" elapsed="0.000437"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.716248" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T19:56:45.716345" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${timestamps}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.716107" elapsed="0.000271"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.716654" level="INFO">📊 Collected latest backup timestamps for 4 VMs</msg>
<arg>📊 Collected latest backup timestamps for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.716516" elapsed="0.000306"/>
</kw>
<return>
<value>${timestamps}</value>
<status status="PASS" start="2025-10-07T19:56:45.716908" elapsed="0.000045"/>
</return>
<msg time="2025-10-07T19:56:45.717166" level="INFO">${timestamp_data} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-07 16:56:45', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<var>${timestamp_data}</var>
<doc>Collect latest successful backup timestamps via API</doc>
<status status="PASS" start="2025-10-07T19:56:45.714648" elapsed="0.002550"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.717719" level="INFO">${TIMESTAMP_DATA} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-07 16:56:45', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<arg>${TIMESTAMP_DATA}</arg>
<arg>${timestamp_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:56:45.717490" elapsed="0.000277"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.718137" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T19:56:45.718203" level="INFO">${timestamp_count} = 4</msg>
<var>${timestamp_count}</var>
<arg>${timestamp_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.718013" elapsed="0.000210"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${timestamp_count} &gt; 0</arg>
<arg>msg=No backup timestamps found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:56:45.718434" elapsed="0.000196"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.718977" level="INFO">📊 Latest backup timestamps collected for 4 VMs</msg>
<arg>📊 Latest backup timestamps collected for ${timestamp_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.718841" elapsed="0.000303"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.721593" level="INFO">📊 VM: production-db-01 - Last Backup: 2025-10-07 16:56:45</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.719779" elapsed="0.002109"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-07 16:56:45', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-07T19:56:45.719658" elapsed="0.002368"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.724131" level="INFO">📊 VM: production-web-01 - Last Backup: 2025-10-07 11:56:45</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.722426" elapsed="0.001914"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-web-01', 'last_backup_time': '2025-10-07 11:56:45', 'backup_id': 'backup-production-web-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-07T19:56:45.722269" elapsed="0.002130"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.725856" level="INFO">📊 VM: production-app-01 - Last Backup: 2025-10-07 09:56:45</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.724704" elapsed="0.001374"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-app-01', 'last_backup_time': '2025-10-07 09:56:45', 'backup_id': 'backup-production-app-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-07T19:56:45.724577" elapsed="0.001559"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.727509" level="INFO">📊 VM: file-server-01 - Last Backup: 2025-10-07 04:56:45</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.726373" elapsed="0.001333"/>
</kw>
<var name="${timestamp}">{'vm_name': 'file-server-01', 'last_backup_time': '2025-10-07 04:56:45', 'backup_id': 'backup-file-server-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-07T19:56:45.726241" elapsed="0.001523"/>
</iter>
<var>${timestamp}</var>
<value>@{timestamp_data}</value>
<status status="PASS" start="2025-10-07T19:56:45.719371" elapsed="0.008428"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.728136" level="INFO">✅ Latest backup timestamps collection complete</msg>
<arg>✅ Latest backup timestamps collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.728024" elapsed="0.000314"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.729548" level="INFO">✅ Completed: Critical - Collect Latest Backup Timestamps - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.729395" elapsed="0.000359"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.729226" elapsed="0.000664"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.730062" elapsed="0.000024"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.729940" elapsed="0.000187"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.729206" elapsed="0.000945"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.728891" elapsed="0.001313"/>
</kw>
<doc>⏱️ Retrieve latest successful backup timestamps via API</doc>
<tag>backup_timestamp</tag>
<tag>critical</tag>
<tag>recency</tag>
<status status="PASS" start="2025-10-07T19:56:45.712487" elapsed="0.017898"/>
</test>
<test id="s1-s1-t7" name="Critical - Collect Offsite Replication Status" line="137">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.733204" level="INFO">🏁 Starting: Critical - Collect Offsite Replication Status</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.733061" elapsed="0.000330"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.732802" elapsed="0.000689"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.733805" level="INFO">🔍 Collecting offsite replication status...</msg>
<arg>🔍 Collecting offsite replication status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.733695" elapsed="0.000268"/>
</kw>
<kw name="Collect Offsite Replication Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.734809" level="INFO">📊 Collecting offsite replication status via API...</msg>
<arg>📊 Collecting offsite replication status via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.734659" elapsed="0.000328"/>
</kw>
<kw name="Vcenter Api Get Offsite Replication Status" owner="VCenterAPILibrary">
<msg time="2025-10-07T19:56:45.735384" level="INFO">${replication} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 13:56:45', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<var>${replication}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get offsite replication status for VMs via API</doc>
<status status="PASS" start="2025-10-07T19:56:45.735142" elapsed="0.000268"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.735601" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T19:56:45.735658" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${replication}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.735510" elapsed="0.000168"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.735891" level="INFO">📊 Collected offsite replication status for 4 VMs</msg>
<arg>📊 Collected offsite replication status for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.735765" elapsed="0.000280"/>
</kw>
<return>
<value>${replication}</value>
<status status="PASS" start="2025-10-07T19:56:45.736154" elapsed="0.000060"/>
</return>
<msg time="2025-10-07T19:56:45.736428" level="INFO">${replication_data} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 13:56:45', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<var>${replication_data}</var>
<doc>Collect offsite replication status via API</doc>
<status status="PASS" start="2025-10-07T19:56:45.734347" elapsed="0.002117"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.737058" level="INFO">${REPLICATION_DATA} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 13:56:45', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<arg>${REPLICATION_DATA}</arg>
<arg>${replication_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:56:45.736742" elapsed="0.000376"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.737451" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T19:56:45.737562" level="INFO">${replication_count} = 4</msg>
<var>${replication_count}</var>
<arg>${replication_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.737335" elapsed="0.000261"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${replication_count} &gt; 0</arg>
<arg>msg=No offsite replication data found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:56:45.737848" elapsed="0.000321"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.738640" level="INFO">📊 Offsite replication data collected for 4 VMs</msg>
<arg>📊 Offsite replication data collected for ${replication_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.738432" elapsed="0.000401"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.741103" level="INFO">📊 VM: production-db-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.739357" elapsed="0.001979"/>
</kw>
<var name="${replication}">{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 13:56:45', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-07T19:56:45.739235" elapsed="0.002175"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.743002" level="INFO">📊 VM: production-web-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.741675" elapsed="0.001560"/>
</kw>
<var name="${replication}">{'vm_name': 'production-web-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 13:56:45', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-07T19:56:45.741547" elapsed="0.001757"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.744813" level="INFO">📊 VM: production-app-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.743518" elapsed="0.001475"/>
</kw>
<var name="${replication}">{'vm_name': 'production-app-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 13:56:45', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-07T19:56:45.743413" elapsed="0.001637"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.747416" level="INFO">📊 VM: file-server-01 - Enabled: False, Target: None</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.745350" elapsed="0.002280"/>
</kw>
<var name="${replication}">{'vm_name': 'file-server-01', 'offsite_enabled': False, 'offsite_target': None, 'last_replication': None, 'replication_status': 'Disabled'}</var>
<status status="PASS" start="2025-10-07T19:56:45.745198" elapsed="0.002499"/>
</iter>
<var>${replication}</var>
<value>@{replication_data}</value>
<status status="PASS" start="2025-10-07T19:56:45.739008" elapsed="0.008743"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.748149" level="INFO">✅ Offsite replication status collection complete</msg>
<arg>✅ Offsite replication status collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.748032" elapsed="0.000274"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.749457" level="INFO">✅ Completed: Critical - Collect Offsite Replication Status - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.749288" elapsed="0.000380"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.749119" elapsed="0.000619"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.749901" elapsed="0.000023"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.749772" elapsed="0.000196"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.749097" elapsed="0.000894"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.748844" elapsed="0.001201"/>
</kw>
<doc>🌐 Retrieve offsite replication configuration and status via API</doc>
<tag>api_collection</tag>
<tag>critical</tag>
<tag>dr</tag>
<tag>offsite_replication</tag>
<status status="PASS" start="2025-10-07T19:56:45.732266" elapsed="0.017965"/>
</test>
<test id="s1-s1-t8" name="Critical - Validate Backup Policy Applied" line="157">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.751624" level="INFO">🏁 Starting: Critical - Validate Backup Policy Applied</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.751479" elapsed="0.000333"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.751229" elapsed="0.000663"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.752229" level="INFO">🔍 Validating backup policy application...</msg>
<arg>🔍 Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.752122" elapsed="0.000280"/>
</kw>
<kw name="Validate Backup Policy Applied" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.753079" level="INFO">✅ Validating backup policy application...</msg>
<arg>✅ Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.752959" elapsed="0.000289"/>
</kw>
<kw name="Backup Validator Validate Policies" owner="BackupValidator">
<msg time="2025-10-07T19:56:45.754002" level="INFO">${results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${results}</var>
<arg>${policy_data}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Validate all VMs have backup policies applied</doc>
<status status="PASS" start="2025-10-07T19:56:45.753595" elapsed="0.000454"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T19:56:45.754487" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T19:56:45.754249" elapsed="0.000279"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.754793" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T19:56:45.754871" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.754688" elapsed="0.000217"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.755238" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.755055" elapsed="0.000388"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T19:56:45.755559" elapsed="0.000045"/>
</return>
<msg time="2025-10-07T19:56:45.755745" level="INFO">${policy_results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${policy_results}</var>
<arg>${POLICY_DATA}</arg>
<doc>Validate all VMs have appropriate backup policies applied</doc>
<status status="PASS" start="2025-10-07T19:56:45.752713" elapsed="0.003059"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T19:56:45.757267" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${policy_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T19:56:45.756251" elapsed="0.001044"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.757721" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T19:56:45.757799" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.757596" elapsed="0.000224"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.758181" level="INFO">📊 Policy validation results: 0 violations found</msg>
<arg>📊 Policy validation results: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.758020" elapsed="0.000368"/>
</kw>
<if>
<branch type="IF" condition="${violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.758960" elapsed="0.000022"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T19:56:45.758867" elapsed="0.000159"/>
</iter>
<var>${violation}</var>
<value>@{violations}</value>
<status status="NOT RUN" start="2025-10-07T19:56:45.758795" elapsed="0.000260"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Backup policy validation failed: ${violation_count} VMs without proper policies</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.759152" elapsed="0.000100"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.758604" elapsed="0.000684"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.758576" elapsed="0.000734"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.759623" level="INFO">✅ Backup policy validation: All VMs have appropriate policies applied</msg>
<arg>✅ Backup policy validation: All VMs have appropriate policies applied</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.759507" elapsed="0.000301"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.760829" level="INFO">✅ Completed: Critical - Validate Backup Policy Applied - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.760636" elapsed="0.000355"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.760449" elapsed="0.000591"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.761189" elapsed="0.000027"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.761070" elapsed="0.000212"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.760429" elapsed="0.000884"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.760148" elapsed="0.001219"/>
</kw>
<doc>✅ Validate all VMs have appropriate backup policies applied</doc>
<tag>critical</tag>
<tag>policy_compliance</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-07T19:56:45.750671" elapsed="0.011006"/>
</test>
<test id="s1-s1-t9" name="Critical - Validate Schedule Alignment with RPO" line="181">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.763043" level="INFO">🏁 Starting: Critical - Validate Schedule Alignment with RPO</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.762914" elapsed="0.000321"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.762675" elapsed="0.000656"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.763699" level="INFO">🔍 Validating backup schedule alignment with RPO requirements...</msg>
<arg>🔍 Validating backup schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.763576" elapsed="0.000296"/>
</kw>
<kw name="Validate Schedule Alignment With RPO" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.764598" level="INFO">✅ Validating schedule alignment with RPO requirements...</msg>
<arg>✅ Validating schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.764462" elapsed="0.000287"/>
</kw>
<kw name="Backup Validator Validate Rpo Alignment" owner="BackupValidator">
<msg time="2025-10-07T19:56:45.765145" level="FAIL">TypeError: '&gt;' not supported between instances of 'int' and 'str'</msg>
<var>${results}</var>
<arg>${schedule_data}</arg>
<arg>${VM_CRITICALITY}</arg>
<arg>${RPO_REQUIREMENTS}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-07T19:56:45.764887" elapsed="0.003075">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.768152" elapsed="0.000027"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.768287" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${rpo_violation_count} RPO violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.768385" elapsed="0.000016"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T19:56:45.768443" elapsed="0.000017"/>
</return>
<var>${schedule_results}</var>
<arg>${SCHEDULE_DATA}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-07T19:56:45.764157" elapsed="0.004409">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${schedule_results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.768790" elapsed="0.000020"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.769009" elapsed="0.000019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 RPO validation results: ${rpo_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.769214" elapsed="0.000018"/>
</kw>
<if>
<branch type="IF" condition="${rpo_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ RPO Violation: VM ${violation['vm_name']} - Current: ${violation['current_rpo']}h, Required: ${violation['required_rpo']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.769574" elapsed="0.000017"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T19:56:45.769504" elapsed="0.000118"/>
</iter>
<var>${violation}</var>
<value>@{rpo_violations}</value>
<status status="NOT RUN" start="2025-10-07T19:56:45.769449" elapsed="0.000197"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>RPO validation failed: ${rpo_violation_count} VMs exceed RPO requirements</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.769721" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.769401" elapsed="0.000371"/>
</branch>
<status status="NOT RUN" start="2025-10-07T19:56:45.769381" elapsed="0.000412"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Schedule validation: All backup schedules meet RPO requirements</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.770010" elapsed="0.000019"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.771445" elapsed="0.000041"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.771056" elapsed="0.000475"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.771957" level="INFO">❌ Completed: Critical - Validate Schedule Alignment with RPO - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.771650" elapsed="0.000540"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.771560" elapsed="0.000688"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.771036" elapsed="0.001247"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.770693" elapsed="0.001651"/>
</kw>
<doc>✅ Validate backup schedules meet RPO requirements for data criticality</doc>
<tag>critical</tag>
<tag>rpo_compliance</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T19:56:45.762135" elapsed="0.010540">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</test>
<test id="s1-s1-t10" name="Critical - Validate Retention Settings Compliance" line="205">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.774399" level="INFO">🏁 Starting: Critical - Validate Retention Settings Compliance</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.774250" elapsed="0.000370"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.773968" elapsed="0.000723"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.775112" level="INFO">🔍 Validating retention settings compliance...</msg>
<arg>🔍 Validating retention settings compliance...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.774963" elapsed="0.000333"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.775673" level="INFO">📋 Minimum daily retention: 7 days</msg>
<arg>📋 Minimum daily retention: ${MIN_DAILY_RETENTION} days</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.775500" elapsed="0.000347"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.776187" level="INFO">📋 Minimum weekly retention: 4 weeks</msg>
<arg>📋 Minimum weekly retention: ${MIN_WEEKLY_RETENTION} weeks</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.776032" elapsed="0.000335"/>
</kw>
<kw name="Validate Retention Settings Compliance" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.777040" level="INFO">✅ Validating retention settings compliance...</msg>
<arg>✅ Validating retention settings compliance...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.776925" elapsed="0.000308"/>
</kw>
<kw name="Backup Validator Validate Retention Compliance" owner="BackupValidator">
<msg time="2025-10-07T19:56:45.777897" level="FAIL">TypeError: '&lt;' not supported between instances of 'int' and 'str'</msg>
<var>${results}</var>
<arg>${retention_data}</arg>
<arg>${MIN_DAILY_RETENTION}</arg>
<arg>${MIN_WEEKLY_RETENTION}</arg>
<arg>${MIN_MONTHLY_RETENTION}</arg>
<doc>Validate retention settings meet compliance standards</doc>
<status status="FAIL" start="2025-10-07T19:56:45.777450" elapsed="0.000977">TypeError: '&lt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.778560" elapsed="0.000029"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.778681" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.778776" elapsed="0.000025"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T19:56:45.778862" elapsed="0.000019"/>
</return>
<var>${retention_results}</var>
<arg>${RETENTION_DATA}</arg>
<doc>Validate retention settings meet compliance standards</doc>
<status status="FAIL" start="2025-10-07T19:56:45.776674" elapsed="0.002321">TypeError: '&lt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${retention_violations}</var>
<arg>${retention_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.779209" elapsed="0.000018"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${retention_violation_count}</var>
<arg>${retention_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.779413" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Retention validation results: ${retention_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.779609" elapsed="0.000018"/>
</kw>
<if>
<branch type="IF" condition="${retention_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Retention Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.779965" elapsed="0.000017"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T19:56:45.779894" elapsed="0.000129"/>
</iter>
<var>${violation}</var>
<value>@{retention_violations}</value>
<status status="NOT RUN" start="2025-10-07T19:56:45.779839" elapsed="0.000208"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Retention validation failed: ${retention_violation_count} VMs with insufficient retention</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.780124" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.779788" elapsed="0.000376"/>
</branch>
<status status="NOT RUN" start="2025-10-07T19:56:45.779766" elapsed="0.000418"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Retention validation: All settings meet compliance standards</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.780443" elapsed="0.000019"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.781237" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.781072" elapsed="0.000349"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.781704" level="INFO">❌ Completed: Critical - Validate Retention Settings Compliance - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.781539" elapsed="0.000378"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.781452" elapsed="0.000521"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.781057" elapsed="0.000955"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.780815" elapsed="0.001252"/>
</kw>
<doc>✅ Validate retention settings meet compliance standards</doc>
<tag>critical</tag>
<tag>retention_compliance</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T19:56:45.773448" elapsed="0.008774">TypeError: '&lt;' not supported between instances of 'int' and 'str'</status>
</test>
<test id="s1-s1-t11" name="Critical - Validate Recent Job Completion Status" line="231">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.783694" level="INFO">🏁 Starting: Critical - Validate Recent Job Completion Status</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.783562" elapsed="0.000326"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.783332" elapsed="0.000649"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.784294" level="INFO">🔍 Validating recent backup job completion status...</msg>
<arg>🔍 Validating recent backup job completion status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.784188" elapsed="0.000309"/>
</kw>
<kw name="Validate Recent Job Completion Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.785255" level="INFO">✅ Validating recent backup job completion status...</msg>
<arg>✅ Validating recent backup job completion status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.785133" elapsed="0.000303"/>
</kw>
<kw name="Backup Validator Validate Job Status" owner="BackupValidator">
<msg time="2025-10-07T19:56:45.794196" level="INFO">${results} = {'failed_jobs': [], 'total_jobs': 12, 'successful_jobs': 12}</msg>
<var>${results}</var>
<arg>${job_status}</arg>
<doc>Validate recent backup jobs completed successfully</doc>
<status status="PASS" start="2025-10-07T19:56:45.785599" elapsed="0.008640"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T19:56:45.794578" level="INFO">${failed_jobs} = []</msg>
<var>${failed_jobs}</var>
<arg>${results}</arg>
<arg>failed_jobs</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T19:56:45.794401" elapsed="0.000199"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.794788" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T19:56:45.794847" level="INFO">${failed_count} = 0</msg>
<var>${failed_count}</var>
<arg>${failed_jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.794696" elapsed="0.000170"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.795111" level="INFO">📊 Validation complete: 0 failed jobs found</msg>
<arg>📊 Validation complete: ${failed_count} failed jobs found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.794967" elapsed="0.000844"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T19:56:45.795888" elapsed="0.000044"/>
</return>
<msg time="2025-10-07T19:56:45.796122" level="INFO">${job_results} = {'failed_jobs': [], 'total_jobs': 12, 'successful_jobs': 12}</msg>
<var>${job_results}</var>
<arg>${JOB_STATUS}</arg>
<doc>Validate recent backup jobs completed successfully</doc>
<status status="PASS" start="2025-10-07T19:56:45.784822" elapsed="0.011330"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T19:56:45.796593" level="INFO">${failed_jobs} = []</msg>
<var>${failed_jobs}</var>
<arg>${job_results}</arg>
<arg>failed_jobs</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T19:56:45.796392" elapsed="0.000229"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.796980" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T19:56:45.797054" level="INFO">${failed_count} = 0</msg>
<var>${failed_count}</var>
<arg>${failed_jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.796860" elapsed="0.000223"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.797564" level="INFO">📊 Job validation results: 0 failed jobs found</msg>
<arg>📊 Job validation results: ${failed_count} failed jobs found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.797349" elapsed="0.000840"/>
</kw>
<if>
<branch type="IF" condition="${failed_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Failed Job: VM ${failed['vm_name']} - Status: ${failed['status']}, Error: ${failed['error_message']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.798642" elapsed="0.000018"/>
</kw>
<var name="${failed}"/>
<status status="NOT RUN" start="2025-10-07T19:56:45.798568" elapsed="0.000127"/>
</iter>
<var>${failed}</var>
<value>@{failed_jobs}</value>
<status status="NOT RUN" start="2025-10-07T19:56:45.798512" elapsed="0.000208"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Job validation failed: ${failed_count} backup jobs failed</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.798802" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.798347" elapsed="0.000496"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.798324" elapsed="0.000540"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.799152" level="INFO">✅ Job validation: All recent backup jobs completed successfully</msg>
<arg>✅ Job validation: All recent backup jobs completed successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.799046" elapsed="0.000290"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.800258" level="INFO">✅ Completed: Critical - Validate Recent Job Completion Status - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.800107" elapsed="0.000345"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.799952" elapsed="0.000559"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.800646" elapsed="0.000037"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.800546" elapsed="0.000235"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.799937" elapsed="0.000867"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.799689" elapsed="0.001161"/>
</kw>
<doc>✅ Validate recent backup jobs completed successfully</doc>
<tag>critical</tag>
<tag>job_success</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-07T19:56:45.782845" elapsed="0.018208"/>
</test>
<test id="s1-s1-t12" name="Critical - Validate Backup Recency" line="255">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.802366" level="INFO">🏁 Starting: Critical - Validate Backup Recency</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.802238" elapsed="0.000307"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.802016" elapsed="0.000635"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.803060" level="INFO">🔍 Validating backup recency...</msg>
<arg>🔍 Validating backup recency...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.802933" elapsed="0.000280"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.803742" level="INFO">📋 Maximum backup age: 26 hours</msg>
<arg>📋 Maximum backup age: ${MAX_BACKUP_AGE_HOURS} hours</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.803462" elapsed="0.000452"/>
</kw>
<kw name="Validate Backup Recency" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.804594" level="INFO">✅ Validating backup recency...</msg>
<arg>✅ Validating backup recency...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.804480" elapsed="0.000291"/>
</kw>
<kw name="Backup Validator Validate Backup Recency" owner="BackupValidator">
<msg time="2025-10-07T19:56:45.805280" level="FAIL">TypeError: '&gt;' not supported between instances of 'float' and 'str'</msg>
<var>${results}</var>
<arg>${timestamp_data}</arg>
<arg>${MAX_BACKUP_AGE_HOURS}</arg>
<doc>Validate backups are recent and within acceptable time windows</doc>
<status status="FAIL" start="2025-10-07T19:56:45.804945" elapsed="0.000968">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${stale_backups}</var>
<arg>${results}</arg>
<arg>stale_backups</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.806085" elapsed="0.000029"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${stale_count}</var>
<arg>${stale_backups}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.806226" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${stale_count} stale backups found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.806326" elapsed="0.000030"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T19:56:45.806401" elapsed="0.000018"/>
</return>
<var>${recency_results}</var>
<arg>${TIMESTAMP_DATA}</arg>
<doc>Validate backups are recent and within acceptable time windows</doc>
<status status="FAIL" start="2025-10-07T19:56:45.804230" elapsed="0.002312">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${stale_backups}</var>
<arg>${recency_results}</arg>
<arg>stale_backups</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.806788" elapsed="0.000021"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${stale_count}</var>
<arg>${stale_backups}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.807015" elapsed="0.000019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Recency validation results: ${stale_count} stale backups found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.807215" elapsed="0.000018"/>
</kw>
<if>
<branch type="IF" condition="${stale_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Stale Backup: VM ${stale['vm_name']} - Last backup: ${stale['last_backup_time']}, Age: ${stale['age_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.807583" elapsed="0.000016"/>
</kw>
<var name="${stale}"/>
<status status="NOT RUN" start="2025-10-07T19:56:45.807510" elapsed="0.000123"/>
</iter>
<var>${stale}</var>
<value>@{stale_backups}</value>
<status status="NOT RUN" start="2025-10-07T19:56:45.807454" elapsed="0.000203"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Recency validation failed: ${stale_count} VMs have stale backups</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.807735" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.807401" elapsed="0.000374"/>
</branch>
<status status="NOT RUN" start="2025-10-07T19:56:45.807380" elapsed="0.000416"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Recency validation: All backups are current and within acceptable time windows</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.807989" elapsed="0.000018"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.808877" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.808709" elapsed="0.000219"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.809210" level="INFO">❌ Completed: Critical - Validate Backup Recency - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.809033" elapsed="0.000391"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.808949" elapsed="0.000533"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.808693" elapsed="0.000824"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.808441" elapsed="0.001138"/>
</kw>
<doc>✅ Validate backups are recent and within acceptable time windows</doc>
<tag>backup_recency</tag>
<tag>critical</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T19:56:45.801542" elapsed="0.008214">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</test>
<test id="s1-s1-t13" name="Critical - Validate Offsite Replication Configuration" line="280">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.811520" level="INFO">🏁 Starting: Critical - Validate Offsite Replication Configuration</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.811380" elapsed="0.000338"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.811060" elapsed="0.000740"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.812212" level="INFO">🔍 Validating offsite replication configuration...</msg>
<arg>🔍 Validating offsite replication configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.812076" elapsed="0.000334"/>
</kw>
<kw name="Validate Offsite Replication Configuration" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.813086" level="INFO">✅ Validating offsite replication configuration...</msg>
<arg>✅ Validating offsite replication configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.812986" elapsed="0.000265"/>
</kw>
<kw name="Backup Validator Validate Offsite Replication" owner="BackupValidator">
<msg time="2025-10-07T19:56:45.813626" level="INFO">${results} = {'violations': [], 'total_required_vms': 3, 'compliant_vms': 3}</msg>
<var>${results}</var>
<arg>${replication_data}</arg>
<arg>${OFFSITE_REQUIRED_VMS}</arg>
<doc>Validate offsite replication is enabled for critical VMs</doc>
<status status="PASS" start="2025-10-07T19:56:45.813386" elapsed="0.000270"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T19:56:45.813944" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T19:56:45.813774" elapsed="0.000196"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.814177" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T19:56:45.814250" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.814077" elapsed="0.000196"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.814578" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.814411" elapsed="0.000318"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T19:56:45.814832" elapsed="0.000046"/>
</return>
<msg time="2025-10-07T19:56:45.815080" level="INFO">${replication_results} = {'violations': [], 'total_required_vms': 3, 'compliant_vms': 3}</msg>
<var>${replication_results}</var>
<arg>${REPLICATION_DATA}</arg>
<doc>Validate offsite replication is enabled for critical VMs</doc>
<status status="PASS" start="2025-10-07T19:56:45.812720" elapsed="0.002399"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T19:56:45.815526" level="INFO">${offsite_violations} = []</msg>
<var>${offsite_violations}</var>
<arg>${replication_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T19:56:45.815365" elapsed="0.000184"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.815861" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T19:56:45.815925" level="INFO">${offsite_violation_count} = 0</msg>
<var>${offsite_violation_count}</var>
<arg>${offsite_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.815755" elapsed="0.000189"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.816331" level="INFO">📊 Offsite validation results: 0 violations found</msg>
<arg>📊 Offsite validation results: ${offsite_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.816179" elapsed="0.000356"/>
</kw>
<if>
<branch type="IF" condition="${offsite_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Offsite Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.816984" elapsed="0.000018"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T19:56:45.816908" elapsed="0.000130"/>
</iter>
<var>${violation}</var>
<value>@{offsite_violations}</value>
<status status="NOT RUN" start="2025-10-07T19:56:45.816855" elapsed="0.000206"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Offsite replication validation failed: ${offsite_violation_count} VMs missing offsite protection</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.817138" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.816691" elapsed="0.000488"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.816670" elapsed="0.000529"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.817543" level="INFO">✅ Offsite validation: Critical VMs have proper offsite replication configured</msg>
<arg>✅ Offsite validation: Critical VMs have proper offsite replication configured</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.817432" elapsed="0.000303"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.818642" level="INFO">✅ Completed: Critical - Validate Offsite Replication Configuration - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.818489" elapsed="0.000327"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.818333" elapsed="0.000571"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.819072" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.818955" elapsed="0.000168"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.818317" elapsed="0.000826"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.818079" elapsed="0.001107"/>
</kw>
<doc>✅ Validate offsite replication is enabled for critical VMs</doc>
<tag>critical</tag>
<tag>dr</tag>
<tag>offsite_compliance</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-07T19:56:45.810431" elapsed="0.008970"/>
</test>
<test id="s1-s1-t14" name="Normal - Comprehensive Backup Compliance Validation" line="304">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.821145" level="INFO">🏁 Starting: Normal - Comprehensive Backup Compliance Validation</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.821000" elapsed="0.000331"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.820715" elapsed="0.000821"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.821937" level="INFO">🔍 Performing comprehensive backup compliance validation...</msg>
<arg>🔍 Performing comprehensive backup compliance validation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.821819" elapsed="0.000284"/>
</kw>
<kw name="Validate Complete Backup Compliance" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.822921" level="INFO">🔍 Performing comprehensive backup compliance validation...</msg>
<arg>🔍 Performing comprehensive backup compliance validation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.822761" elapsed="0.000332"/>
</kw>
<kw name="Validate Backup Policy Applied" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.823764" level="INFO">✅ Validating backup policy application...</msg>
<arg>✅ Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.823591" elapsed="0.000338"/>
</kw>
<kw name="Backup Validator Validate Policies" owner="BackupValidator">
<msg time="2025-10-07T19:56:45.824359" level="INFO">${results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${results}</var>
<arg>${policy_data}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Validate all VMs have backup policies applied</doc>
<status status="PASS" start="2025-10-07T19:56:45.824112" elapsed="0.000272"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T19:56:45.824616" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T19:56:45.824483" elapsed="0.000154"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.824836" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T19:56:45.824897" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:56:45.824737" elapsed="0.000178"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.825143" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.825011" elapsed="0.000287"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T19:56:45.825369" elapsed="0.000042"/>
</return>
<msg time="2025-10-07T19:56:45.825565" level="INFO">${policy_validation} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${policy_validation}</var>
<arg>${POLICY_DATA}</arg>
<doc>Validate all VMs have appropriate backup policies applied</doc>
<status status="PASS" start="2025-10-07T19:56:45.823342" elapsed="0.002253"/>
</kw>
<kw name="Validate Schedule Alignment With RPO" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.826197" level="INFO">✅ Validating schedule alignment with RPO requirements...</msg>
<arg>✅ Validating schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.826066" elapsed="0.000291"/>
</kw>
<kw name="Backup Validator Validate Rpo Alignment" owner="BackupValidator">
<msg time="2025-10-07T19:56:45.826728" level="FAIL">TypeError: '&gt;' not supported between instances of 'int' and 'str'</msg>
<var>${results}</var>
<arg>${schedule_data}</arg>
<arg>${VM_CRITICALITY}</arg>
<arg>${RPO_REQUIREMENTS}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-07T19:56:45.826485" elapsed="0.000644">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.827250" elapsed="0.000018"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.827364" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${rpo_violation_count} RPO violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.827472" elapsed="0.000015"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T19:56:45.827525" elapsed="0.000015"/>
</return>
<var>${rpo_validation}</var>
<arg>${SCHEDULE_DATA}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-07T19:56:45.825771" elapsed="0.001846">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Validate Retention Settings Compliance" owner="backup_keywords">
<var>${retention_validation}</var>
<arg>${RETENTION_DATA}</arg>
<doc>Validate retention settings meet compliance standards</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.827765" elapsed="0.000021"/>
</kw>
<kw name="Validate Recent Job Completion Status" owner="backup_keywords">
<var>${job_validation}</var>
<arg>${JOB_STATUS}</arg>
<doc>Validate recent backup jobs completed successfully</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.827907" elapsed="0.000018"/>
</kw>
<kw name="Validate Backup Recency" owner="backup_keywords">
<var>${recency_validation}</var>
<arg>${TIMESTAMP_DATA}</arg>
<doc>Validate backups are recent and within acceptable time windows</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.828042" elapsed="0.000026"/>
</kw>
<kw name="Validate Offsite Replication Configuration" owner="backup_keywords">
<var>${offsite_validation}</var>
<arg>${REPLICATION_DATA}</arg>
<doc>Validate offsite replication is enabled for critical VMs</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.828193" elapsed="0.000019"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${total_violations}</var>
<arg>${policy_validation}['violations'].__len__() + ${rpo_validation}['rpo_violations'].__len__() + ${retention_validation}['violations'].__len__() + ${job_validation}['failed_jobs'].__len__() + ${recency_validation}['stale_backups'].__len__() + ${offsite_validation}['violations'].__len__()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.828292" elapsed="0.000016"/>
</kw>
<if>
<branch type="IF" condition="${total_violations} &gt; 0">
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Comprehensive validation found ${total_violations} total issues</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.828458" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.828375" elapsed="0.000127"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>✅ Comprehensive validation: All checks passed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.828606" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.828534" elapsed="0.000172"/>
</branch>
<status status="NOT RUN" start="2025-10-07T19:56:45.828356" elapsed="0.000371"/>
</if>
<return>
<value>${total_violations}</value>
<status status="NOT RUN" start="2025-10-07T19:56:45.828757" elapsed="0.000012"/>
</return>
<doc>Perform comprehensive backup compliance validation</doc>
<status status="FAIL" start="2025-10-07T19:56:45.822545" elapsed="0.006292">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Comprehensive validation summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.829070" elapsed="0.000020"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - vCenter API connection: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.829290" elapsed="0.000019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Backup policies applied: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.829500" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Schedule alignment with RPO: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.829703" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Retention settings compliance: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.829906" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Recent job completion: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.830099" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Backup recency: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.830402" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Offsite replication: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.830602" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Comprehensive backup compliance validation: PASSED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.830792" elapsed="0.000017"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:45.831636" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:56:45.831471" elapsed="0.000221"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.831953" level="INFO">❌ Completed: Normal - Comprehensive Backup Compliance Validation - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.831791" elapsed="0.000385"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.831715" elapsed="0.000517"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.831449" elapsed="0.000819"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:56:45.831190" elapsed="0.001129"/>
</kw>
<doc>🔗 Perform comprehensive validation of all backup compliance aspects</doc>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T19:56:45.819982" elapsed="0.012505">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</test>
<kw name="Generate Backup Validation Executive Summary" owner="backup_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.834030" level="INFO">📊 Generating Backup Validation Executive Summary...</msg>
<arg>📊 Generating Backup Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.833922" elapsed="0.000273"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T19:56:45.834584" level="INFO">${end_time} = 2025-10-07 19:56:45</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T19:56:45.834358" elapsed="0.000251"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.835668" level="INFO">${TEST_END_TIME} = 2025-10-07 19:56:45</msg>
<arg>${TEST_END_TIME}</arg>
<arg>${end_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T19:56:45.834710" elapsed="0.001011"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.835927" level="INFO">${summary_file} = results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T19:56:45.835812" elapsed="0.000136"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.836312" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 19:56:45
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>💾 TEST-15: BACKUP VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${end_time}</arg>
<arg>🎯 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>📋 Test Suite: Test-15 Backup Configuration Validation</arg>
<arg>========================================</arg>
<arg>📋 TEST OBJECTIVES</arg>
<arg>========================================</arg>
<arg>1. Connect to vCenter REST API</arg>
<arg>2. Collect backup configuration via API calls</arg>
<arg>3. Validate backup compliance against standards</arg>
<arg>========================================</arg>
<arg>📊 VALIDATION SCOPE</arg>
<arg>========================================</arg>
<arg>✅ Backup policy application</arg>
<arg>✅ Schedule alignment with RPO</arg>
<arg>✅ Retention settings compliance</arg>
<arg>✅ Recent job completion status</arg>
<arg>✅ Backup recency validation</arg>
<arg>✅ Offsite replication configuration</arg>
<arg>========================================</arg>
<arg>📋 TARGET VMS</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T19:56:45.836030" elapsed="0.000311"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.836825" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 19:56:45
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T19:56:45.836650" elapsed="0.000293"/>
</kw>
<var name="${vm}">production-db-01</var>
<status status="PASS" start="2025-10-07T19:56:45.836581" elapsed="0.000486"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.837480" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 19:56:45
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T19:56:45.837278" elapsed="0.000232"/>
</kw>
<var name="${vm}">production-web-01</var>
<status status="PASS" start="2025-10-07T19:56:45.837185" elapsed="0.000366"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.837866" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 19:56:45
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T19:56:45.837691" elapsed="0.000203"/>
</kw>
<var name="${vm}">production-app-01</var>
<status status="PASS" start="2025-10-07T19:56:45.837621" elapsed="0.000313"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.838877" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 19:56:45
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T19:56:45.838073" elapsed="0.000859"/>
</kw>
<var name="${vm}">file-server-01</var>
<status status="PASS" start="2025-10-07T19:56:45.838000" elapsed="0.000983"/>
</iter>
<var>${vm}</var>
<value>@{TARGET_VMS}</value>
<status status="PASS" start="2025-10-07T19:56:45.836462" elapsed="0.002552"/>
</for>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.839545" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 19:56:45
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>========================================</arg>
<arg>🔍 COMPLIANCE REQUIREMENTS</arg>
<arg>========================================</arg>
<arg>📅 Maximum backup age: ${MAX_BACKUP_AGE_HOURS} hours</arg>
<arg>💾 Minimum daily retention: ${MIN_DAILY_RETENTION} days</arg>
<arg>📦 Minimum weekly retention: ${MIN_WEEKLY_RETENTION} weeks</arg>
<arg>🌐 Offsite replication: Required for critical VMs</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 API data collected in JSON format</arg>
<arg>📊 Robot Framework reports: results/test15_backup_validation/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>💾 Backup policies validated</arg>
<arg>📅 Schedule compliance verified</arg>
<arg>🗄️ Retention settings confirmed</arg>
<arg>🌐 Offsite replication validated</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T19:56:45.839119" elapsed="0.000456"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T19:56:45.842038" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation\Test15_Backup_Validation_Executive_Summary.txt"&gt;C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation\Test15_Backup_Validation_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-07T19:56:45.839756" elapsed="0.002378"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.842439" level="INFO">📊 Executive summary generated: results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.842267" elapsed="0.000368"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.842889" level="INFO">✅ Test-15 Backup Validation completed successfully!</msg>
<arg>✅ Test-15 Backup Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.842764" elapsed="0.000289"/>
</kw>
<if>
<branch type="IF" condition="${VCENTER_API_CONN}">
<kw name="Vcenter Api Disconnect" owner="VCenterAPILibrary">
<arg>${VCENTER_API_CONN}</arg>
<doc>Disconnect from vCenter API</doc>
<status status="PASS" start="2025-10-07T19:56:45.843386" elapsed="0.000165"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:56:45.843870" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:56:45.843693" elapsed="0.000349"/>
</kw>
<status status="PASS" start="2025-10-07T19:56:45.843179" elapsed="0.000937"/>
</branch>
<status status="PASS" start="2025-10-07T19:56:45.843147" elapsed="0.001007"/>
</if>
<doc>Generate executive summary report for backup validation test</doc>
<status status="PASS" start="2025-10-07T19:56:45.833765" elapsed="0.010445"/>
</kw>
<doc>💾 Backup Configuration Validation Test Suite - Test-15
🔍 Process: Connect to vCenter API → Collect Backup Configuration → Validate Backup Compliance
✅ Pass if backup configuration meets data criticality requirements and compliance standards
📊 Validates: Backup policies, schedules, retention, job status, offsite replication</doc>
<status status="FAIL" start="2025-10-07T19:56:45.346541" elapsed="0.497702"/>
</suite>
<suite id="s1-s2" name="Network Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test3_network_validation\network_validation.robot">
<kw name="Initialize Test Environment And Lookup Configuration" owner="network_keywords" type="SETUP">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T19:56:58.835695" level="INFO">${start_time} = 2025-10-07 19:56:58</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T19:56:58.835337" elapsed="0.000400"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.836850" level="INFO">${TEST_START_TIME} = 2025-10-07 19:56:58</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:56:58.835891" elapsed="0.001019"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${TEST_SUITE_ID}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T19:56:58.838208" elapsed="0.000192"/>
</kw>
<msg time="2025-10-07T19:56:58.838798" level="INFO">${suite_id} = test3</msg>
<var>${suite_id}</var>
<arg>'${TEST_SUITE_ID}' == '${EMPTY}'</arg>
<arg>Auto Detect Test Suite ID</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${TEST_SUITE_ID}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T19:56:58.837032" elapsed="0.001832"/>
</kw>
<kw name="Auto Detect Test Suite Name" owner="network_keywords">
<kw name="Get Variable Value" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.839766" level="INFO">${suite_source} = C:\Users\write\project_2025\robot\robotframework\tests\test3_network_validation\network_validation.robot</msg>
<var>${suite_source}</var>
<arg>${SUITE_SOURCE}</arg>
<arg>${EMPTY}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<status status="PASS" start="2025-10-07T19:56:58.839497" elapsed="0.000311"/>
</kw>
<kw name="Split String" owner="String">
<msg time="2025-10-07T19:56:58.840174" level="INFO">${path_parts} = ['C:', 'Users', 'write', 'project_2025', 'robot', 'robotframework', 'tests', 'test3_network_validation', 'network_validation.robot']</msg>
<var>${path_parts}</var>
<arg>${suite_source}</arg>
<arg>${/}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-10-07T19:56:58.839949" elapsed="0.000256"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.841003" level="FAIL">'C:' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T19:56:58.840731" elapsed="0.000448">'C:' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T19:56:58.841292" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T19:56:58.840588" elapsed="0.000728"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T19:56:58.841427" elapsed="0.000096"/>
</kw>
<var name="${part}">C:</var>
<status status="PASS" start="2025-10-07T19:56:58.840493" elapsed="0.001065"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.841993" level="FAIL">'Users' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T19:56:58.841843" elapsed="0.000213">'Users' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T19:56:58.842136" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T19:56:58.841729" elapsed="0.000428"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T19:56:58.842255" elapsed="0.000086"/>
</kw>
<var name="${part}">Users</var>
<status status="PASS" start="2025-10-07T19:56:58.841646" elapsed="0.000741"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.842773" level="FAIL">'write' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T19:56:58.842643" elapsed="0.000179">'write' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T19:56:58.842903" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T19:56:58.842538" elapsed="0.000385"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T19:56:58.843018" elapsed="0.000084"/>
</kw>
<var name="${part}">write</var>
<status status="PASS" start="2025-10-07T19:56:58.842464" elapsed="0.000672"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.843538" level="FAIL">'project_2025' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T19:56:58.843393" elapsed="0.000193">'project_2025' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T19:56:58.843660" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T19:56:58.843289" elapsed="0.000391"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T19:56:58.843776" elapsed="0.000086"/>
</kw>
<var name="${part}">project_2025</var>
<status status="PASS" start="2025-10-07T19:56:58.843217" elapsed="0.000677"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.844261" level="FAIL">'robot' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T19:56:58.844138" elapsed="0.000170">'robot' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T19:56:58.844590" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T19:56:58.844035" elapsed="0.000578"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T19:56:58.844717" elapsed="0.000091"/>
</kw>
<var name="${part}">robot</var>
<status status="PASS" start="2025-10-07T19:56:58.843963" elapsed="0.000878"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.845233" level="FAIL">'robotframework' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T19:56:58.845094" elapsed="0.000188">'robotframework' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T19:56:58.845357" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T19:56:58.844988" elapsed="0.000388"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T19:56:58.845470" elapsed="0.000080"/>
</kw>
<var name="${part}">robotframework</var>
<status status="PASS" start="2025-10-07T19:56:58.844914" elapsed="0.000669"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.846118" level="FAIL">'tests' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T19:56:58.845923" elapsed="0.000249">'tests' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T19:56:58.846267" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T19:56:58.845787" elapsed="0.000500"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T19:56:58.846389" elapsed="0.000088"/>
</kw>
<var name="${part}">tests</var>
<status status="PASS" start="2025-10-07T19:56:58.845665" elapsed="0.000846"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-07T19:56:58.846765" elapsed="0.000109"/>
</kw>
<msg time="2025-10-07T19:56:58.846942" level="INFO">${is_test_dir} = True</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T19:56:58.846658" elapsed="0.000304"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Return From Keyword" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.847290" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>${part}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" start="2025-10-07T19:56:58.847234" elapsed="0.000106"/>
</kw>
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T19:56:58.847085" elapsed="0.000295"/>
</kw>
<var name="${part}">test3_network_validation</var>
<status status="PASS" start="2025-10-07T19:56:58.846585" elapsed="0.000827"/>
</iter>
<var>${part}</var>
<value>@{path_parts}</value>
<status status="PASS" start="2025-10-07T19:56:58.840320" elapsed="0.007119"/>
</for>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Could not auto-detect test suite name, defaulting to test3_network_validation</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.847536" elapsed="0.000018"/>
</kw>
<return>
<value>test3_network_validation</value>
<status status="NOT RUN" start="2025-10-07T19:56:58.847598" elapsed="0.000023"/>
</return>
<msg time="2025-10-07T19:56:58.847740" level="INFO">${suite_name} = test3_network_validation</msg>
<var>${suite_name}</var>
<doc>Auto-detect full test suite name from current working directory or test file path</doc>
<status status="PASS" start="2025-10-07T19:56:58.839230" elapsed="0.008531"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.848003" level="INFO">${TEST_SUITE_ID} = test3</msg>
<arg>${TEST_SUITE_ID}</arg>
<arg>${suite_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:56:58.847856" elapsed="0.000180"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.848267" level="INFO">${TEST_SUITE_NAME} = Hostname Validation Test Suite - test3</msg>
<arg>${TEST_SUITE_NAME}</arg>
<arg>Hostname Validation Test Suite - ${suite_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:56:58.848127" elapsed="0.000171"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.848537" level="INFO">${TEST_REPORTS_DIR} = C:\Users\write\project_2025\robot\robotframework/results/test3_network_validation</msg>
<arg>${TEST_REPORTS_DIR}</arg>
<arg>${REPORTS_DIR}/${suite_name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:56:58.848385" elapsed="0.000183"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:56:58.848790" level="INFO">${DATA_DIR} = C:\Users\write\project_2025\robot\robotframework/results/test3_network_validation/data</msg>
<arg>${DATA_DIR}</arg>
<arg>${TEST_REPORTS_DIR}/data</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:56:58.848657" elapsed="0.000164"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T19:56:58.849066" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results"&gt;C:\Users\write\project_2025\robot\robotframework\results&lt;/a&gt;' already exists.</msg>
<arg>${REPORTS_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T19:56:58.848903" elapsed="0.000210"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T19:56:58.849340" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test3_network_validation"&gt;C:\Users\write\project_2025\robot\robotframework\results\test3_network_validation&lt;/a&gt;' already exists.</msg>
<arg>${TEST_REPORTS_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T19:56:58.849209" elapsed="0.000277"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T19:56:58.849719" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test3_network_validation\data"&gt;C:\Users\write\project_2025\robot\robotframework\results\test3_network_validation\data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T19:56:58.849583" elapsed="0.000182"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n🔍 Looking up configuration for hostname: ${TARGET_HOSTNAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T19:56:58.849854" elapsed="0.000434"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-07T19:56:58.877362" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T19:56:58.877623" level="INFO">Available hostnames: ['alhxvdvitap01', 'alhxvdvitag01', 'alhxvqaitiap01', 'alhxvqaitiap02', 'alhxvqaitred01', 'alhxvqaitred02', 'alhxvqaitred03', 'alhxvqaitmdb01', 'alhxvqaitmdb02', 'alhxvqaitmdb03', 'alhxvqaitag01', 'alhxvqaitag02', 'alhxvpritiap01', 'alhxvpritiap02']</msg>
<msg time="2025-10-07T19:56:58.877753" level="FAIL">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</msg>
<var>${config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="FAIL" start="2025-10-07T19:56:58.850403" elapsed="0.044623">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_IP}</arg>
<arg>${config}[ip]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.895324" elapsed="0.000029"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_SUBNET}</arg>
<arg>${config}[subnet]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.895453" elapsed="0.000017"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_MASK}</arg>
<arg>${config}[mask]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.895569" elapsed="0.000016"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_GATEWAY}</arg>
<arg>${config}[gateway]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.895667" elapsed="0.000015"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_CNAME}</arg>
<arg>${config}[cname]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.895761" elapsed="0.000015"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_DOMAIN}</arg>
<arg>${config}[domain]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.895855" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n📋 EDS Configuration for ${TARGET_HOSTNAME}:</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.895956" elapsed="0.000015"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 IP: ${TARGET_IP}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.896080" elapsed="0.000031"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 Subnet: ${TARGET_SUBNET}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.896243" elapsed="0.000032"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 Gateway: ${TARGET_GATEWAY}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.896371" elapsed="0.000016"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 CNAME: ${TARGET_CNAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.896479" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 Domain: ${TARGET_DOMAIN}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.896567" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n🚀 ===================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.896654" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🌐 NETWORK VALIDATION: EDS vs SERVER COMPARISON</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.896741" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>⚡ Test Suite: ${suite_id} (${TEST_SUITE_NAME})</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.896825" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>═══════════════════════════════════════════════════</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.896912" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📅 Start Time: ${start_time}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.896995" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🎯 Target Hostname: ${TARGET_HOSTNAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.897078" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🌐 SSH Target IP: ${TARGET_IP}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.897162" elapsed="0.000024"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 Suite Reports: ${TEST_REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.897274" elapsed="0.000016"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 Overall Reports: ${REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.897371" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>===================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T19:56:58.897454" elapsed="0.000014"/>
</kw>
<doc>🚀 Load EDS configuration and prepare for server validation</doc>
<status status="FAIL" start="2025-10-07T19:56:58.834364" elapsed="0.063227">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<test id="s1-s2-t1" name="Critical - Hostname Validation" line="18">
<doc>🔧 SSH to server and compare hostname with EDS expectation</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hostname</tag>
<status status="FAIL" start="2025-10-07T19:56:58.897686" elapsed="0.000604">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s2-t2" name="Critical - IP Address Validation" line="37">
<doc>🌐 SSH to server and compare IP configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>ip</tag>
<tag>networking</tag>
<status status="FAIL" start="2025-10-07T19:56:58.898836" elapsed="0.000477">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s2-t3" name="Critical - Subnet Validation" line="56">
<doc>🌍 SSH to server and compare subnet configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>networking</tag>
<tag>subnet</tag>
<status status="FAIL" start="2025-10-07T19:56:58.899696" elapsed="0.000379">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s2-t4" name="Critical - Gateway Validation" line="75">
<doc>🛣️ SSH to server and compare gateway configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>gateway</tag>
<tag>networking</tag>
<status status="FAIL" start="2025-10-07T19:56:58.900660" elapsed="0.000444">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s2-t5" name="Critical - DNS Name Validation" line="94">
<doc>🌐 SSH to server and compare DNS configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>dns</tag>
<tag>hostname</tag>
<status status="FAIL" start="2025-10-07T19:56:58.901647" elapsed="0.000357">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s2-t6" name="Normal - NTP Configuration Validation" line="117">
<doc>📈 SSH to server and validate NTP service is running</doc>
<tag>normal</tag>
<tag>ntp</tag>
<tag>time</tag>
<status status="FAIL" start="2025-10-07T19:56:58.902517" elapsed="0.000355">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<kw name="Generate Executive Summary" owner="network_keywords" type="TEARDOWN">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T19:56:58.904488" level="INFO">${end_time} = 2025-10-07 19:56:58</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T19:56:58.904130" elapsed="0.000410"/>
</kw>
<kw name="Subtract Date From Date" owner="DateTime">
<msg time="2025-10-07T19:56:58.905668" level="INFO">${duration} = 0.0</msg>
<var>${duration}</var>
<arg>${end_time}</arg>
<arg>${TEST_START_TIME}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="PASS" start="2025-10-07T19:56:58.904695" elapsed="0.001012"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-07T19:56:58.905852" elapsed="0.000110"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n🎯 ═══════════════════════════════════════════════════════════════</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T19:56:58.906092" elapsed="0.000301"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 EXECUTIVE SUMMARY - ${TEST_SUITE_ID} EDS vs SERVER VALIDATION</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T19:56:58.906594" elapsed="0.000386"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>═══════════════════════════════════════════════════════════════</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T19:56:58.907140" elapsed="0.000267"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>⏱️ Duration: ${duration} seconds</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T19:56:58.907602" elapsed="0.000433"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🎯 Target: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T19:56:58.908259" elapsed="0.000371"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📋 EDS Data: Successfully loaded and compared</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T19:56:58.908876" elapsed="0.000296"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🔌 SSH Connection: Used for server validation</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T19:56:58.909334" elapsed="0.000222"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 Suite Reports: ${TEST_REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T19:56:58.909684" elapsed="0.000238"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 Overall Reports: ${REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T19:56:58.910077" elapsed="0.000273"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🏆 Overall Status: TEST COMPLETED</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T19:56:58.910509" elapsed="0.000201"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>═══════════════════════════════════════════════════════════════</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T19:56:58.910858" elapsed="0.000352"/>
</kw>
<doc>Generate test summary and close connections</doc>
<status status="PASS" start="2025-10-07T19:56:58.903859" elapsed="0.007480"/>
</kw>
<doc>🌐 Hostname Validation Test Suite - Test-3
🔍 Process: Find hostname in EDS → SSH to IP → Compare server vs EDS
✅ Pass if server matches EDS, ❌ Fail if mismatch</doc>
<status status="FAIL" start="2025-10-07T19:56:47.543177" elapsed="11.368250">Suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</suite>
<suite id="s1-s3" name="Vm Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test4_vm_validation\vm_validation.robot">
<kw name="Initialize VM Test Environment And Lookup Configuration" owner="variables" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.381471" level="INFO">🚀 Initializing VM Validation Test Suite (Test-4)</msg>
<arg>🚀 Initializing VM Validation Test Suite (Test-4)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.381277" elapsed="0.000381"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.382108" level="INFO">🎯 Target VM: allxdvitap01</msg>
<arg>🎯 Target VM: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.381876" elapsed="0.000415"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-07T19:57:01.397650" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T19:57:01.398012" level="INFO">Available hostnames: ['alhxvdvitap01', 'alhxvdvitag01', 'alhxvqaitiap01', 'alhxvqaitiap02', 'alhxvqaitred01', 'alhxvqaitred02', 'alhxvqaitred03', 'alhxvqaitmdb01', 'alhxvqaitmdb02', 'alhxvqaitmdb03', 'alhxvqaitag01', 'alhxvqaitag02', 'alhxvpritiap01', 'alhxvpritiap02']</msg>
<msg time="2025-10-07T19:57:01.398251" level="FAIL">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="FAIL" start="2025-10-07T19:57:01.382433" elapsed="0.016954">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VXRAIL_CLUSTER}</arg>
<arg>${eds_config['vxrail_cluster']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.399603" elapsed="0.000027"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${vcenter_from_eds}</var>
<arg>${eds_config['vcenter_host']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.399739" elapsed="0.000019"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<var>${final_vcenter_host}</var>
<arg>'${vcenter_from_eds}' == 'N/A'</arg>
<arg>Set Variable</arg>
<arg>${DEFAULT_VCENTER_HOST}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${vcenter_from_eds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.399855" elapsed="0.000016"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VCENTER_HOST}</arg>
<arg>${final_vcenter_host}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.399989" elapsed="0.000018"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_CPU_CORES}</arg>
<arg>${eds_config['cpu_cores']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.400096" elapsed="0.000016"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_RAM}</arg>
<arg>${eds_config['ram']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.400253" elapsed="0.000039"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_HARDWARE_VERSION}</arg>
<arg>${eds_config['vm_hardware_version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.400423" elapsed="0.000024"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_MEMORY_RESERVATION}</arg>
<arg>${eds_config['vm_memory_reservation']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.400652" elapsed="0.000033"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_CPU_RESERVATION}</arg>
<arg>${eds_config['vm_cpu_reservation']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.400929" elapsed="0.000032"/>
</kw>
<kw name="Get Environment Variable" owner="OperatingSystem">
<var>${env_vcenter_user}</var>
<arg>VCENTER_USERNAME</arg>
<arg>${VCENTER_USERNAME}</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.401122" elapsed="0.000034"/>
</kw>
<kw name="Get Environment Variable" owner="OperatingSystem">
<var>${env_vcenter_pass}</var>
<arg>VCENTER_PASSWORD</arg>
<arg>${VCENTER_PASSWORD}</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.401326" elapsed="0.000037"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${VCENTER_USERNAME}</arg>
<arg>${env_vcenter_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.401516" elapsed="0.000026"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${VCENTER_PASSWORD}</arg>
<arg>${env_vcenter_pass}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.401666" elapsed="0.000022"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS Configuration Retrieved:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.401802" elapsed="0.000033"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - VxRail Cluster: ${TARGET_VXRAIL_CLUSTER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.401951" elapsed="0.000022"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - vCenter Host: ${TARGET_VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.402131" elapsed="0.000036"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - CPU Cores: ${TARGET_VM_CPU_CORES}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.402341" elapsed="0.000035"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - RAM: ${TARGET_VM_RAM}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.402567" elapsed="0.000033"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - Hardware Version: ${TARGET_VM_HARDWARE_VERSION}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.402755" elapsed="0.000029"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ VM Test Environment Initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:01.402914" elapsed="0.000022"/>
</kw>
<doc>Initialize test environment and lookup VM configuration from EDS</doc>
<status status="FAIL" start="2025-10-07T19:57:01.380613" elapsed="0.022508">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<test id="s1-s3-t1" name="Critical - vCenter API Connection" line="21">
<doc>🔌 Establish API connection to vCenter and retrieve VM details</doc>
<tag>api</tag>
<tag>connection</tag>
<tag>critical</tag>
<tag>vcenter</tag>
<status status="FAIL" start="2025-10-07T19:57:01.403483" elapsed="0.000833">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s3-t2" name="Critical - VM Cluster Placement Validation" line="48">
<doc>🏢 Validate VM is placed in the correct VxRail cluster per EDS specification</doc>
<tag>cluster</tag>
<tag>compliance</tag>
<tag>critical</tag>
<tag>placement</tag>
<status status="FAIL" start="2025-10-07T19:57:01.406298" elapsed="0.000806">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s3-t3" name="Critical - VM CPU Configuration Validation" line="62">
<doc>💻 Validate VM CPU allocation matches EDS specification</doc>
<tag>compliance</tag>
<tag>cpu</tag>
<tag>critical</tag>
<tag>hardware</tag>
<status status="FAIL" start="2025-10-07T19:57:01.407838" elapsed="0.000627">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s3-t4" name="Critical - VM Memory Configuration Validation" line="76">
<doc>🧠 Validate VM memory allocation matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hardware</tag>
<tag>memory</tag>
<status status="FAIL" start="2025-10-07T19:57:01.411127" elapsed="0.000674">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s3-t5" name="Critical - VM Hardware Version Validation" line="90">
<doc>⚙️ Validate VM hardware version matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hardware</tag>
<tag>version</tag>
<status status="FAIL" start="2025-10-07T19:57:01.412519" elapsed="0.000727">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s3-t6" name="Critical - VM Network Adapter Validation" line="104">
<doc>🌐 Validate VM network adapter configuration</doc>
<tag>adapters</tag>
<tag>compliance</tag>
<tag>critical</tag>
<tag>network</tag>
<status status="FAIL" start="2025-10-07T19:57:01.413881" elapsed="0.000420">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s3-t7" name="Critical - VM Disk Configuration Validation" line="118">
<doc>💾 Validate VM disk configuration and capacity</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>disk</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-07T19:57:01.414841" elapsed="0.000411">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s3-t8" name="Normal - VM Properties Comprehensive Review" line="132">
<doc>📋 Review all VM properties and configuration details</doc>
<tag>analysis</tag>
<tag>normal</tag>
<tag>properties</tag>
<tag>review</tag>
<status status="FAIL" start="2025-10-07T19:57:01.415746" elapsed="0.000399">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<kw name="Generate VM Executive Summary And Disconnect" type="TEARDOWN">
<kw name="Generate VM Executive Summary" owner="variables">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.418224" level="INFO">📊 Generating VM Validation Executive Summary...</msg>
<arg>📊 Generating VM Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.418072" elapsed="0.000315"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.418812" level="INFO">${summary_file} = C:\Users\write\project_2025\robot\robotframework\results\test4_vm_validation/Test4_VM_Validation_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>${OUTPUT_DIR}/Test4_VM_Validation_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T19:57:01.418567" elapsed="0.000282"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.421486" level="INFO">${summary} = ========================================
VM VALIDATION TEST - EXECUTIVE SUMMARY
========================================

Test Suite: Test-4 VM Validation
Target VM: allxdvitap01

EDS CONFIGURATION:
-...</msg>
<var>${summary}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>VM VALIDATION TEST - EXECUTIVE SUMMARY</arg>
<arg>========================================</arg>
<arg>${EMPTY}</arg>
<arg>Test Suite: Test-4 VM Validation</arg>
<arg>Target VM: ${TARGET_HOSTNAME}</arg>
<arg>${EMPTY}</arg>
<arg>EDS CONFIGURATION:</arg>
<arg>- VxRail Cluster: ${TARGET_VXRAIL_CLUSTER}</arg>
<arg>- vCenter Host: ${TARGET_VCENTER_HOST}</arg>
<arg>- Expected CPU Cores: ${TARGET_VM_CPU_CORES}</arg>
<arg>- Expected RAM: ${TARGET_VM_RAM}</arg>
<arg>- Expected Hardware Version: ${TARGET_VM_HARDWARE_VERSION}</arg>
<arg>- Memory Reservation: ${TARGET_VM_MEMORY_RESERVATION}</arg>
<arg>- CPU Reservation: ${TARGET_VM_CPU_RESERVATION}</arg>
<arg>${EMPTY}</arg>
<arg>VALIDATION STATUS:</arg>
<arg>- See detailed test report for validation results</arg>
<arg>${EMPTY}</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T19:57:01.419048" elapsed="0.002476"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T19:57:01.422666" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test4_vm_validation\Test4_VM_Validation_Executive_Summary.txt"&gt;C:\Users\write\project_2025\robot\robotframework\results\test4_vm_validation\Test4_VM_Validation_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-07T19:57:01.421735" elapsed="0.001013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.423107" level="INFO">✅ Executive Summary generated: C:\Users\write\project_2025\robot\robotframework\results\test4_vm_validation/Test4_VM_Validation_Executive_Summary.txt</msg>
<arg>✅ Executive Summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.422906" elapsed="0.000579"/>
</kw>
<doc>Generate executive summary for VM validation test results</doc>
<status status="PASS" start="2025-10-07T19:57:01.417852" elapsed="0.005737"/>
</kw>
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<msg time="2025-10-07T19:57:01.451990" level="FAIL">Recursive execution stopped.</msg>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.451660" elapsed="0.000372">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.453903" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.453447" elapsed="0.000798"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.451501" elapsed="0.003807">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.455984" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.455722" elapsed="0.000996"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.451379" elapsed="0.005982">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.457976" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.457674" elapsed="0.000527"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.451242" elapsed="0.007226">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.458872" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.458667" elapsed="0.000400"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.451084" elapsed="0.008395">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.459985" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.459774" elapsed="0.000419"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.450957" elapsed="0.009570">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.463063" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.462850" elapsed="0.000447"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.450695" elapsed="0.013223">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.464719" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.464364" elapsed="0.000596"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.450475" elapsed="0.014924">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.466016" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.465754" elapsed="0.000523"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.450354" elapsed="0.016331">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.467100" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.466931" elapsed="0.000352"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.450228" elapsed="0.017298">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.467957" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.467765" elapsed="0.000355"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.450106" elapsed="0.018310">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.468800" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.468640" elapsed="0.000308"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.449984" elapsed="0.019276">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.469602" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.469459" elapsed="0.000285"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.449859" elapsed="0.020139">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.470273" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.470157" elapsed="0.000274"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.449736" elapsed="0.020953">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.470994" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.470877" elapsed="0.000313"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.449523" elapsed="0.022080">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.471889" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.471772" elapsed="0.000294"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.449398" elapsed="0.023030">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.472856" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.472704" elapsed="0.000334"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.449271" elapsed="0.024132">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.473837" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.473661" elapsed="0.000317"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.449147" elapsed="0.025150">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.475074" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.474877" elapsed="0.000364"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.449020" elapsed="0.026617">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.476519" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.475898" elapsed="0.000842"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.448894" elapsed="0.028276">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.477564" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.477366" elapsed="0.000369"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.448668" elapsed="0.033485">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.482828" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.482545" elapsed="0.000737"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.448424" elapsed="0.035211">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.484631" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.484217" elapsed="0.000638"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.448295" elapsed="0.036960">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.485773" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.485569" elapsed="0.000367"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.448154" elapsed="0.038034">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.486472" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.486349" elapsed="0.000268"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.448019" elapsed="0.038809">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.487106" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.486993" elapsed="0.000238"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.447866" elapsed="0.039562">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.487779" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.487634" elapsed="0.000317"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.447744" elapsed="0.040537">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.488679" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.488514" elapsed="0.000463"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.447623" elapsed="0.041641">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.489698" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.489520" elapsed="0.000340"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.447494" elapsed="0.042675">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.490577" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.490409" elapsed="0.000353"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.447363" elapsed="0.043673">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.491336" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.491204" elapsed="0.000314"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.447230" elapsed="0.044687">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.492365" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.492171" elapsed="0.000380"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.447108" elapsed="0.045763">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.493239" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.493090" elapsed="0.000307"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.446978" elapsed="0.046800">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.494309" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.494103" elapsed="0.000395"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.446849" elapsed="0.047939">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.495204" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.495078" elapsed="0.000302"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.446648" elapsed="0.049047">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.496214" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.495993" elapsed="0.000401"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.446318" elapsed="0.050391">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.497437" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.497099" elapsed="0.000610"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.446115" elapsed="0.051999">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.498499" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.498356" elapsed="0.000279"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.445972" elapsed="0.052878">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.499210" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.499070" elapsed="0.000307"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.445846" elapsed="0.053812">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.499951" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.499832" elapsed="0.000238"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.445702" elapsed="0.054647">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.500669" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.500557" elapsed="0.000285"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.445561" elapsed="0.055523">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.501493" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.501316" elapsed="0.000378"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.445402" elapsed="0.056611">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.502330" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.502193" elapsed="0.000309"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.445220" elapsed="0.057581">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.503055" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.502951" elapsed="0.000267"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.444970" elapsed="0.058489">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.503781" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.503631" elapsed="0.000296"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.444784" elapsed="0.059323">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.504485" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.504257" elapsed="0.000411"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.444635" elapsed="0.060257">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.505151" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.505039" elapsed="0.000249"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.444475" elapsed="0.061116">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.505976" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.505815" elapsed="0.000308"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.444345" elapsed="0.062050">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.506774" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.506608" elapsed="0.000319"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.444191" elapsed="0.063013">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.507654" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.507490" elapsed="0.000330"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.443872" elapsed="0.064347">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.508989" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.508577" elapsed="0.000619"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.443431" elapsed="0.066061">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.510105" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.509793" elapsed="0.000523"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.443243" elapsed="0.067501">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.511293" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.511070" elapsed="0.000404"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.443003" elapsed="0.068775">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.512204" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.512020" elapsed="0.000336"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.442741" elapsed="0.069889">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.512905" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.512784" elapsed="0.000277"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.442466" elapsed="0.070783">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.513492" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.513383" elapsed="0.000227"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.442237" elapsed="0.071548">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.514011" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.513910" elapsed="0.000216"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.442040" elapsed="0.072253">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.514864" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.514416" elapsed="0.000572"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.441798" elapsed="0.073402">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.515439" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.515332" elapsed="0.000254"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.441538" elapsed="0.074230">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.516006" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.515898" elapsed="0.000221"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.441313" elapsed="0.074976">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.516518" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.516419" elapsed="0.000216"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.441114" elapsed="0.075687">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.517069" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.516965" elapsed="0.000246"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.440888" elapsed="0.076540">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.517739" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.517625" elapsed="0.000269"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.440690" elapsed="0.077393">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.518335" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.518231" elapsed="0.000231"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.440375" elapsed="0.078362">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.519110" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.518950" elapsed="0.000373"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.439860" elapsed="0.079675">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.520029" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.519769" elapsed="0.000395"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.439589" elapsed="0.080793">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.520606" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.520505" elapsed="0.000338"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.439411" elapsed="0.081742">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.521471" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.521327" elapsed="0.000297"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.439237" elapsed="0.082562">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.522281" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.521965" elapsed="0.000469"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.439046" elapsed="0.083627">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.523130" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.522902" elapsed="0.000447"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.438858" elapsed="0.084722">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.523961" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.523753" elapsed="0.000406"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.438664" elapsed="0.085734">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.524677" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.524547" elapsed="0.000281"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.438437" elapsed="0.086667">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.525499" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.525334" elapsed="0.000349"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.438216" elapsed="0.087669">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.526137" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.526029" elapsed="0.000264"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.438010" elapsed="0.088474">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.526714" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.526609" elapsed="0.000285"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.437746" elapsed="0.089458">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.527565" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.527407" elapsed="0.000322"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.437157" elapsed="0.090772">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.528236" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.528104" elapsed="0.000295"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.436923" elapsed="0.091725">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.528877" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.528774" elapsed="0.000241"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.436695" elapsed="0.092540">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.530566" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.530437" elapsed="0.000302"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.436432" elapsed="0.094714">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.531681" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.531429" elapsed="0.000490"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.436185" elapsed="0.095977">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.532569" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.532376" elapsed="0.000395"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.436064" elapsed="0.097048">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.533462" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.533307" elapsed="0.000342"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.435944" elapsed="0.097906">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.534094" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.533973" elapsed="0.000354"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.435823" elapsed="0.098697">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.534796" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.534667" elapsed="0.000296"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.435698" elapsed="0.099499">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.535478" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.535347" elapsed="0.000303"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.435574" elapsed="0.100289">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.536131" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.536006" elapsed="0.000262"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.435452" elapsed="0.101000">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.536714" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.536615" elapsed="0.000287"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.435137" elapsed="0.101939">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.537312" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.537207" elapsed="0.000264"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.435018" elapsed="0.102660">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.538062" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.537918" elapsed="0.000294"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.434891" elapsed="0.103494">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.538624" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.538519" elapsed="0.000220"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.434758" elapsed="0.104893">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.539944" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.539787" elapsed="0.000323"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.434629" elapsed="0.105720">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.540621" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.540493" elapsed="0.000282"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.434492" elapsed="0.106473">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.541256" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.541117" elapsed="0.000334"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.434183" elapsed="0.109068">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.543612" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.543429" elapsed="0.000359"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.433746" elapsed="0.110222">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.544574" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.544194" elapsed="0.000632"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.433553" elapsed="0.111522">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.545310" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.545200" elapsed="0.000315"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.433344" elapsed="0.112340">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.545938" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.545805" elapsed="0.000310"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.433133" elapsed="0.113174">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.546529" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.546424" elapsed="0.000290"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.432964" elapsed="0.113948">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.547142" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.547034" elapsed="0.000242"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.432761" elapsed="0.114769">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.547755" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.547648" elapsed="0.000255"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.432630" elapsed="0.115434">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.548293" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.548194" elapsed="0.000244"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.432495" elapsed="0.116126">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.548843" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.548738" elapsed="0.000284"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.432360" elapsed="0.116884">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.549517" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.549384" elapsed="0.000307"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.432227" elapsed="0.117624">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.550120" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.549980" elapsed="0.000289"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.432102" elapsed="0.118411">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.550794" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.550672" elapsed="0.000290"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.431947" elapsed="0.119192">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.551382" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.551272" elapsed="0.000269"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.431782" elapsed="0.119935">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.551950" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.551843" elapsed="0.000246"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.431565" elapsed="0.120773">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.552698" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.552519" elapsed="0.000354"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.431237" elapsed="0.121822">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.553515" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.553292" elapsed="0.000423"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.431045" elapsed="0.122916">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.554198" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.554079" elapsed="0.000310"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.430905" elapsed="0.123771">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.555053" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.554891" elapsed="0.000320"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.430747" elapsed="0.124629">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.555600" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.555494" elapsed="0.000279"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.430617" elapsed="0.125297">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.556155" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.556047" elapsed="0.000273"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.430487" elapsed="0.126012">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.556788" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.556641" elapsed="0.000314"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.430355" elapsed="0.126811">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.557479" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.557328" elapsed="0.000338"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.430205" elapsed="0.132916">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.563743" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.563484" elapsed="0.002443"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.430080" elapsed="0.136118">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.566806" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.566419" elapsed="0.000736"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.429961" elapsed="0.137473">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.567922" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.567688" elapsed="0.000435"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.429839" elapsed="0.138575">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.568861" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.568654" elapsed="0.000412"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.429710" elapsed="0.139576">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.569682" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.569467" elapsed="0.000404"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.429574" elapsed="0.140491">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.570510" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.570336" elapsed="0.001713"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.429419" elapsed="0.142965">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.573057" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.572729" elapsed="0.000553"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.429063" elapsed="0.144498">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.574224" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.573891" elapsed="0.000993"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.428449" elapsed="0.146737">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.576071" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.575573" elapsed="0.000785"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.428324" elapsed="0.148396">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.577162" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.576998" elapsed="0.000366"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.428191" elapsed="0.149356">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.577805" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.577676" elapsed="0.000280"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.428055" elapsed="0.150060">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.578333" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.578227" elapsed="0.000247"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.427927" elapsed="0.150726">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.578865" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.578764" elapsed="0.000252"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.427806" elapsed="0.151356">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.579371" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.579269" elapsed="0.000238"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.427671" elapsed="0.152024">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.579926" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.579810" elapsed="0.000312"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.427530" elapsed="0.152765">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.580552" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.580429" elapsed="0.000271"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.427385" elapsed="0.153591">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.581259" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.581126" elapsed="0.000279"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.427231" elapsed="0.154325">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.581815" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.581692" elapsed="0.000870"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.426954" elapsed="0.155789">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.583065" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.582903" elapsed="0.000345"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.426812" elapsed="0.156589">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.583681" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.583544" elapsed="0.000296"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.426667" elapsed="0.157330">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.584299" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.584153" elapsed="0.000318"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.426450" elapsed="0.158290">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.585217" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.585013" elapsed="0.000411"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.426137" elapsed="0.159490">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.586270" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.585903" elapsed="0.000541"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.425915" elapsed="0.160758">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.586884" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.586778" elapsed="0.000246"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.425695" elapsed="0.161491">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.587472" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.587333" elapsed="0.000521"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.425467" elapsed="0.162546">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.588386" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.588243" elapsed="0.000348"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.425209" elapsed="0.163544">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.589044" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.588898" elapsed="0.000292"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.424933" elapsed="0.164398">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.589665" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.589503" elapsed="0.000345"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.424655" elapsed="0.165371">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.591732" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.590651" elapsed="0.002126"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.424468" elapsed="0.168678">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.593555" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.593346" elapsed="0.000416"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.424271" elapsed="0.169661">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.594325" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.594129" elapsed="0.000381"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.424047" elapsed="0.170650">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:01.595023" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:01.594857" elapsed="0.000329"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T19:57:01.423772" elapsed="0.171769">Recursive execution stopped.</status>
</kw>
<doc>Generate executive summary and disconnect from vCenter</doc>
<status status="FAIL" start="2025-10-07T19:57:01.417467" elapsed="0.178193">Recursive execution stopped.</status>
</kw>
<doc>🖥️ VM Configuration Validation Test Suite - Test-4
🔍 Process: Connect to vCenter API → Query VM details → Compare vCenter vs EDS
✅ Pass if VM configuration matches EDS requirements, ❌ Fail if mismatch
📊 Validates: Cluster placement, CPU cores, memory, hardware version, network, disks</doc>
<status status="FAIL" start="2025-10-07T19:56:59.802279" elapsed="1.793488">Suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also suite teardown failed:
Recursive execution stopped.</status>
</suite>
<suite id="s1-s4" name="Disk Space Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test5_disk_space_validation\disk_space_validation.robot">
<kw name="Initialize Storage Test Environment And Lookup Configuration" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:03.268433" level="INFO">🚀 Initializing Test-5: Storage &amp; System Validation Environment...</msg>
<arg>🚀 Initializing Test-5: Storage &amp; System Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:03.268244" elapsed="0.000417"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T19:57:03.269026" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test5_disk_space_validation\data"&gt;C:\Users\write\project_2025\robot\robotframework\results\test5_disk_space_validation\data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T19:57:03.268836" elapsed="0.000247"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-07T19:57:03.286390" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T19:57:03.286746" level="INFO">Available hostnames: ['alhxvdvitap01', 'alhxvdvitag01', 'alhxvqaitiap01', 'alhxvqaitiap02', 'alhxvqaitred01', 'alhxvqaitred02', 'alhxvqaitred03', 'alhxvqaitmdb01', 'alhxvqaitmdb02', 'alhxvqaitmdb03', 'alhxvqaitag01', 'alhxvqaitag02', 'alhxvpritiap01', 'alhxvpritiap02']</msg>
<msg time="2025-10-07T19:57:03.286959" level="FAIL">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="FAIL" start="2025-10-07T19:57:03.269184" elapsed="0.019063">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.288567" elapsed="0.000042"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_CPU_CORES}</arg>
<arg>${eds_config['cpu_cores']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.288780" elapsed="0.000029"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_RAM}</arg>
<arg>${eds_config['ram']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.288975" elapsed="0.000026"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_STORAGE_TYPE}</arg>
<arg>${eds_config['storage_type']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.289149" elapsed="0.000029"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_STORAGE_TOTAL_TB}</arg>
<arg>${eds_config['storage_total_tb']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.289337" elapsed="0.000031"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_DRIVE_VOLUME_GROUP}</arg>
<arg>${eds_config['drive_volume_group']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.289535" elapsed="0.000033"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_FILE_SYSTEM}</arg>
<arg>${eds_config['file_system']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.289691" elapsed="0.000020"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_LOGICAL_VOLUME}</arg>
<arg>${eds_config['logical_volume_partition']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.289865" elapsed="0.000022"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_STORAGE_ALLOC_GB}</arg>
<arg>${eds_config['storage_allocation_gb']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.290036" elapsed="0.000026"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_RECOMMENDED_GB}</arg>
<arg>${eds_config['recommended_storage_gb']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.290271" elapsed="0.000025"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_DRIVE_PURPOSE}</arg>
<arg>${eds_config['drive_purpose']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.290415" elapsed="0.000022"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_OS_TYPE}</arg>
<arg>${eds_config['os_type']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.290549" elapsed="0.000019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.290666" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS CPU Cores: ${TARGET_CPU_CORES}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.290780" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS RAM: ${TARGET_RAM} GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.290904" elapsed="0.000045"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS Storage Type: ${TARGET_STORAGE_TYPE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.291097" elapsed="0.000024"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS Storage Total: ${TARGET_STORAGE_TOTAL_TB} TB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.291228" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS OS Type: ${TARGET_OS_TYPE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.291336" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔗 Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.291429" elapsed="0.000014"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.291577" elapsed="0.000032"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.291761" elapsed="0.000021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.292032" elapsed="0.000019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Test-5 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:03.292151" elapsed="0.000016"/>
</kw>
<doc>🏗️ Set up test environment and lookup EDS configuration</doc>
<status status="FAIL" start="2025-10-07T19:57:03.267540" elapsed="0.024765">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<test id="s1-s4-t1" name="Critical - CPU Cores Validation" line="18">
<doc>💻 SSH to server and validate CPU core count matches EDS specification</doc>
<tag>compliance</tag>
<tag>cpu</tag>
<tag>critical</tag>
<tag>hardware</tag>
<status status="FAIL" start="2025-10-07T19:57:03.292417" elapsed="0.000655">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s4-t2" name="Critical - Memory Allocation Validation" line="35">
<doc>🧠 SSH to server and validate memory allocation matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hardware</tag>
<tag>memory</tag>
<status status="FAIL" start="2025-10-07T19:57:03.293854" elapsed="0.000660">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s4-t3" name="Critical - Disk Space Allocation Validation" line="52">
<doc>💾 SSH to server and validate disk space allocation against EDS requirements</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>disk</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-07T19:57:03.295174" elapsed="0.000449">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s4-t4" name="Critical - Storage Type Validation" line="69">
<doc>📡 SSH to server and validate storage infrastructure matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-07T19:57:03.296284" elapsed="0.000553">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s4-t5" name="Critical - Root Filesystem Validation" line="86">
<doc>🗂️ SSH to server and validate root filesystem configuration against EDS</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>filesystem</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-07T19:57:03.297450" elapsed="0.000706">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s4-t6" name="Normal - Storage Capacity Analysis" line="106">
<doc>📊 Analyze overall storage capacity and utilization patterns</doc>
<tag>analysis</tag>
<tag>capacity</tag>
<tag>normal</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-07T19:57:03.298804" elapsed="0.000642">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s4-t7" name="Normal - Volume Group Analysis" line="126">
<doc>🏗️ Analyze volume group and logical volume configuration</doc>
<tag>analysis</tag>
<tag>lvm</tag>
<tag>normal</tag>
<tag>volumes</tag>
<status status="FAIL" start="2025-10-07T19:57:03.300040" elapsed="0.000549">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s4-t8" name="Normal - Operating System Validation" line="145">
<doc>🖥️ Validate operating system type matches EDS specification</doc>
<tag>compliance</tag>
<tag>normal</tag>
<tag>os</tag>
<tag>system</tag>
<status status="FAIL" start="2025-10-07T19:57:03.301127" elapsed="0.000438">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<kw name="Generate Storage Executive Summary" owner="storage_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:03.302948" level="INFO">📊 Generating Test-5 Storage Validation Executive Summary...</msg>
<arg>📊 Generating Test-5 Storage Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:03.302768" elapsed="0.000384"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T19:57:03.303544" level="INFO">${timestamp} = 2025-10-07 19:57:03</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T19:57:03.303304" elapsed="0.000266"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:03.303779" level="INFO">${summary_file} = results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T19:57:03.303668" elapsed="0.000133"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T19:57:03.305312" level="INFO">${summary_content} = None</msg>
<msg time="2025-10-07T19:57:03.305355" level="FAIL">Variable '${TARGET_IP}' not found.</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>🗄️ TEST-5: STORAGE &amp; SYSTEM VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${timestamp}</arg>
<arg>🎯 Target System: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>📋 Test Suite: Test-5 Disk Space &amp; System Validation</arg>
<arg>========================================</arg>
<arg>📋 EDS BASELINE CONFIGURATION</arg>
<arg>========================================</arg>
<arg>💻 CPU Cores (Expected): ${TARGET_CPU_CORES}</arg>
<arg>🧠 RAM (Expected): ${TARGET_RAM} GB</arg>
<arg>📡 Storage Type (Expected): ${TARGET_STORAGE_TYPE}</arg>
<arg>💾 Storage Total (Expected): ${TARGET_STORAGE_TOTAL_TB} TB</arg>
<arg>🗂️ Mount Point (Expected): ${TARGET_LOGICAL_VOLUME}</arg>
<arg>📊 Storage Allocation (Expected): ${TARGET_STORAGE_ALLOC_GB} GB</arg>
<arg>🎯 Drive Purpose: ${TARGET_DRIVE_PURPOSE}</arg>
<arg>🖥️ OS Type (Expected): ${TARGET_OS_TYPE}</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 Detailed data files: results/test5_disk_space_validation/data/</arg>
<arg>📊 Robot Framework reports: results/test5_disk_space_validation/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>📋 All data collected and validated against EDS</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="FAIL" start="2025-10-07T19:57:03.303885" elapsed="0.001514">Variable '${TARGET_IP}' not found.</status>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T19:57:03.306464" level="FAIL">TypeError: write() argument must be str, not None</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="FAIL" start="2025-10-07T19:57:03.305776" elapsed="0.000790">TypeError: write() argument must be str, not None</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:03.306880" level="INFO">📊 Executive summary generated: results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:03.306690" elapsed="0.000431"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:03.307566" level="INFO">✅ Test-5 Storage Validation completed successfully!</msg>
<arg>✅ Test-5 Storage Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:03.307310" elapsed="0.000421"/>
</kw>
<doc>📊 Generate executive summary for storage validation results</doc>
<status status="FAIL" start="2025-10-07T19:57:03.302523" elapsed="0.005395">Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</kw>
<doc>🗄️ Storage &amp; System Validation Test Suite - Test-5
🔍 Process: Find hostname in EDS → SSH to server → Collect disk/CPU/memory data → Compare server vs EDS
✅ Pass if server resources match EDS requirements, ❌ Fail if mismatch
📊 Validates: CPU cores, RAM, disk space allocation, filesystem types, storage configuration</doc>
<status status="FAIL" start="2025-10-07T19:57:02.411150" elapsed="0.896885">Suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</suite>
<suite id="s1-s5" name="Time Configuration Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test7_time_configuration_validation\time_configuration_validation.robot">
<kw name="Initialize Time Test Environment" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:04.888628" level="INFO">🚀 Initializing Test-7: Time Configuration Validation Environment...</msg>
<arg>🚀 Initializing Test-7: Time Configuration Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:04.888361" elapsed="0.000525"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T19:57:04.889317" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test7_time_configuration_validation\data"&gt;C:\Users\write\project_2025\robot\robotframework\results\test7_time_configuration_validation\data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T19:57:04.889107" elapsed="0.000280"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-07T19:57:04.913503" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T19:57:04.913746" level="INFO">Available hostnames: ['alhxvdvitap01', 'alhxvdvitag01', 'alhxvqaitiap01', 'alhxvqaitiap02', 'alhxvqaitred01', 'alhxvqaitred02', 'alhxvqaitred03', 'alhxvqaitmdb01', 'alhxvqaitmdb02', 'alhxvqaitmdb03', 'alhxvqaitag01', 'alhxvqaitag02', 'alhxvpritiap01', 'alhxvpritiap02']</msg>
<msg time="2025-10-07T19:57:04.913936" level="FAIL">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="FAIL" start="2025-10-07T19:57:04.889491" elapsed="0.025345">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:04.915030" elapsed="0.000028"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Target Server: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:04.915155" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:04.915256" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔗 Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:04.915347" elapsed="0.000015"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:04.915443" elapsed="0.000014"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:04.915532" elapsed="0.000022"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:04.915701" elapsed="0.000020"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Test-7 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:04.915962" elapsed="0.000029"/>
</kw>
<doc>🏗️ Set up test environment for time configuration validation</doc>
<status status="FAIL" start="2025-10-07T19:57:04.887484" elapsed="0.028653">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<test id="s1-s5-t1" name="Critical - Connect to Target Server" line="18">
<doc>🔗 Establish direct connection to target machine via SSH</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="FAIL" start="2025-10-07T19:57:04.916255" elapsed="0.000635">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t2" name="Critical - Collect Time Configuration Data" line="31">
<doc>⏰ Execute time-related commands to gather timezone, chrony, and NTP configuration</doc>
<tag>critical</tag>
<tag>data_collection</tag>
<tag>ntp</tag>
<tag>time</tag>
<status status="FAIL" start="2025-10-07T19:57:04.917552" elapsed="0.000542">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t3" name="Critical - Validate Timezone Setting" line="49">
<doc>🌎 Validate timezone is set to Pacific/Los Angeles (America/Los_Angeles)</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>timezone</tag>
<status status="FAIL" start="2025-10-07T19:57:04.918779" elapsed="0.000453">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t4" name="Critical - Validate Chrony Service Status" line="62">
<doc>📡 Validate chrony service is active and running</doc>
<tag>chrony</tag>
<tag>critical</tag>
<tag>ntp</tag>
<tag>service</tag>
<status status="FAIL" start="2025-10-07T19:57:04.919866" elapsed="0.000421">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t5" name="Critical - Validate NTP Server Configuration" line="74">
<doc>🕐 Validate NTP server is configured to use ntpx.domain.com</doc>
<tag>configuration</tag>
<tag>critical</tag>
<tag>ntp</tag>
<tag>server</tag>
<status status="FAIL" start="2025-10-07T19:57:04.920986" elapsed="0.000987">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t6" name="Critical - Validate Time Synchronization Status" line="87">
<doc>🔄 Validate time synchronization is working and clock is synchronized</doc>
<tag>critical</tag>
<tag>ntp</tag>
<tag>synchronization</tag>
<tag>time</tag>
<status status="FAIL" start="2025-10-07T19:57:04.922953" elapsed="0.001013">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t7" name="Normal - Comprehensive Time Configuration Validation" line="100">
<doc>📊 Perform comprehensive validation of all time configuration settings</doc>
<tag>compliance</tag>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T19:57:04.925546" elapsed="0.000542">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t8" name="Normal - Hardware Clock Verification" line="116">
<doc>🕰️ Verify hardware clock and its synchronization with system clock</doc>
<tag>clock</tag>
<tag>hardware</tag>
<tag>normal</tag>
<tag>verification</tag>
<status status="FAIL" start="2025-10-07T19:57:04.926745" elapsed="0.000538">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t9" name="Normal - NTP Source Analysis" line="133">
<doc>📊 Analyze NTP source details and server reachability</doc>
<tag>analysis</tag>
<tag>normal</tag>
<tag>ntp</tag>
<tag>sources</tag>
<status status="FAIL" start="2025-10-07T19:57:04.928316" elapsed="0.000461">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t10" name="Normal - Clock Drift Monitoring" line="165">
<doc>📉 Monitor clock drift and synchronization accuracy</doc>
<tag>accuracy</tag>
<tag>drift</tag>
<tag>monitoring</tag>
<tag>normal</tag>
<status status="FAIL" start="2025-10-07T19:57:04.929372" elapsed="0.000463">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<kw name="Generate Time Configuration Executive Summary" owner="time_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:04.931308" level="INFO">📊 Generating Test-7 Time Configuration Executive Summary...</msg>
<arg>📊 Generating Test-7 Time Configuration Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:04.931135" elapsed="0.000355"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T19:57:04.931838" level="INFO">${timestamp} = 2025-10-07 19:57:04</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T19:57:04.931637" elapsed="0.000227"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:04.932137" level="INFO">${summary_file} = results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T19:57:04.931968" elapsed="0.000208"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T19:57:04.933734" level="INFO">${summary_content} = None</msg>
<msg time="2025-10-07T19:57:04.933766" level="FAIL">Variable '${TARGET_IP}' not found.</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>⏰ TEST-7: TIME CONFIGURATION VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${timestamp}</arg>
<arg>🎯 Target System: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>📋 Test Suite: Test-7 Time Configuration Validation</arg>
<arg>========================================</arg>
<arg>📋 EXPECTED CONFIGURATION</arg>
<arg>========================================</arg>
<arg>🌎 Timezone: Pacific/Los Angeles (America/Los_Angeles)</arg>
<arg>🕐 NTP Server: ntpx.domain.com</arg>
<arg>📡 Service: Chrony (active and running)</arg>
<arg>🔄 Synchronization: Enabled</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 Time configuration data: results/test7_time_configuration_validation/data/</arg>
<arg>📊 Robot Framework reports: results/test7_time_configuration_validation/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>📋 Time configuration validated</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="FAIL" start="2025-10-07T19:57:04.932348" elapsed="0.001446">Variable '${TARGET_IP}' not found.</status>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T19:57:04.934642" level="FAIL">TypeError: write() argument must be str, not None</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="FAIL" start="2025-10-07T19:57:04.933981" elapsed="0.000762">TypeError: write() argument must be str, not None</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:04.935034" level="INFO">📊 Executive summary generated: results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:04.934853" elapsed="0.000393"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:04.935644" level="INFO">✅ Test-7 Time Configuration Validation completed successfully!</msg>
<arg>✅ Test-7 Time Configuration Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:04.935412" elapsed="0.000385"/>
</kw>
<doc>📊 Generate executive summary for time configuration validation</doc>
<status status="FAIL" start="2025-10-07T19:57:04.930902" elapsed="0.005102">Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</kw>
<doc>⏰ Time Configuration Validation Test Suite - Test-7
🔍 Process: Find hostname in EDS → SSH to server → Collect time/NTP data → Validate timezone and NTP configuration
✅ Pass if timezone is Pacific/Los Angeles and NTP server is ntpx.domain.com with proper synchronization
📊 Validates: Timezone setting, Chrony service status, NTP server configuration, time synchronization</doc>
<status status="FAIL" start="2025-10-07T19:57:04.062740" elapsed="0.873371">Suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</suite>
<suite id="s1-s6" name="Ssh Key Authentication" source="C:\Users\write\project_2025\robot\robotframework\tests\test8_ssh_key_authentication\ssh_key_authentication.robot">
<kw name="Initialize SSH Key Test Environment" owner="ssh_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:06.129779" level="INFO">🚀 Initializing Test-8: SSH Key Authentication Validation Environment...</msg>
<arg>🚀 Initializing Test-8: SSH Key Authentication Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:06.129586" elapsed="0.000446"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T19:57:06.130413" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test8_ssh_key_authentication\data"&gt;C:\Users\write\project_2025\robot\robotframework\results\test8_ssh_key_authentication\data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T19:57:06.130217" elapsed="0.000259"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:06.130732" level="INFO">📋 Code Server: 192.168.1.100</msg>
<arg>📋 Code Server: ${CODE_SERVER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:06.130578" elapsed="0.000309"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:06.131253" level="INFO">📋 Code Server User: codeserver</msg>
<arg>📋 Code Server User: ${CODE_SERVER_USER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:06.131042" elapsed="0.000381"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:06.131764" level="INFO">🔗 Connecting to Code Server: 192.168.1.100...</msg>
<arg>🔗 Connecting to Code Server: ${CODE_SERVER_HOST}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:06.131596" elapsed="0.000412"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${CODE_SERVER_HOST}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-07T19:57:06.132168" elapsed="0.000281"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-07T19:57:06.132860" level="INFO">Logging into '192.168.1.100:22' as 'codeserver'.</msg>
<msg time="2025-10-07T19:57:09.149799" level="FAIL">TimeoutError: timed out</msg>
<arg>${CODE_SERVER_USER}</arg>
<arg>${CODE_SERVER_PASS}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="FAIL" start="2025-10-07T19:57:06.132600" elapsed="3.095173">TimeoutError: timed out</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ SSH connection to Code Server established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:09.228189" elapsed="0.000045"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<var>${whoami}</var>
<arg>whoami</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:09.228402" elapsed="0.000028"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<var>${hostname}</var>
<arg>hostname</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:09.228574" elapsed="0.000027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>👤 Connected as: ${whoami}@${hostname}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:09.228735" elapsed="0.000027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Test-8 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:09.229067" elapsed="0.000037"/>
</kw>
<doc>🏗️ Set up test environment for SSH key authentication validation</doc>
<status status="FAIL" start="2025-10-07T19:57:06.128943" elapsed="3.100429">TimeoutError: timed out</status>
</kw>
<test id="s1-s6-t1" name="Critical - Connect to Code Server" line="18">
<doc>🔗 Establish SSH connection to Code Server (Linux jump box)</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="FAIL" start="2025-10-07T19:57:09.229715" elapsed="0.001381">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s6-t2" name="Critical - Verify SSH Private Key Exists" line="31">
<doc>🔑 Verify SSH private key exists on Code Server with correct permissions</doc>
<tag>critical</tag>
<tag>security</tag>
<tag>ssh_key</tag>
<status status="FAIL" start="2025-10-07T19:57:09.232674" elapsed="0.000777">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s6-t3" name="Critical - Validate SSH Private Key Permissions" line="44">
<doc>🔒 Validate SSH private key has secure permissions (600)</doc>
<tag>critical</tag>
<tag>permissions</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-07T19:57:09.234353" elapsed="0.000721">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s6-t4" name="Critical - Test Passwordless SSH Authentication" line="58">
<doc>🔐 Test passwordless SSH connection from Code Server to target machine</doc>
<tag>authentication</tag>
<tag>critical</tag>
<tag>passwordless</tag>
<status status="FAIL" start="2025-10-07T19:57:09.236017" elapsed="0.001160">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s6-t5" name="Critical - Validate Authorized Keys File" line="73">
<doc>📝 Verify authorized_keys file exists on target with correct permissions</doc>
<tag>authorized_keys</tag>
<tag>critical</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-07T19:57:09.238645" elapsed="0.000619">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s6-t6" name="Critical - Validate Authorized Keys Permissions" line="86">
<doc>🔒 Validate authorized_keys file has secure permissions (600)</doc>
<tag>critical</tag>
<tag>permissions</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-07T19:57:09.244829" elapsed="0.000753">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s6-t7" name="Critical - Verify Public Key in Authorized Keys" line="100">
<doc>🔑 Verify public key is present in authorized_keys file</doc>
<tag>critical</tag>
<tag>public_key</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T19:57:09.246598" elapsed="0.000468">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s6-t8" name="Normal - Validate SSH Directory Permissions" line="117">
<doc>🔒 Ensure .ssh directory has correct permissions (700) on both machines</doc>
<tag>normal</tag>
<tag>permissions</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-07T19:57:09.247883" elapsed="0.000519">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s6-t9" name="Normal - Validate SSH Key Type and Strength" line="135">
<doc>🔐 Validate SSH key type and cryptographic strength</doc>
<tag>crypto</tag>
<tag>normal</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-07T19:57:09.249054" elapsed="0.000389">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s6-t10" name="Normal - Validate SSH Configuration Security" line="161">
<doc>🛡️ Validate SSH server configuration on target machine</doc>
<tag>configuration</tag>
<tag>normal</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-07T19:57:09.250110" elapsed="0.000574">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s6-t11" name="Normal - Comprehensive SSH Authentication Chain Validation" line="173">
<doc>🔗 Validate complete authentication chain from Code Server to target</doc>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T19:57:09.251584" elapsed="0.000682">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<kw name="Generate SSH Key Authentication Executive Summary" owner="ssh_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:09.253673" level="INFO">📊 Generating Test-8 SSH Key Authentication Executive Summary...</msg>
<arg>📊 Generating Test-8 SSH Key Authentication Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:09.253528" elapsed="0.000352"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T19:57:09.254318" level="INFO">${timestamp} = 2025-10-07 19:57:09</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T19:57:09.254013" elapsed="0.000347"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:09.254722" level="INFO">${summary_file} = results/test8_ssh_key_authentication/Test8_SSH_Key_Authentication_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test8_ssh_key_authentication/Test8_SSH_Key_Authentication_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T19:57:09.254516" elapsed="0.000247"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T19:57:09.255879" level="INFO">${summary_content} = ========================================
🔐 TEST-8: SSH KEY AUTHENTICATION VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 19:57:09
🎯 Code...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>🔐 TEST-8: SSH KEY AUTHENTICATION VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${timestamp}</arg>
<arg>🎯 Code Server (Jump Box): ${CODE_SERVER_HOST}</arg>
<arg>🎯 Target System: ${TARGET_HOST}</arg>
<arg>📋 Test Suite: Test-8 SSH Key Authentication Validation</arg>
<arg>========================================</arg>
<arg>📋 TEST OBJECTIVES</arg>
<arg>========================================</arg>
<arg>1. Connect to Code Server (Linux jump box)</arg>
<arg>2. Test passwordless SSH key authentication</arg>
<arg>3. Validate authorized_keys configuration</arg>
<arg>4. Verify SSH security permissions</arg>
<arg>5. Confirm authentication chain integrity</arg>
<arg>========================================</arg>
<arg>📋 EXPECTED CONFIGURATION</arg>
<arg>========================================</arg>
<arg>🔑 SSH Private Key: ${SSH_KEY_PATH}</arg>
<arg>🔒 Private Key Permissions: 600</arg>
<arg>📂 .ssh Directory Permissions: 700</arg>
<arg>📝 authorized_keys Permissions: 600</arg>
<arg>🔐 Authentication Method: Key-based (passwordless)</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 Authentication chain data: results/test8_ssh_key_authentication/data/</arg>
<arg>📊 Robot Framework reports: results/test8_ssh_key_authentication/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>🔐 SSH key authentication validated</arg>
<arg>🔒 Security permissions verified</arg>
<arg>🔗 Authentication chain confirmed</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T19:57:09.254925" elapsed="0.001003"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T19:57:09.257753" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test8_ssh_key_authentication\Test8_SSH_Key_Authentication_Executive_Summary.txt"&gt;C:\Users\write\project_2025\robot\robotframework\results\test8_ssh_key_authentication\Test8_SSH_Key_Authentication_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-07T19:57:09.256290" elapsed="0.001576"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:09.258356" level="INFO">📊 Executive summary generated: results/test8_ssh_key_authentication/Test8_SSH_Key_Authentication_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:09.258074" elapsed="0.000503"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:09.258897" level="INFO">✅ Test-8 SSH Key Authentication Validation completed successfully!</msg>
<arg>✅ Test-8 SSH Key Authentication Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:09.258738" elapsed="0.000871"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-07T19:57:09.259776" elapsed="0.000139"/>
</kw>
<doc>📊 Generate executive summary for SSH key authentication validation</doc>
<status status="PASS" start="2025-10-07T19:57:09.253287" elapsed="0.006707"/>
</kw>
<doc>🔐 SSH Key Authentication Validation Test Suite - Test-8
🔍 Process: Connect to Code Server → Test SSH key authentication → Validate authorized_keys configuration
✅ Pass if SSH key authentication works passwordlessly from Code Server to target machine
📊 Validates: SSH key authentication, authorized_keys permissions, SSH configuration</doc>
<status status="FAIL" start="2025-10-07T19:57:05.898011" elapsed="3.362027">Suite setup failed:
TimeoutError: timed out</status>
</suite>
<suite id="s1-s7" name="Datastore Configuration" source="C:\Users\write\project_2025\robot\robotframework\tests\test9_datastore_configuration\datastore_configuration.robot">
<kw name="Initialize Datastore Configuration Test Environment" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.308871" level="INFO">🚀 Initializing Datastore Configuration Test Environment...</msg>
<arg>🚀 Initializing Datastore Configuration Test Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.308689" elapsed="0.000404"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T19:57:10.309534" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\screenshots"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\screenshots&lt;/a&gt;' already exists.</msg>
<arg>${SCREENSHOT_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T19:57:10.309285" elapsed="0.000338"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.310746" level="INFO">${VCENTER_CONN} = None</msg>
<arg>${VCENTER_CONN}</arg>
<arg>${None}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T19:57:10.309842" elapsed="0.000957"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.312042" level="INFO">${TEST_START_TIME} = </msg>
<arg>${TEST_START_TIME}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T19:57:10.310906" elapsed="0.001174"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T19:57:10.312385" level="INFO">${start_time} = 2025-10-07 19:57:10</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T19:57:10.312186" elapsed="0.000223"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.312661" level="INFO">${TEST_START_TIME} = 2025-10-07 19:57:10</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T19:57:10.312508" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.312942" level="INFO">✅ Test environment initialized at 2025-10-07 19:57:10</msg>
<arg>✅ Test environment initialized at ${TEST_START_TIME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.312801" elapsed="0.000308"/>
</kw>
<doc>Initialize test environment and create necessary directories</doc>
<status status="PASS" start="2025-10-07T19:57:10.308024" elapsed="0.005179"/>
</kw>
<test id="s1-s7-t1" name="Critical - Connect to vCenter" line="18">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.314629" level="INFO">🏁 Starting: Critical - Connect to vCenter</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.314478" elapsed="0.000328"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.314040" elapsed="0.000890"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.315282" level="INFO">🔍 Establishing connection to vCenter...</msg>
<arg>🔍 Establishing connection to vCenter...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.315167" elapsed="0.000276"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.315903" level="INFO">📋 vCenter Server: vcenter.example.com</msg>
<arg>📋 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.315708" elapsed="0.000353"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.316509" level="INFO">📋 Target Host: esxi-host-01.example.com</msg>
<arg>📋 Target Host: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.316309" elapsed="0.000376"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.317154" level="INFO">📋 Cluster Environment: Production-Cluster</msg>
<arg>📋 Cluster Environment: ${CLUSTER_NAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.316961" elapsed="0.000368"/>
</kw>
<kw name="Connect To vCenter" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.318032" level="INFO">🔗 Connecting to vCenter server: vcenter.example.com</msg>
<arg>🔗 Connecting to vCenter server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.317870" elapsed="0.000317"/>
</kw>
<kw name="Vcenter Connect" owner="VCenterLibrary">
<msg time="2025-10-07T19:57:10.318550" level="INFO">${connection} = {'server': 'vcenter.example.com', 'username': 'administrator@vsphere.local', 'connected': True}</msg>
<var>${connection}</var>
<arg>${VCENTER_SERVER}</arg>
<arg>${VCENTER_USERNAME}</arg>
<arg>${VCENTER_PASSWORD}</arg>
<doc>Establish connection to vCenter server</doc>
<status status="PASS" start="2025-10-07T19:57:10.318341" elapsed="0.000234"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.318895" level="INFO">${VCENTER_CONN} = {'server': 'vcenter.example.com', 'username': 'administrator@vsphere.local', 'connected': True}</msg>
<arg>${VCENTER_CONN}</arg>
<arg>${connection}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T19:57:10.318698" elapsed="0.000235"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.319167" level="INFO">✅ Connected to vCenter: vcenter.example.com</msg>
<arg>✅ Connected to vCenter: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.319024" elapsed="0.000350"/>
</kw>
<return>
<value>${connection}</value>
<status status="PASS" start="2025-10-07T19:57:10.319477" elapsed="0.000104"/>
</return>
<doc>Establish connection to vCenter server</doc>
<status status="PASS" start="2025-10-07T19:57:10.317615" elapsed="0.002115"/>
</kw>
<kw name="Verify vCenter Connection" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.320557" level="INFO">🔍 Verifying vCenter connection status...</msg>
<arg>🔍 Verifying vCenter connection status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.320408" elapsed="0.000328"/>
</kw>
<kw name="Vcenter Verify Connection" owner="VCenterLibrary">
<msg time="2025-10-07T19:57:10.321049" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>${VCENTER_CONN}</arg>
<doc>Verify vCenter connection is active</doc>
<status status="PASS" start="2025-10-07T19:57:10.320870" elapsed="0.000205"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.321336" level="INFO">✅ vCenter connection verified: True</msg>
<arg>✅ vCenter connection verified: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.321186" elapsed="0.000635"/>
</kw>
<return>
<value>${status}</value>
<status status="PASS" start="2025-10-07T19:57:10.321911" elapsed="0.000057"/>
</return>
<msg time="2025-10-07T19:57:10.322158" level="INFO">${connection_status} = True</msg>
<var>${connection_status}</var>
<doc>Verify vCenter connection is active</doc>
<status status="PASS" start="2025-10-07T19:57:10.320111" elapsed="0.002079"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>msg=Failed to establish vCenter connection</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:57:10.322408" elapsed="0.000177"/>
</kw>
<kw name="Locate Target Host In Cluster" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.323488" level="INFO">🔍 Locating target host esxi-host-01.example.com in cluster Production-Cluster...</msg>
<arg>🔍 Locating target host ${VCENTER_HOST} in cluster ${CLUSTER_NAME}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.323238" elapsed="0.000420"/>
</kw>
<kw name="Vcenter Find Host In Cluster" owner="VCenterLibrary">
<msg time="2025-10-07T19:57:10.324179" level="INFO">${found} = True</msg>
<var>${found}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${CLUSTER_NAME}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Locate ESXi host within a cluster</doc>
<status status="PASS" start="2025-10-07T19:57:10.323950" elapsed="0.000256"/>
</kw>
<if>
<branch type="IF" condition="${found}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.324673" level="INFO">✅ Target host located: esxi-host-01.example.com</msg>
<arg>✅ Target host located: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.324498" elapsed="0.000329"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.324332" elapsed="0.000541"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Target host not found: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.325026" elapsed="0.000024"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.324909" elapsed="0.000177"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.324290" elapsed="0.000820"/>
</if>
<return>
<value>${found}</value>
<status status="PASS" start="2025-10-07T19:57:10.325175" elapsed="0.000034"/>
</return>
<msg time="2025-10-07T19:57:10.325354" level="INFO">${host_found} = True</msg>
<var>${host_found}</var>
<doc>Locate target ESXi host within the cluster</doc>
<status status="PASS" start="2025-10-07T19:57:10.322978" elapsed="0.002402"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${host_found}</arg>
<arg>msg=Target host ${VCENTER_HOST} not found in cluster ${CLUSTER_NAME}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:57:10.325792" elapsed="0.000525"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.326689" level="INFO">✅ vCenter connection established and target host located</msg>
<arg>✅ vCenter connection established and target host located</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.326540" elapsed="0.000303"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.328039" level="INFO">✅ Completed: Critical - Connect to vCenter - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.327850" elapsed="0.000346"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.327620" elapsed="0.000621"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.328393" elapsed="0.000020"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.328270" elapsed="0.000179"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.327598" elapsed="0.000874"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.327281" elapsed="0.001244"/>
</kw>
<doc>🔗 Establish connection to VMware vCenter and locate target host</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>vcenter</tag>
<status status="PASS" start="2025-10-07T19:57:10.313274" elapsed="0.015405"/>
</test>
<test id="s1-s7-t2" name="Critical - Collect VM Assignments to Datastores" line="40">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.330079" level="INFO">🏁 Starting: Critical - Collect VM Assignments to Datastores</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.329946" elapsed="0.000297"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.329720" elapsed="0.000618"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.330653" level="INFO">🔍 Collecting VM assignments to datastores...</msg>
<arg>🔍 Collecting VM assignments to datastores...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.330530" elapsed="0.000248"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.331189" level="INFO">📋 Target Host: esxi-host-01.example.com</msg>
<arg>📋 Target Host: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.330980" elapsed="0.000347"/>
</kw>
<kw name="Collect VM Datastore Assignments" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.332023" level="INFO">📊 Collecting VM datastore assignments for host: esxi-host-01.example.com...</msg>
<arg>📊 Collecting VM datastore assignments for host: ${VCENTER_HOST}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.331829" elapsed="0.000369"/>
</kw>
<kw name="Vcenter Get Vm Datastore Assignments" owner="VCenterLibrary">
<msg time="2025-10-07T19:57:10.332498" level="INFO">${assignments} = [{'vm_name': 'web-server-01', 'datastore': 'datastore-ssd-01', 'app_type': 'web'}, {'vm_name': 'database-server-01', 'datastore': 'datastore-nvme-01', 'app_type': 'database'}]</msg>
<var>${assignments}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get VM to datastore assignments for a host</doc>
<status status="PASS" start="2025-10-07T19:57:10.332318" elapsed="0.000208"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.332725" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T19:57:10.332784" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${assignments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.332630" elapsed="0.000172"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.333023" level="INFO">📊 Collected 2 VM assignments</msg>
<arg>📊 Collected ${count} VM assignments</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.332895" elapsed="0.000400"/>
</kw>
<return>
<value>${assignments}</value>
<status status="PASS" start="2025-10-07T19:57:10.333361" elapsed="0.000042"/>
</return>
<msg time="2025-10-07T19:57:10.333564" level="INFO">${vm_assignments} = [{'vm_name': 'web-server-01', 'datastore': 'datastore-ssd-01', 'app_type': 'web'}, {'vm_name': 'database-server-01', 'datastore': 'datastore-nvme-01', 'app_type': 'database'}]</msg>
<var>${vm_assignments}</var>
<doc>Collect all VM to datastore assignments for the target host</doc>
<status status="PASS" start="2025-10-07T19:57:10.331610" elapsed="0.001986"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.333990" level="INFO">${VM_ASSIGNMENTS} = [{'vm_name': 'web-server-01', 'datastore': 'datastore-ssd-01', 'app_type': 'web'}, {'vm_name': 'database-server-01', 'datastore': 'datastore-nvme-01', 'app_type': 'database'}]</msg>
<arg>${VM_ASSIGNMENTS}</arg>
<arg>${vm_assignments}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:57:10.333809" elapsed="0.000220"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.334298" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T19:57:10.334373" level="INFO">${vm_count} = 2</msg>
<var>${vm_count}</var>
<arg>${vm_assignments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.334198" elapsed="0.000195"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${vm_count} &gt; 0</arg>
<arg>msg=No VMs found on target host</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:57:10.334558" elapsed="0.000207"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.335056" level="INFO">📊 VM assignments collected: 2 VMs found</msg>
<arg>📊 VM assignments collected: ${vm_count} VMs found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.334922" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.335590" level="INFO">✅ VM datastore assignments collection complete</msg>
<arg>✅ VM datastore assignments collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.335458" elapsed="0.000298"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.337078" level="INFO">✅ Completed: Critical - Collect VM Assignments to Datastores - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.336917" elapsed="0.000331"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.336737" elapsed="0.000587"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.337532" elapsed="0.000030"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.337370" elapsed="0.000249"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.336708" elapsed="0.000943"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.336320" elapsed="0.001420"/>
</kw>
<doc>📊 Gather all VM to datastore assignments for the target host</doc>
<tag>collection</tag>
<tag>critical</tag>
<tag>datastore</tag>
<tag>vm_assignments</tag>
<status status="PASS" start="2025-10-07T19:57:10.329143" elapsed="0.008883"/>
</test>
<test id="s1-s7-t3" name="Critical - Collect Available Datastore Capacity" line="57">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.339491" level="INFO">🏁 Starting: Critical - Collect Available Datastore Capacity</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.339338" elapsed="0.000329"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.339084" elapsed="0.000673"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.340089" level="INFO">🔍 Collecting datastore capacity information...</msg>
<arg>🔍 Collecting datastore capacity information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.339977" elapsed="0.000269"/>
</kw>
<kw name="Collect Datastore Capacity" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.341039" level="INFO">📊 Collecting datastore capacity information...</msg>
<arg>📊 Collecting datastore capacity information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.340869" elapsed="0.000331"/>
</kw>
<kw name="Vcenter Get Datastore Capacity" owner="VCenterLibrary">
<msg time="2025-10-07T19:57:10.341538" level="INFO">${capacity} = [{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}, {'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}]</msg>
<var>${capacity}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get capacity information for datastores on a host</doc>
<status status="PASS" start="2025-10-07T19:57:10.341351" elapsed="0.000212"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.341759" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T19:57:10.341821" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${capacity}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.341664" elapsed="0.000176"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.342150" level="INFO">📊 Collected capacity data for 2 datastores</msg>
<arg>📊 Collected capacity data for ${count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.341958" elapsed="0.000357"/>
</kw>
<return>
<value>${capacity}</value>
<status status="PASS" start="2025-10-07T19:57:10.342413" elapsed="0.000068"/>
</return>
<msg time="2025-10-07T19:57:10.342745" level="INFO">${capacity_data} = [{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}, {'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}]</msg>
<var>${capacity_data}</var>
<doc>Collect capacity information for all datastores on target host</doc>
<status status="PASS" start="2025-10-07T19:57:10.340606" elapsed="0.002188"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.343276" level="INFO">${CAPACITY_DATA} = [{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}, {'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}]</msg>
<arg>${CAPACITY_DATA}</arg>
<arg>${capacity_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:57:10.343073" elapsed="0.000259"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.343713" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T19:57:10.343900" level="INFO">${datastore_count} = 2</msg>
<var>${datastore_count}</var>
<arg>${capacity_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.343562" elapsed="0.000369"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${datastore_count} &gt; 0</arg>
<arg>msg=No datastores found on target host</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:57:10.344161" elapsed="0.000287"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.345342" level="INFO">📊 Capacity data collected for 2 datastores</msg>
<arg>📊 Capacity data collected for ${datastore_count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.344677" elapsed="0.000863"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.349330" level="INFO">📊 Datastore: datastore-ssd-01 - Total: 1000GB, Free: 300GB, Used: 70%</msg>
<arg>📊 Datastore: ${ds['name']} - Total: ${ds['total_gb']}GB, Free: ${ds['free_gb']}GB, Used: ${ds['used_percent']}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.346135" elapsed="0.003406"/>
</kw>
<var name="${ds}">{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}</var>
<status status="PASS" start="2025-10-07T19:57:10.345994" elapsed="0.003612"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.352026" level="INFO">📊 Datastore: datastore-nvme-01 - Total: 2000GB, Free: 800GB, Used: 60%</msg>
<arg>📊 Datastore: ${ds['name']} - Total: ${ds['total_gb']}GB, Free: ${ds['free_gb']}GB, Used: ${ds['used_percent']}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.349878" elapsed="0.002316"/>
</kw>
<var name="${ds}">{'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}</var>
<status status="PASS" start="2025-10-07T19:57:10.349748" elapsed="0.002515"/>
</iter>
<var>${ds}</var>
<value>@{capacity_data}</value>
<status status="PASS" start="2025-10-07T19:57:10.345737" elapsed="0.006564"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.352712" level="INFO">✅ Datastore capacity collection complete</msg>
<arg>✅ Datastore capacity collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.352584" elapsed="0.000284"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.354201" level="INFO">✅ Completed: Critical - Collect Available Datastore Capacity - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.353958" elapsed="0.000417"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.353705" elapsed="0.000726"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.354558" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.354461" elapsed="0.000147"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.353673" elapsed="0.000954"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.353403" elapsed="0.001270"/>
</kw>
<doc>💾 Gather available capacity for all datastores on target host</doc>
<tag>capacity</tag>
<tag>collection</tag>
<tag>critical</tag>
<tag>datastore</tag>
<status status="PASS" start="2025-10-07T19:57:10.338608" elapsed="0.016187"/>
</test>
<test id="s1-s7-t4" name="Critical - Collect Performance Tier Information" line="77">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.356678" level="INFO">🏁 Starting: Critical - Collect Performance Tier Information</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.356477" elapsed="0.000401"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.356112" elapsed="0.000988"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.357499" level="INFO">🔍 Collecting datastore performance tier information...</msg>
<arg>🔍 Collecting datastore performance tier information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.357348" elapsed="0.000332"/>
</kw>
<kw name="Collect Datastore Performance Tiers" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.359111" level="INFO">📊 Collecting datastore performance tier information...</msg>
<arg>📊 Collecting datastore performance tier information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.358945" elapsed="0.000340"/>
</kw>
<kw name="Vcenter Get Datastore Performance Tiers" owner="VCenterLibrary">
<msg time="2025-10-07T19:57:10.359650" level="INFO">${tiers} = [{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}, {'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}]</msg>
<var>${tiers}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get performance tier classification for datastores</doc>
<status status="PASS" start="2025-10-07T19:57:10.359443" elapsed="0.000234"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.359868" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T19:57:10.359930" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${tiers}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.359778" elapsed="0.000227"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.360249" level="INFO">📊 Collected performance tier data for 2 datastores</msg>
<arg>📊 Collected performance tier data for ${count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.360112" elapsed="0.000304"/>
</kw>
<return>
<value>${tiers}</value>
<status status="PASS" start="2025-10-07T19:57:10.360519" elapsed="0.000069"/>
</return>
<msg time="2025-10-07T19:57:10.360736" level="INFO">${performance_tiers} = [{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}, {'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}]</msg>
<var>${performance_tiers}</var>
<doc>Collect performance tier classification for datastores</doc>
<status status="PASS" start="2025-10-07T19:57:10.358440" elapsed="0.002324"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.361141" level="INFO">${PERFORMANCE_TIERS} = [{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}, {'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}]</msg>
<arg>${PERFORMANCE_TIERS}</arg>
<arg>${performance_tiers}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:57:10.360962" elapsed="0.000215"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.361867" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T19:57:10.361968" level="INFO">${tier_count} = 2</msg>
<var>${tier_count}</var>
<arg>${performance_tiers}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.361580" elapsed="0.000420"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${tier_count} &gt; 0</arg>
<arg>msg=No performance tier information available</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:57:10.362207" elapsed="0.000228"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.362797" level="INFO">📊 Performance tier data collected for 2 datastores</msg>
<arg>📊 Performance tier data collected for ${tier_count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.362643" elapsed="0.000310"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.364823" level="INFO">📊 Datastore: datastore-ssd-01 - Tier: STANDARD_PERFORMANCE - Type: SSD</msg>
<arg>📊 Datastore: ${tier['name']} - Tier: ${tier['performance_tier']} - Type: ${tier['storage_type']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.363382" elapsed="0.001626"/>
</kw>
<var name="${tier}">{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}</var>
<status status="PASS" start="2025-10-07T19:57:10.363290" elapsed="0.001779"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.367916" level="INFO">📊 Datastore: datastore-nvme-01 - Tier: HIGH_PERFORMANCE - Type: NVMe</msg>
<arg>📊 Datastore: ${tier['name']} - Tier: ${tier['performance_tier']} - Type: ${tier['storage_type']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.365288" elapsed="0.002841"/>
</kw>
<var name="${tier}">{'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}</var>
<status status="PASS" start="2025-10-07T19:57:10.365163" elapsed="0.003020"/>
</iter>
<var>${tier}</var>
<value>@{performance_tiers}</value>
<status status="PASS" start="2025-10-07T19:57:10.363132" elapsed="0.005089"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.368629" level="INFO">✅ Performance tier collection complete</msg>
<arg>✅ Performance tier collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.368487" elapsed="0.000311"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.370233" level="INFO">✅ Completed: Critical - Collect Performance Tier Information - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.370036" elapsed="0.000380"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.369753" elapsed="0.000740"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.370700" elapsed="0.000040"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.370538" elapsed="0.000274"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.369698" elapsed="0.001149"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.369386" elapsed="0.001534"/>
</kw>
<doc>⚡ Gather performance tier classification for all datastores</doc>
<tag>critical</tag>
<tag>datastore</tag>
<tag>performance</tag>
<tag>tiers</tag>
<status status="PASS" start="2025-10-07T19:57:10.355581" elapsed="0.015520"/>
</test>
<test id="s1-s7-t5" name="Critical - Collect Subscription Level Information" line="97">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.373160" level="INFO">🏁 Starting: Critical - Collect Subscription Level Information</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.372966" elapsed="0.000387"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.372622" elapsed="0.000843"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.374249" level="INFO">🔍 Collecting datastore subscription level information...</msg>
<arg>🔍 Collecting datastore subscription level information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.373994" elapsed="0.000471"/>
</kw>
<kw name="Collect Datastore Subscription Levels" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.375290" level="INFO">📊 Collecting datastore subscription level information...</msg>
<arg>📊 Collecting datastore subscription level information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.375163" elapsed="0.000277"/>
</kw>
<kw name="Vcenter Get Datastore Subscription Levels" owner="VCenterLibrary">
<msg time="2025-10-07T19:57:10.375765" level="INFO">${subscription} = [{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}, {'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}]</msg>
<var>${subscription}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get subscription levels and oversubscription ratios for datastores</doc>
<status status="PASS" start="2025-10-07T19:57:10.375579" elapsed="0.000210"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.375987" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T19:57:10.376048" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${subscription}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.375897" elapsed="0.000170"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.376298" level="INFO">📊 Collected subscription data for 2 datastores</msg>
<arg>📊 Collected subscription data for ${count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.376157" elapsed="0.000302"/>
</kw>
<return>
<value>${subscription}</value>
<status status="PASS" start="2025-10-07T19:57:10.376543" elapsed="0.000054"/>
</return>
<msg time="2025-10-07T19:57:10.376768" level="INFO">${subscription_data} = [{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}, {'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}]</msg>
<var>${subscription_data}</var>
<doc>Collect subscription levels and oversubscription ratios</doc>
<status status="PASS" start="2025-10-07T19:57:10.374852" elapsed="0.001952"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.377241" level="INFO">${SUBSCRIPTION_DATA} = [{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}, {'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}]</msg>
<arg>${SUBSCRIPTION_DATA}</arg>
<arg>${subscription_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:57:10.377029" elapsed="0.000327"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.377698" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T19:57:10.377762" level="INFO">${sub_count} = 2</msg>
<var>${sub_count}</var>
<arg>${subscription_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.377596" elapsed="0.000186"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${sub_count} &gt; 0</arg>
<arg>msg=No subscription level information available</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T19:57:10.377986" elapsed="0.000231"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.378609" level="INFO">📊 Subscription data collected for 2 datastores</msg>
<arg>📊 Subscription data collected for ${sub_count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.378443" elapsed="0.000372"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.381463" level="INFO">📊 Datastore: datastore-ssd-01 - Provisioned: 1500GB, Ratio: 1.5:1</msg>
<arg>📊 Datastore: ${sub['name']} - Provisioned: ${sub['provisioned_gb']}GB, Ratio: ${sub['subscription_ratio']}:1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.379600" elapsed="0.002081"/>
</kw>
<var name="${sub}">{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}</var>
<status status="PASS" start="2025-10-07T19:57:10.379477" elapsed="0.002272"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.383326" level="INFO">📊 Datastore: datastore-nvme-01 - Provisioned: 3000GB, Ratio: 1.5:1</msg>
<arg>📊 Datastore: ${sub['name']} - Provisioned: ${sub['provisioned_gb']}GB, Ratio: ${sub['subscription_ratio']}:1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.381980" elapsed="0.001572"/>
</kw>
<var name="${sub}">{'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}</var>
<status status="PASS" start="2025-10-07T19:57:10.381860" elapsed="0.001756"/>
</iter>
<var>${sub}</var>
<value>@{subscription_data}</value>
<status status="PASS" start="2025-10-07T19:57:10.378994" elapsed="0.004669"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.384082" level="INFO">✅ Subscription level collection complete</msg>
<arg>✅ Subscription level collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.383939" elapsed="0.000303"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.385374" level="INFO">✅ Completed: Critical - Collect Subscription Level Information - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.385202" elapsed="0.000351"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.385037" elapsed="0.000571"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.385782" elapsed="0.000023"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.385651" elapsed="0.000188"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.385017" elapsed="0.000842"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.384744" elapsed="0.001160"/>
</kw>
<doc>📈 Gather subscription levels and oversubscription ratios</doc>
<tag>capacity_planning</tag>
<tag>critical</tag>
<tag>datastore</tag>
<tag>subscription</tag>
<status status="PASS" start="2025-10-07T19:57:10.372062" elapsed="0.013982"/>
</test>
<test id="s1-s7-t6" name="Critical - Capture Host Configuration Screenshot" line="117">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.387543" level="INFO">🏁 Starting: Critical - Capture Host Configuration Screenshot</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.387409" elapsed="0.000318"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.387158" elapsed="0.000656"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.388150" level="INFO">🔍 Capturing host configuration screenshot...</msg>
<arg>🔍 Capturing host configuration screenshot...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.388025" elapsed="0.000294"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.388688" level="INFO">📋 Screenshot will include: Datastores, VM assignments, Capacity, Performance status</msg>
<arg>📋 Screenshot will include: Datastores, VM assignments, Capacity, Performance status</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.388552" elapsed="0.000287"/>
</kw>
<kw name="Capture Host Configuration Screenshot" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.389549" level="INFO">📸 Capturing host configuration screenshot...</msg>
<arg>📸 Capturing host configuration screenshot...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.389441" elapsed="0.000270"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T19:57:10.390066" level="INFO">${timestamp} = 20251007_195710</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T19:57:10.389848" elapsed="0.000246"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.390427" level="INFO">${screenshot_file} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251007_195710.PNG</msg>
<var>${screenshot_file}</var>
<arg>${SCREENSHOT_DIR}/host_config_${timestamp}.${SCREENSHOT_FORMAT}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T19:57:10.390213" elapsed="0.000240"/>
</kw>
<kw name="Vcenter Capture Host Screenshot" owner="VCenterLibrary">
<msg time="2025-10-07T19:57:10.391876" level="INFO">${path} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251007_195710.PNG</msg>
<var>${path}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<arg>${screenshot_file}</arg>
<doc>Capture screenshot of host configuration</doc>
<status status="PASS" start="2025-10-07T19:57:10.390576" elapsed="0.001334"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.392270" level="INFO">📸 Screenshot captured: C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251007_195710.PNG</msg>
<arg>📸 Screenshot captured: ${path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.392061" elapsed="0.000424"/>
</kw>
<return>
<value>${path}</value>
<status status="PASS" start="2025-10-07T19:57:10.392740" elapsed="0.000064"/>
</return>
<msg time="2025-10-07T19:57:10.392939" level="INFO">${screenshot_path} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251007_195710.PNG</msg>
<var>${screenshot_path}</var>
<doc>Capture screenshot of host configuration and status</doc>
<status status="PASS" start="2025-10-07T19:57:10.389199" elapsed="0.003765"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.393338" level="INFO">${SCREENSHOT_PATH} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251007_195710.PNG</msg>
<arg>${SCREENSHOT_PATH}</arg>
<arg>${screenshot_path}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T19:57:10.393167" elapsed="0.000207"/>
</kw>
<kw name="File Should Exist" owner="OperatingSystem">
<msg time="2025-10-07T19:57:10.393773" level="INFO" html="true">File '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\screenshots\host_config_20251007_195710.PNG"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\screenshots\host_config_20251007_195710.PNG&lt;/a&gt;' exists.</msg>
<arg>${screenshot_path}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<status status="PASS" start="2025-10-07T19:57:10.393564" elapsed="0.000264"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.394190" level="INFO">📸 Screenshot saved: C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251007_195710.PNG</msg>
<arg>📸 Screenshot saved: ${screenshot_path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.394045" elapsed="0.000346"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.394942" level="INFO">✅ Host configuration screenshot captured</msg>
<arg>✅ Host configuration screenshot captured</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.394632" elapsed="0.000655"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.396656" level="INFO">✅ Completed: Critical - Capture Host Configuration Screenshot - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.396477" elapsed="0.000362"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.396273" elapsed="0.000636"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.397035" elapsed="0.000030"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.396939" elapsed="0.000170"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.396245" elapsed="0.000895"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.395840" elapsed="0.001345"/>
</kw>
<doc>📸 Capture screenshot of host configuration and status parameters</doc>
<tag>critical</tag>
<tag>documentation</tag>
<tag>host_status</tag>
<tag>screenshot</tag>
<status status="PASS" start="2025-10-07T19:57:10.386536" elapsed="0.010868"/>
</test>
<test id="s1-s7-t7" name="Critical - Validate VM Datastore Placement" line="133">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.399240" level="INFO">🏁 Starting: Critical - Validate VM Datastore Placement</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.399046" elapsed="0.000406"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.398691" elapsed="0.000849"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.400058" level="INFO">🔍 Validating VM datastore placement against cluster standards...</msg>
<arg>🔍 Validating VM datastore placement against cluster standards...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.399898" elapsed="0.000334"/>
</kw>
<kw name="Validate VM Datastore Placement" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.400881" level="INFO">✅ Validating VM datastore placement...</msg>
<arg>✅ Validating VM datastore placement...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.400779" elapsed="0.000257"/>
</kw>
<kw name="Datastore Validator Validate Vm Placement" owner="DatastoreValidator">
<msg time="2025-10-07T19:57:10.401403" level="INFO">${results} = {'violations': [], 'total_vms': 2, 'cluster': 'Production-Cluster'}</msg>
<var>${results}</var>
<arg>${vm_assignments}</arg>
<arg>${CLUSTER_NAME}</arg>
<doc>Validate VM datastore placement against cluster standards</doc>
<status status="PASS" start="2025-10-07T19:57:10.401187" elapsed="0.000243"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T19:57:10.401712" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T19:57:10.401550" elapsed="0.000187"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.401954" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T19:57:10.402026" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.401852" elapsed="0.000196"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.402317" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.402163" elapsed="0.000360"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T19:57:10.402619" elapsed="0.000049"/>
</return>
<msg time="2025-10-07T19:57:10.402838" level="INFO">${placement_results} = {'violations': [], 'total_vms': 2, 'cluster': 'Production-Cluster'}</msg>
<var>${placement_results}</var>
<arg>${VM_ASSIGNMENTS}</arg>
<doc>Validate VM datastore assignments against cluster standards</doc>
<status status="PASS" start="2025-10-07T19:57:10.400507" elapsed="0.002356"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T19:57:10.403346" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${placement_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T19:57:10.403091" elapsed="0.000291"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.403714" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T19:57:10.403786" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.403612" elapsed="0.000257"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.404220" level="INFO">📊 Placement validation results: 0 violations found</msg>
<arg>📊 Placement validation results: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.404076" elapsed="0.000301"/>
</kw>
<if>
<branch type="IF" condition="${violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.405089" elapsed="0.000025"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T19:57:10.404966" elapsed="0.000199"/>
</iter>
<var>${violation}</var>
<value>@{violations}</value>
<status status="NOT RUN" start="2025-10-07T19:57:10.404887" elapsed="0.000313"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>VM datastore placement has ${violation_count} violations</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.405334" elapsed="0.000023"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.404575" elapsed="0.000844"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.404547" elapsed="0.000906"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.405844" level="INFO">✅ VM datastore placement validated: All VMs comply with cluster standards</msg>
<arg>✅ VM datastore placement validated: All VMs comply with cluster standards</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.405691" elapsed="0.000322"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.407225" level="INFO">✅ Completed: Critical - Validate VM Datastore Placement - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.407017" elapsed="0.000370"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.406821" elapsed="0.000653"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.407641" elapsed="0.000028"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.407514" elapsed="0.000215"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.406796" elapsed="0.000964"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.406460" elapsed="0.001367"/>
</kw>
<doc>✅ Compare VM datastore assignments against cluster standards</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>validation</tag>
<tag>vm_placement</tag>
<status status="PASS" start="2025-10-07T19:57:10.397862" elapsed="0.010323"/>
</test>
<test id="s1-s7-t8" name="Critical - Validate Available Capacity" line="157">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.413328" level="INFO">🏁 Starting: Critical - Validate Available Capacity</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.413149" elapsed="0.000709"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.409469" elapsed="0.004482"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.414526" level="INFO">🔍 Validating datastore available capacity...</msg>
<arg>🔍 Validating datastore available capacity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.414308" elapsed="0.000524"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.415398" level="INFO">📋 Minimum required free capacity: 20%</msg>
<arg>📋 Minimum required free capacity: ${MIN_FREE_CAPACITY_PERCENT}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.415144" elapsed="0.000408"/>
</kw>
<kw name="Validate Datastore Capacity" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.416206" level="INFO">✅ Validating datastore capacity...</msg>
<arg>✅ Validating datastore capacity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.416106" elapsed="0.000264"/>
</kw>
<kw name="Datastore Validator Validate Capacity" owner="DatastoreValidator">
<msg time="2025-10-07T19:57:10.416789" level="FAIL">TypeError: '&lt;' not supported between instances of 'float' and 'str'</msg>
<var>${results}</var>
<arg>${capacity_data}</arg>
<arg>${MIN_FREE_CAPACITY_PERCENT}</arg>
<doc>Validate datastores have sufficient available capacity</doc>
<status status="FAIL" start="2025-10-07T19:57:10.416532" elapsed="0.002562">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${warnings}</var>
<arg>${results}</arg>
<arg>warnings</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.419244" elapsed="0.000020"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${warning_count}</var>
<arg>${warnings}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.419356" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${warning_count} warnings found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.419456" elapsed="0.000015"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T19:57:10.419511" elapsed="0.000017"/>
</return>
<var>${capacity_results}</var>
<arg>${CAPACITY_DATA}</arg>
<doc>Validate datastores have sufficient available capacity</doc>
<status status="FAIL" start="2025-10-07T19:57:10.415846" elapsed="0.003777">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${warnings}</var>
<arg>${capacity_results}</arg>
<arg>warnings</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.419845" elapsed="0.000020"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${warning_count}</var>
<arg>${warnings}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.420060" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Capacity validation results: ${warning_count} warnings found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.420261" elapsed="0.000018"/>
</kw>
<if>
<branch type="IF" condition="${warning_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Warning: Datastore ${warning['name']} - Free: ${warning['free_percent']}% (Below threshold: ${MIN_FREE_CAPACITY_PERCENT}%)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.420689" elapsed="0.000018"/>
</kw>
<var name="${warning}"/>
<status status="NOT RUN" start="2025-10-07T19:57:10.420610" elapsed="0.000129"/>
</iter>
<var>${warning}</var>
<value>@{warnings}</value>
<status status="NOT RUN" start="2025-10-07T19:57:10.420498" elapsed="0.000266"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Datastore capacity validation failed: ${warning_count} datastores below minimum threshold</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.420842" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.420448" elapsed="0.000434"/>
</branch>
<status status="NOT RUN" start="2025-10-07T19:57:10.420428" elapsed="0.000490"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Available capacity validated: All datastores meet minimum requirements</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.421160" elapsed="0.000042"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.422367" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.422196" elapsed="0.000226"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.422691" level="INFO">❌ Completed: Critical - Validate Available Capacity - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.422524" elapsed="0.000334"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.422444" elapsed="0.000463"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.422178" elapsed="0.000764"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.421904" elapsed="0.001110"/>
</kw>
<doc>✅ Validate datastores have sufficient available capacity</doc>
<tag>capacity</tag>
<tag>critical</tag>
<tag>storage</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T19:57:10.408936" elapsed="0.014240">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</test>
<test id="s1-s7-t9" name="Critical - Validate Performance Tier Assignment" line="182">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.425338" level="INFO">🏁 Starting: Critical - Validate Performance Tier Assignment</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.425171" elapsed="0.000374"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.424808" elapsed="0.000827"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.426035" level="INFO">🔍 Validating performance tier assignments...</msg>
<arg>🔍 Validating performance tier assignments...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.425922" elapsed="0.000310"/>
</kw>
<kw name="Validate Performance Tier Assignment" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.426938" level="INFO">✅ Validating performance tier assignments...</msg>
<arg>✅ Validating performance tier assignments...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.426836" elapsed="0.000266"/>
</kw>
<kw name="Datastore Validator Validate Performance Tiers" owner="DatastoreValidator">
<msg time="2025-10-07T19:57:10.427528" level="INFO">${results} = {'mismatches': [], 'total_vms': 2}</msg>
<var>${results}</var>
<arg>${vm_assignments}</arg>
<arg>${performance_tiers}</arg>
<arg>${VM_APP_CATEGORIES}</arg>
<doc>Validate VMs are on appropriate performance tiers</doc>
<status status="PASS" start="2025-10-07T19:57:10.427248" elapsed="0.000308"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T19:57:10.427843" level="INFO">${mismatches} = []</msg>
<var>${mismatches}</var>
<arg>${results}</arg>
<arg>mismatches</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T19:57:10.427679" elapsed="0.000191"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.428077" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T19:57:10.428161" level="INFO">${mismatch_count} = 0</msg>
<var>${mismatch_count}</var>
<arg>${mismatches}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.427988" elapsed="0.000242"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.428546" level="INFO">📊 Validation complete: 0 mismatches found</msg>
<arg>📊 Validation complete: ${mismatch_count} mismatches found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.428373" elapsed="0.000317"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T19:57:10.428777" elapsed="0.000050"/>
</return>
<msg time="2025-10-07T19:57:10.429004" level="INFO">${tier_results} = {'mismatches': [], 'total_vms': 2}</msg>
<var>${tier_results}</var>
<arg>${VM_ASSIGNMENTS}</arg>
<arg>${PERFORMANCE_TIERS}</arg>
<doc>Validate VMs are on appropriate performance tiers</doc>
<status status="PASS" start="2025-10-07T19:57:10.426530" elapsed="0.002531"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T19:57:10.429519" level="INFO">${mismatches} = []</msg>
<var>${mismatches}</var>
<arg>${tier_results}</arg>
<arg>mismatches</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T19:57:10.429296" elapsed="0.000258"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.429893" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T19:57:10.429960" level="INFO">${mismatch_count} = 0</msg>
<var>${mismatch_count}</var>
<arg>${mismatches}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.429783" elapsed="0.000198"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.430290" level="INFO">📊 Performance tier validation results: 0 mismatches found</msg>
<arg>📊 Performance tier validation results: ${mismatch_count} mismatches found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.430147" elapsed="0.000291"/>
</kw>
<if>
<branch type="IF" condition="${mismatch_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Mismatch: VM ${mismatch['vm_name']} - Current tier: ${mismatch['current_tier']}, Required: ${mismatch['required_tier']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.430917" elapsed="0.000018"/>
</kw>
<var name="${mismatch}"/>
<status status="NOT RUN" start="2025-10-07T19:57:10.430838" elapsed="0.000132"/>
</iter>
<var>${mismatch}</var>
<value>@{mismatches}</value>
<status status="NOT RUN" start="2025-10-07T19:57:10.430783" elapsed="0.000284"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Performance tier validation failed: ${mismatch_count} VMs on incorrect storage tier</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.431158" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.430625" elapsed="0.000577"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.430600" elapsed="0.000622"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.431502" level="INFO">✅ Performance tier validated: All VMs on appropriate storage tiers</msg>
<arg>✅ Performance tier validated: All VMs on appropriate storage tiers</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.431395" elapsed="0.000250"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.432574" level="INFO">✅ Completed: Critical - Validate Performance Tier Assignment - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.432422" elapsed="0.000316"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.432267" elapsed="0.000543"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.432959" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.432858" elapsed="0.000154"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.432249" elapsed="0.000782"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.432010" elapsed="0.001064"/>
</kw>
<doc>✅ Validate VMs are assigned to appropriate performance tiers</doc>
<tag>application_requirements</tag>
<tag>critical</tag>
<tag>performance</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-07T19:57:10.424012" elapsed="0.009268"/>
</test>
<test id="s1-s7-t10" name="Critical - Validate Subscription Ratios" line="206">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.434673" level="INFO">🏁 Starting: Critical - Validate Subscription Ratios</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.434539" elapsed="0.000263"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.434300" elapsed="0.000585"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.435261" level="INFO">🔍 Validating datastore subscription ratios...</msg>
<arg>🔍 Validating datastore subscription ratios...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.435122" elapsed="0.000322"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.435883" level="INFO">📋 Maximum allowed subscription ratio: 2.0:1</msg>
<arg>📋 Maximum allowed subscription ratio: ${MAX_SUBSCRIPTION_RATIO}:1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.435702" elapsed="0.000343"/>
</kw>
<kw name="Validate Subscription Ratios" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.436672" level="INFO">✅ Validating subscription ratios...</msg>
<arg>✅ Validating subscription ratios...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.436572" elapsed="0.000229"/>
</kw>
<kw name="Datastore Validator Validate Subscription" owner="DatastoreValidator">
<msg time="2025-10-07T19:57:10.437181" level="FAIL">TypeError: '&gt;' not supported between instances of 'float' and 'str'</msg>
<var>${results}</var>
<arg>${subscription_data}</arg>
<arg>${MAX_SUBSCRIPTION_RATIO}</arg>
<doc>Validate datastore subscription ratios</doc>
<status status="FAIL" start="2025-10-07T19:57:10.436964" elapsed="0.000718">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${oversubscribed}</var>
<arg>${results}</arg>
<arg>oversubscribed</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.437826" elapsed="0.000023"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${oversub_count}</var>
<arg>${oversubscribed}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.437968" elapsed="0.000120"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${oversub_count} oversubscribed datastores found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.438254" elapsed="0.000043"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T19:57:10.438368" elapsed="0.000022"/>
</return>
<var>${sub_results}</var>
<arg>${SUBSCRIPTION_DATA}</arg>
<doc>Validate datastore subscription ratios</doc>
<status status="FAIL" start="2025-10-07T19:57:10.436332" elapsed="0.002181">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${oversubscribed}</var>
<arg>${sub_results}</arg>
<arg>oversubscribed</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.438747" elapsed="0.000022"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${oversub_count}</var>
<arg>${oversubscribed}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.439017" elapsed="0.000025"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Subscription validation results: ${oversub_count} oversubscribed datastores found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.439265" elapsed="0.000023"/>
</kw>
<if>
<branch type="IF" condition="${oversub_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Oversubscribed: Datastore ${oversub['name']} - Ratio: ${oversub['ratio']}:1 (Max: ${MAX_SUBSCRIPTION_RATIO}:1)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.439687" elapsed="0.000021"/>
</kw>
<var name="${oversub}"/>
<status status="NOT RUN" start="2025-10-07T19:57:10.439596" elapsed="0.000155"/>
</iter>
<var>${oversub}</var>
<value>@{oversubscribed}</value>
<status status="NOT RUN" start="2025-10-07T19:57:10.439534" elapsed="0.000247"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Subscription validation failed: ${oversub_count} datastores exceed maximum ratio</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.439898" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.439473" elapsed="0.000476"/>
</branch>
<status status="NOT RUN" start="2025-10-07T19:57:10.439448" elapsed="0.000610"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Subscription ratios validated: All datastores within acceptable limits</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.440271" elapsed="0.000021"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.441429" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.441243" elapsed="0.000241"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.441788" level="INFO">❌ Completed: Critical - Validate Subscription Ratios - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.441595" elapsed="0.000412"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.441507" elapsed="0.000552"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.441223" elapsed="0.000862"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.440802" elapsed="0.001348"/>
</kw>
<doc>✅ Validate datastore subscription ratios meet cluster standards</doc>
<tag>capacity_planning</tag>
<tag>critical</tag>
<tag>subscription</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T19:57:10.433794" elapsed="0.008516">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</test>
<test id="s1-s7-t11" name="Normal - Comprehensive Datastore Configuration Validation" line="231">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.443910" level="INFO">🏁 Starting: Normal - Comprehensive Datastore Configuration Validation</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.443754" elapsed="0.000331"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.443509" elapsed="0.000661"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.444532" level="INFO">🔍 Performing comprehensive datastore configuration validation...</msg>
<arg>🔍 Performing comprehensive datastore configuration validation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.444396" elapsed="0.000296"/>
</kw>
<kw name="Validate Complete Datastore Configuration" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.445417" level="INFO">🔍 Performing comprehensive datastore configuration validation...</msg>
<arg>🔍 Performing comprehensive datastore configuration validation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.445314" elapsed="0.000239"/>
</kw>
<kw name="Validate VM Datastore Placement" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.446074" level="INFO">✅ Validating VM datastore placement...</msg>
<arg>✅ Validating VM datastore placement...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.445978" elapsed="0.000218"/>
</kw>
<kw name="Datastore Validator Validate Vm Placement" owner="DatastoreValidator">
<msg time="2025-10-07T19:57:10.446508" level="INFO">${results} = {'violations': [], 'total_vms': 2, 'cluster': 'Production-Cluster'}</msg>
<var>${results}</var>
<arg>${vm_assignments}</arg>
<arg>${CLUSTER_NAME}</arg>
<doc>Validate VM datastore placement against cluster standards</doc>
<status status="PASS" start="2025-10-07T19:57:10.446341" elapsed="0.000190"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T19:57:10.446975" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T19:57:10.446641" elapsed="0.000363"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.447237" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T19:57:10.447303" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T19:57:10.447122" elapsed="0.000201"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.447562" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.447419" elapsed="0.000292"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T19:57:10.447778" elapsed="0.000038"/>
</return>
<msg time="2025-10-07T19:57:10.447990" level="INFO">${vm_placement} = {'violations': [], 'total_vms': 2, 'cluster': 'Production-Cluster'}</msg>
<var>${vm_placement}</var>
<arg>${VM_ASSIGNMENTS}</arg>
<doc>Validate VM datastore assignments against cluster standards</doc>
<status status="PASS" start="2025-10-07T19:57:10.445747" elapsed="0.002279"/>
</kw>
<kw name="Validate Datastore Capacity" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.448612" level="INFO">✅ Validating datastore capacity...</msg>
<arg>✅ Validating datastore capacity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.448486" elapsed="0.000285"/>
</kw>
<kw name="Datastore Validator Validate Capacity" owner="DatastoreValidator">
<msg time="2025-10-07T19:57:10.449127" level="FAIL">TypeError: '&lt;' not supported between instances of 'float' and 'str'</msg>
<var>${results}</var>
<arg>${capacity_data}</arg>
<arg>${MIN_FREE_CAPACITY_PERCENT}</arg>
<doc>Validate datastores have sufficient available capacity</doc>
<status status="FAIL" start="2025-10-07T19:57:10.448891" elapsed="0.000696">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${warnings}</var>
<arg>${results}</arg>
<arg>warnings</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.449714" elapsed="0.000019"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${warning_count}</var>
<arg>${warnings}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.449821" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${warning_count} warnings found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.449923" elapsed="0.000015"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T19:57:10.449977" elapsed="0.000015"/>
</return>
<var>${capacity}</var>
<arg>${CAPACITY_DATA}</arg>
<doc>Validate datastores have sufficient available capacity</doc>
<status status="FAIL" start="2025-10-07T19:57:10.448219" elapsed="0.001851">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Validate Performance Tier Assignment" owner="datastore_keywords">
<var>${performance}</var>
<arg>${VM_ASSIGNMENTS}</arg>
<arg>${PERFORMANCE_TIERS}</arg>
<doc>Validate VMs are on appropriate performance tiers</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.450299" elapsed="0.000024"/>
</kw>
<kw name="Validate Subscription Ratios" owner="datastore_keywords">
<var>${subscription}</var>
<arg>${SUBSCRIPTION_DATA}</arg>
<doc>Validate datastore subscription ratios</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.450450" elapsed="0.000019"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${total_violations}</var>
<arg>${vm_placement}['violations'].__len__() + ${capacity}['warnings'].__len__() + ${performance}['mismatches'].__len__() + ${subscription}['oversubscribed'].__len__()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.450555" elapsed="0.000016"/>
</kw>
<if>
<branch type="IF" condition="${total_violations} &gt; 0">
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Comprehensive validation found ${total_violations} total issues</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.450721" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.450640" elapsed="0.000124"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>✅ Comprehensive validation: All checks passed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.450855" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.450784" elapsed="0.000112"/>
</branch>
<status status="NOT RUN" start="2025-10-07T19:57:10.450617" elapsed="0.000296"/>
</if>
<return>
<value>${total_violations}</value>
<status status="NOT RUN" start="2025-10-07T19:57:10.450939" elapsed="0.000010"/>
</return>
<doc>Perform comprehensive datastore configuration validation</doc>
<status status="FAIL" start="2025-10-07T19:57:10.445088" elapsed="0.005927">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Comprehensive validation summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.451406" elapsed="0.000022"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - vCenter connection: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.451795" elapsed="0.000022"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - VM datastore assignments: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.452023" elapsed="0.000019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Available capacity: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.452238" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Performance tier placement: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.452450" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Subscription ratios: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.452659" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Configuration screenshot: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.452921" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Comprehensive datastore configuration validation: PASSED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.453114" elapsed="0.000017"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T19:57:10.453917" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T19:57:10.453753" elapsed="0.000214"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.454222" level="INFO">❌ Completed: Normal - Comprehensive Datastore Configuration Validation - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.454063" elapsed="0.000370"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.453988" elapsed="0.000537"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.453736" elapsed="0.000835"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T19:57:10.453477" elapsed="0.001168"/>
</kw>
<doc>🔗 Perform comprehensive validation of all datastore configuration aspects</doc>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T19:57:10.442937" elapsed="0.012001">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</test>
<kw name="Generate Datastore Configuration Executive Summary" owner="datastore_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.456666" level="INFO">📊 Generating Datastore Configuration Executive Summary...</msg>
<arg>📊 Generating Datastore Configuration Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.456485" elapsed="0.000350"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T19:57:10.457998" level="INFO">${end_time} = 2025-10-07 19:57:10</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T19:57:10.456992" elapsed="0.001046"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.459467" level="INFO">${TEST_END_TIME} = 2025-10-07 19:57:10</msg>
<arg>${TEST_END_TIME}</arg>
<arg>${end_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T19:57:10.458239" elapsed="0.001277"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.459774" level="INFO">${summary_file} = C:\Users\write\project_2025\robot\robotframework/test_results/test9_datastore_executive_summary.html</msg>
<var>${summary_file}</var>
<arg>${EXECDIR}/test_results/test9_datastore_executive_summary.html</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T19:57:10.459627" elapsed="0.000170"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T19:57:10.460683" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;html&gt;&lt;head&gt;&lt;title&gt;Datastore Configuration Test Summary&lt;/title&gt;&lt;/head&gt;&lt;body&gt;</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-07T19:57:10.459900" elapsed="0.000842"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T19:57:10.461509" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;h1&gt;🎯 Datastore Configuration Validation - Executive Summary&lt;/h1&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T19:57:10.460969" elapsed="0.000850"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T19:57:10.462769" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Test Period:&lt;/strong&gt; ${TEST_START_TIME} to ${TEST_END_TIME}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T19:57:10.462076" elapsed="0.000765"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T19:57:10.463504" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;vCenter Server:&lt;/strong&gt; ${VCENTER_SERVER}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T19:57:10.462977" elapsed="0.000592"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T19:57:10.464264" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Target Host:&lt;/strong&gt; ${VCENTER_HOST}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T19:57:10.463695" elapsed="0.000635"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T19:57:10.464955" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Cluster:&lt;/strong&gt; ${CLUSTER_NAME}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T19:57:10.464451" elapsed="0.000571"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T19:57:10.465712" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Screenshot:&lt;/strong&gt; ${SCREENSHOT_PATH}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T19:57:10.465154" elapsed="0.000622"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T19:57:10.466398" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;/body&gt;&lt;/html&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T19:57:10.465903" elapsed="0.000561"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.466783" level="INFO">✅ Executive summary generated: C:\Users\write\project_2025\robot\robotframework/test_results/test9_datastore_executive_summary.html</msg>
<arg>✅ Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.466599" elapsed="0.000376"/>
</kw>
<if>
<branch type="IF" condition="${VCENTER_CONN}">
<kw name="Vcenter Disconnect" owner="VCenterLibrary">
<arg>${VCENTER_CONN}</arg>
<doc>Disconnect from vCenter server</doc>
<status status="PASS" start="2025-10-07T19:57:10.467245" elapsed="0.000168"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T19:57:10.467696" level="INFO">🔌 Disconnected from vCenter</msg>
<arg>🔌 Disconnected from vCenter</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T19:57:10.467564" elapsed="0.000291"/>
</kw>
<status status="PASS" start="2025-10-07T19:57:10.467083" elapsed="0.000817"/>
</branch>
<status status="PASS" start="2025-10-07T19:57:10.467053" elapsed="0.000880"/>
</if>
<doc>Generate executive summary report for datastore configuration test</doc>
<status status="PASS" start="2025-10-07T19:57:10.456237" elapsed="0.011757"/>
</kw>
<doc>💾 Datastore Configuration Validation Test Suite - Test-9
🔍 Process: Connect to vCenter → Collect Datastore Information → Validate Datastore Configuration
✅ Pass if datastore configuration meets cluster standards and application requirements
📊 Validates: VM assignments, available capacity, performance tiers, subscription levels</doc>
<status status="FAIL" start="2025-10-07T19:57:10.011900" elapsed="0.456133"/>
</suite>
<status status="FAIL" elapsed="19.247856"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="50" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">accuracy</stat>
<stat pass="0" fail="1" skip="0">adapters</stat>
<stat pass="0" fail="4" skip="0">analysis</stat>
<stat pass="0" fail="1" skip="0">api</stat>
<stat pass="5" fail="0" skip="0">api_collection</stat>
<stat pass="1" fail="0" skip="0">application_requirements</stat>
<stat pass="0" fail="1" skip="0">authentication</stat>
<stat pass="0" fail="1" skip="0">authorized_keys</stat>
<stat pass="1" fail="0" skip="0">backup_jobs</stat>
<stat pass="1" fail="0" skip="0">backup_policy</stat>
<stat pass="0" fail="1" skip="0">backup_recency</stat>
<stat pass="1" fail="0" skip="0">backup_schedule</stat>
<stat pass="1" fail="0" skip="0">backup_timestamp</stat>
<stat pass="1" fail="2" skip="0">capacity</stat>
<stat pass="1" fail="1" skip="0">capacity_planning</stat>
<stat pass="0" fail="1" skip="0">chrony</stat>
<stat pass="0" fail="1" skip="0">clock</stat>
<stat pass="0" fail="1" skip="0">cluster</stat>
<stat pass="2" fail="0" skip="0">collection</stat>
<stat pass="2" fail="15" skip="0">compliance</stat>
<stat pass="0" fail="4" skip="0">comprehensive</stat>
<stat pass="0" fail="2" skip="0">configuration</stat>
<stat pass="2" fail="3" skip="0">connection</stat>
<stat pass="0" fail="2" skip="0">cpu</stat>
<stat pass="18" fail="35" skip="0">critical</stat>
<stat pass="0" fail="1" skip="0">crypto</stat>
<stat pass="0" fail="1" skip="0">data_collection</stat>
<stat pass="4" fail="0" skip="0">datastore</stat>
<stat pass="0" fail="2" skip="0">disk</stat>
<stat pass="0" fail="1" skip="0">dns</stat>
<stat pass="1" fail="0" skip="0">documentation</stat>
<stat pass="2" fail="0" skip="0">dr</stat>
<stat pass="0" fail="1" skip="0">drift</stat>
<stat pass="0" fail="1" skip="0">filesystem</stat>
<stat pass="0" fail="1" skip="0">gateway</stat>
<stat pass="0" fail="6" skip="0">hardware</stat>
<stat pass="0" fail="2" skip="0">hostname</stat>
<stat pass="1" fail="0" skip="0">host_status</stat>
<stat pass="2" fail="3" skip="0">infrastructure</stat>
<stat pass="0" fail="1" skip="0">ip</stat>
<stat pass="1" fail="0" skip="0">job_status</stat>
<stat pass="1" fail="0" skip="0">job_success</stat>
<stat pass="0" fail="1" skip="0">lvm</stat>
<stat pass="0" fail="2" skip="0">memory</stat>
<stat pass="0" fail="1" skip="0">monitoring</stat>
<stat pass="0" fail="1" skip="0">network</stat>
<stat pass="0" fail="3" skip="0">networking</stat>
<stat pass="0" fail="15" skip="0">normal</stat>
<stat pass="0" fail="6" skip="0">ntp</stat>
<stat pass="1" fail="0" skip="0">offsite_compliance</stat>
<stat pass="1" fail="0" skip="0">offsite_replication</stat>
<stat pass="0" fail="1" skip="0">os</stat>
<stat pass="0" fail="1" skip="0">passwordless</stat>
<stat pass="2" fail="0" skip="0">performance</stat>
<stat pass="0" fail="3" skip="0">permissions</stat>
<stat pass="0" fail="1" skip="0">placement</stat>
<stat pass="1" fail="0" skip="0">policy_compliance</stat>
<stat pass="0" fail="1" skip="0">properties</stat>
<stat pass="0" fail="1" skip="0">public_key</stat>
<stat pass="1" fail="0" skip="0">recency</stat>
<stat pass="1" fail="0" skip="0">retention</stat>
<stat pass="0" fail="1" skip="0">retention_compliance</stat>
<stat pass="0" fail="1" skip="0">review</stat>
<stat pass="1" fail="0" skip="0">rpo</stat>
<stat pass="0" fail="1" skip="0">rpo_compliance</stat>
<stat pass="1" fail="0" skip="0">screenshot</stat>
<stat pass="0" fail="7" skip="0">security</stat>
<stat pass="0" fail="1" skip="0">server</stat>
<stat pass="0" fail="1" skip="0">service</stat>
<stat pass="0" fail="1" skip="0">sources</stat>
<stat pass="0" fail="2" skip="0">ssh</stat>
<stat pass="0" fail="1" skip="0">ssh_key</stat>
<stat pass="0" fail="6" skip="0">storage</stat>
<stat pass="0" fail="1" skip="0">subnet</stat>
<stat pass="1" fail="1" skip="0">subscription</stat>
<stat pass="0" fail="1" skip="0">synchronization</stat>
<stat pass="0" fail="1" skip="0">system</stat>
<stat pass="1" fail="0" skip="0">tiers</stat>
<stat pass="0" fail="3" skip="0">time</stat>
<stat pass="0" fail="1" skip="0">timezone</stat>
<stat pass="5" fail="10" skip="0">validation</stat>
<stat pass="1" fail="1" skip="0">vcenter</stat>
<stat pass="1" fail="0" skip="0">vcenter_api</stat>
<stat pass="0" fail="1" skip="0">verification</stat>
<stat pass="0" fail="1" skip="0">version</stat>
<stat pass="1" fail="0" skip="0">vm_assignments</stat>
<stat pass="1" fail="0" skip="0">vm_placement</stat>
<stat pass="0" fail="1" skip="0">volumes</stat>
</tag>
<suite>
<stat name="Backup Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration" id="s1" pass="18" fail="50" skip="0">Backup Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration</stat>
<stat name="Backup Validation" id="s1-s1" pass="10" fail="4" skip="0">Backup Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Backup Validation</stat>
<stat name="Network Validation" id="s1-s2" pass="0" fail="6" skip="0">Backup Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Network Validation</stat>
<stat name="Vm Validation" id="s1-s3" pass="0" fail="8" skip="0">Backup Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Vm Validation</stat>
<stat name="Disk Space Validation" id="s1-s4" pass="0" fail="8" skip="0">Backup Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Disk Space Validation</stat>
<stat name="Time Configuration Validation" id="s1-s5" pass="0" fail="10" skip="0">Backup Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Time Configuration Validation</stat>
<stat name="Ssh Key Authentication" id="s1-s6" pass="0" fail="11" skip="0">Backup Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Ssh Key Authentication</stat>
<stat name="Datastore Configuration" id="s1-s7" pass="8" fail="3" skip="0">Backup Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Datastore Configuration</stat>
</suite>
</statistics>
<errors>
<msg time="2025-10-07T19:56:58.877362" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T19:57:01.397650" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T19:57:03.286390" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T19:57:04.913503" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
</errors>
</robot>
