<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.3.2 (Python 3.13.8 on win32)" generated="2025-10-07T22:30:04.041152" rpa="false" schemaversion="5">
<suite id="s1" name="Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration">
<suite id="s1-s1" name="Backup Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test15_backup_validation\backup_validation.robot">
<kw name="Initialize Backup Validation Test Environment" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.018892" level="INFO">🚀 Initializing Backup Validation Test Environment...</msg>
<arg>🚀 Initializing Backup Validation Test Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.018727" elapsed="0.000320"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.020098" level="INFO">${VCENTER_API_CONN} = None</msg>
<arg>${VCENTER_API_CONN}</arg>
<arg>${None}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:29:47.019198" elapsed="0.000949"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.021260" level="INFO">${TEST_START_TIME} = </msg>
<arg>${TEST_START_TIME}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:29:47.020262" elapsed="0.001028"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T22:29:47.021540" level="INFO">${start_time} = 2025-10-07 22:29:47</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T22:29:47.021367" elapsed="0.000192"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.021749" level="INFO">${TEST_START_TIME} = 2025-10-07 22:29:47</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:29:47.021635" elapsed="0.000141"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T22:29:47.021980" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation"&gt;C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation&lt;/a&gt;' already exists.</msg>
<arg>results/test15_backup_validation</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T22:29:47.021845" elapsed="0.000172"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.022200" level="INFO">✅ Test environment initialized at 2025-10-07 22:29:47</msg>
<arg>✅ Test environment initialized at ${TEST_START_TIME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.022086" elapsed="0.000240"/>
</kw>
<doc>Initialize test environment for backup validation</doc>
<status status="PASS" start="2025-10-07T22:29:47.018226" elapsed="0.004165"/>
</kw>
<test id="s1-s1-t1" name="Critical - Connect to vCenter API" line="18">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.023550" level="INFO">🏁 Starting: Critical - Connect to vCenter API</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.023409" elapsed="0.000266"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.023079" elapsed="0.000659"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.024182" level="INFO">🔍 Establishing API connection to vCenter...</msg>
<arg>🔍 Establishing API connection to vCenter...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.024018" elapsed="0.000317"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.024641" level="INFO">📋 vCenter Server: vcenter.example.com</msg>
<arg>📋 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.024510" elapsed="0.000253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.025078" level="INFO">📋 API Endpoint: https://vcenter.example.com/api</msg>
<arg>📋 API Endpoint: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.024954" elapsed="0.000241"/>
</kw>
<kw name="Connect To vCenter API" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.030109" level="INFO">🔗 Connecting to vCenter API: https://vcenter.example.com/api</msg>
<arg>🔗 Connecting to vCenter API: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.029923" elapsed="0.000374"/>
</kw>
<kw name="Vcenter Api Connect" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.030836" level="INFO">${connection} = {'endpoint': 'https://vcenter.example.com/api', 'username': 'administrator@vsphere.local', 'authenticated': True, 'timeout': 30, 'verify_ssl': True, 'session_token': 'mock-session-token-12345'}</msg>
<var>${connection}</var>
<arg>${VCENTER_API_ENDPOINT}</arg>
<arg>${VCENTER_USERNAME}</arg>
<arg>${VCENTER_PASSWORD}</arg>
<arg>${API_TIMEOUT}</arg>
<arg>${API_VERIFY_SSL}</arg>
<doc>Establish connection to vCenter REST API</doc>
<status status="PASS" start="2025-10-07T22:29:47.030449" elapsed="0.000412"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.031123" level="INFO">${VCENTER_API_CONN} = {'endpoint': 'https://vcenter.example.com/api', 'username': 'administrator@vsphere.local', 'authenticated': True, 'timeout': 30, 'verify_ssl': True, 'session_token': 'mock-session-token-12345'}</msg>
<arg>${VCENTER_API_CONN}</arg>
<arg>${connection}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:29:47.030960" elapsed="0.000193"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.031364" level="INFO">✅ Connected to vCenter API: https://vcenter.example.com/api</msg>
<arg>✅ Connected to vCenter API: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.031231" elapsed="0.000264"/>
</kw>
<return>
<value>${connection}</value>
<status status="PASS" start="2025-10-07T22:29:47.031563" elapsed="0.000050"/>
</return>
<doc>Establish connection to vCenter REST API</doc>
<status status="PASS" start="2025-10-07T22:29:47.025435" elapsed="0.006281"/>
</kw>
<kw name="Verify vCenter API Connection" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.032185" level="INFO">🔍 Verifying vCenter API connection status...</msg>
<arg>🔍 Verifying vCenter API connection status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.032102" elapsed="0.000197"/>
</kw>
<kw name="Vcenter Api Verify Connection" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.032567" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>${VCENTER_API_CONN}</arg>
<doc>Verify vCenter API connection is active</doc>
<status status="PASS" start="2025-10-07T22:29:47.032423" elapsed="0.000166"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.032814" level="INFO">✅ vCenter API connection verified: True</msg>
<arg>✅ vCenter API connection verified: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.032686" elapsed="0.000427"/>
</kw>
<return>
<value>${status}</value>
<status status="PASS" start="2025-10-07T22:29:47.033165" elapsed="0.000034"/>
</return>
<msg time="2025-10-07T22:29:47.033316" level="INFO">${connection_status} = True</msg>
<var>${connection_status}</var>
<doc>Verify vCenter API connection is active</doc>
<status status="PASS" start="2025-10-07T22:29:47.031925" elapsed="0.001411"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>msg=Failed to establish vCenter API connection</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.033504" elapsed="0.000160"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.033917" level="INFO">✅ vCenter API connection established successfully</msg>
<arg>✅ vCenter API connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.033821" elapsed="0.000196"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.035056" level="INFO">✅ Completed: Critical - Connect to vCenter API - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.034897" elapsed="0.000298"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.034696" elapsed="0.000545"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.035365" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.035272" elapsed="0.000141"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.034669" elapsed="0.000764"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.034398" elapsed="0.001079"/>
</kw>
<doc>🔗 Establish API connection to VMware vCenter for backup policy queries</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>vcenter_api</tag>
<status status="PASS" start="2025-10-07T22:29:47.022456" elapsed="0.013238"/>
</test>
<test id="s1-s1-t2" name="Critical - Collect VM Backup Policy Configuration" line="35">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.036928" level="INFO">🏁 Starting: Critical - Collect VM Backup Policy Configuration</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.036822" elapsed="0.000234"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.036598" elapsed="0.000513"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.037408" level="INFO">🔍 Collecting VM backup policy configuration...</msg>
<arg>🔍 Collecting VM backup policy configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.037291" elapsed="0.000224"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.037788" level="INFO">📋 Target VMs: ['production-db-01', 'production-web-01', 'production-app-01', 'file-server-01']</msg>
<arg>📋 Target VMs: ${TARGET_VMS}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.037660" elapsed="0.000237"/>
</kw>
<kw name="Collect Backup Policy Configuration" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.038372" level="INFO">📊 Collecting backup policy configuration via API...</msg>
<arg>📊 Collecting backup policy configuration via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.038288" elapsed="0.000182"/>
</kw>
<kw name="Vcenter Api Get Backup Policies" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.038757" level="INFO">${policies} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<var>${policies}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get backup policy configuration for VMs via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.038576" elapsed="0.000203"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.038959" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.039016" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${policies}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.038872" elapsed="0.000163"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.039245" level="INFO">📊 Collected backup policies for 4 VMs</msg>
<arg>📊 Collected backup policies for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.039122" elapsed="0.000225"/>
</kw>
<return>
<value>${policies}</value>
<status status="PASS" start="2025-10-07T22:29:47.039394" elapsed="0.000030"/>
</return>
<msg time="2025-10-07T22:29:47.039523" level="INFO">${policy_data} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<var>${policy_data}</var>
<doc>Collect VM backup policy configuration via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.038117" elapsed="0.001424"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.039887" level="INFO">${POLICY_DATA} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<arg>${POLICY_DATA}</arg>
<arg>${policy_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:47.039713" elapsed="0.000210"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.040172" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.040232" level="INFO">${vm_count} = 4</msg>
<var>${vm_count}</var>
<arg>${policy_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.040079" elapsed="0.000172"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${vm_count} &gt; 0</arg>
<arg>msg=No backup policies found for target VMs</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.040398" elapsed="0.000209"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.040910" level="INFO">📊 Backup policies collected for 4 VMs</msg>
<arg>📊 Backup policies collected for ${vm_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.040768" elapsed="0.000246"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.042599" level="INFO">📊 VM: production-db-01 - Policy: Critical-DB-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.041506" elapsed="0.001213"/>
</kw>
<var name="${policy}">{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-07T22:29:47.041421" elapsed="0.001341"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.043997" level="INFO">📊 VM: production-web-01 - Policy: High-Priority-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.042939" elapsed="0.001183"/>
</kw>
<var name="${policy}">{'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'policy_id': 'policy-002', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-07T22:29:47.042859" elapsed="0.001312"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.045530" level="INFO">📊 VM: production-app-01 - Policy: High-Priority-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.044363" elapsed="0.001292"/>
</kw>
<var name="${policy}">{'vm_name': 'production-app-01', 'policy_name': 'High-Priority-Policy', 'policy_id': 'policy-002', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-07T22:29:47.044273" elapsed="0.001421"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.046759" level="INFO">📊 VM: file-server-01 - Policy: Standard-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.045840" elapsed="0.001019"/>
</kw>
<var name="${policy}">{'vm_name': 'file-server-01', 'policy_name': 'Standard-Policy', 'policy_id': 'policy-003', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-07T22:29:47.045771" elapsed="0.001122"/>
</iter>
<var>${policy}</var>
<value>@{policy_data}</value>
<status status="PASS" start="2025-10-07T22:29:47.041150" elapsed="0.005767"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.047231" level="INFO">✅ Backup policy configuration collection complete</msg>
<arg>✅ Backup policy configuration collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.047143" elapsed="0.000176"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.048332" level="INFO">✅ Completed: Critical - Collect VM Backup Policy Configuration - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.048162" elapsed="0.000308"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.047957" elapsed="0.000549"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.048609" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.048530" elapsed="0.000119"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.047934" elapsed="0.000731"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.047660" elapsed="0.001044"/>
</kw>
<doc>📊 Retrieve VM backup policy details via vCenter REST API</doc>
<tag>api_collection</tag>
<tag>backup_policy</tag>
<tag>critical</tag>
<status status="PASS" start="2025-10-07T22:29:47.036080" elapsed="0.012731"/>
</test>
<test id="s1-s1-t3" name="Critical - Collect Backup Schedule Settings" line="56">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.049848" level="INFO">🏁 Starting: Critical - Collect Backup Schedule Settings</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.049736" elapsed="0.000233"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.049512" elapsed="0.000511"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.050256" level="INFO">🔍 Collecting backup schedule settings...</msg>
<arg>🔍 Collecting backup schedule settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.050169" elapsed="0.000174"/>
</kw>
<kw name="Collect Backup Schedule Settings" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.050772" level="INFO">📊 Collecting backup schedule settings via API...</msg>
<arg>📊 Collecting backup schedule settings via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.050692" elapsed="0.000169"/>
</kw>
<kw name="Vcenter Api Get Backup Schedules" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.051156" level="INFO">${schedules} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-08 02:29:47'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<var>${schedules}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get backup schedule settings for VMs via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.050951" elapsed="0.000226"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.051335" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.051384" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${schedules}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.051261" elapsed="0.000138"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.051567" level="INFO">📊 Collected backup schedules for 4 VMs</msg>
<arg>📊 Collected backup schedules for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.051467" elapsed="0.000195"/>
</kw>
<return>
<value>${schedules}</value>
<status status="PASS" start="2025-10-07T22:29:47.051704" elapsed="0.000034"/>
</return>
<msg time="2025-10-07T22:29:47.051835" level="INFO">${schedule_data} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-08 02:29:47'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<var>${schedule_data}</var>
<doc>Collect backup schedule settings via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.050537" elapsed="0.001316"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.052151" level="INFO">${SCHEDULE_DATA} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-08 02:29:47'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<arg>${SCHEDULE_DATA}</arg>
<arg>${schedule_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:47.052000" elapsed="0.000233"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.052456" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.052509" level="INFO">${schedule_count} = 4</msg>
<var>${schedule_count}</var>
<arg>${schedule_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.052378" elapsed="0.000147"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${schedule_count} &gt; 0</arg>
<arg>msg=No backup schedules found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.052646" elapsed="0.000169"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.053050" level="INFO">📊 Backup schedules collected for 4 VMs</msg>
<arg>📊 Backup schedules collected for ${schedule_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.052941" elapsed="0.000191"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.054986" level="INFO">📊 VM: production-db-01 - Frequency: Every 4 hours, RPO: 4h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.053427" elapsed="0.001685"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-08 02:29:47'}</var>
<status status="PASS" start="2025-10-07T22:29:47.053364" elapsed="0.001795"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.056560" level="INFO">📊 VM: production-web-01 - Frequency: Every 12 hours, RPO: 12h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.055339" elapsed="0.001351"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'next_run': '2025-10-08 10:29:47'}</var>
<status status="PASS" start="2025-10-07T22:29:47.055249" elapsed="0.001488"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.058188" level="INFO">📊 VM: production-app-01 - Frequency: Every 12 hours, RPO: 12h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.056921" elapsed="0.001368"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-app-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'next_run': '2025-10-08 10:29:47'}</var>
<status status="PASS" start="2025-10-07T22:29:47.056833" elapsed="0.001493"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.059875" level="INFO">📊 VM: file-server-01 - Frequency: Daily, RPO: 24h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.058463" elapsed="0.001653"/>
</kw>
<var name="${schedule}">{'vm_name': 'file-server-01', 'frequency': 'Daily', 'rpo_hours': 24, 'next_run': '2025-10-08 22:29:47'}</var>
<status status="PASS" start="2025-10-07T22:29:47.058396" elapsed="0.001774"/>
</iter>
<var>${schedule}</var>
<value>@{schedule_data}</value>
<status status="PASS" start="2025-10-07T22:29:47.053245" elapsed="0.006957"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.060536" level="INFO">✅ Backup schedule settings collection complete</msg>
<arg>✅ Backup schedule settings collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.060413" elapsed="0.000249"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.061941" level="INFO">✅ Completed: Critical - Collect Backup Schedule Settings - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.061718" elapsed="0.000397"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.061514" elapsed="0.000666"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.062354" elapsed="0.000025"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.062219" elapsed="0.000205"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.061489" elapsed="0.000965"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.061190" elapsed="0.001333"/>
</kw>
<doc>📅 Retrieve backup schedule settings and RPO configuration via API</doc>
<tag>api_collection</tag>
<tag>backup_schedule</tag>
<tag>critical</tag>
<tag>rpo</tag>
<status status="PASS" start="2025-10-07T22:29:47.049117" elapsed="0.013555"/>
</test>
<test id="s1-s1-t4" name="Critical - Collect Recent Backup Job Status" line="76">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.064087" level="INFO">🏁 Starting: Critical - Collect Recent Backup Job Status</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.063907" elapsed="0.000319"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.063619" elapsed="0.000673"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.064587" level="INFO">🔍 Collecting recent backup job status...</msg>
<arg>🔍 Collecting recent backup job status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.064473" elapsed="0.000214"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.064951" level="INFO">📋 Looking back 7 days</msg>
<arg>📋 Looking back ${BACKUP_LOOKBACK_DAYS} days</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.064830" elapsed="0.000229"/>
</kw>
<kw name="Collect Recent Backup Job Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.065907" level="INFO">📊 Collecting recent backup job status via API...</msg>
<arg>📊 Collecting recent backup job status via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.065771" elapsed="0.000278"/>
</kw>
<kw name="Vcenter Api Get Recent Backup Jobs" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.066823" level="INFO">${jobs} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_mess...</msg>
<var>${jobs}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<arg>${BACKUP_LOOKBACK_DAYS}</arg>
<doc>Get recent backup job status for VMs via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.066245" elapsed="0.000756"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.067285" level="INFO">Length is 12.</msg>
<msg time="2025-10-07T22:29:47.067367" level="INFO">${count} = 12</msg>
<var>${count}</var>
<arg>${jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.067153" elapsed="0.000239"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.067682" level="INFO">📊 Collected 12 recent backup jobs</msg>
<arg>📊 Collected ${count} recent backup jobs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.067509" elapsed="0.000352"/>
</kw>
<return>
<value>${jobs}</value>
<status status="PASS" start="2025-10-07T22:29:47.067926" elapsed="0.000045"/>
</return>
<msg time="2025-10-07T22:29:47.068144" level="INFO">${job_status} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_mess...</msg>
<var>${job_status}</var>
<doc>Collect recent backup job status via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.065323" elapsed="0.002847"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.068596" level="INFO">${JOB_STATUS} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_mess...</msg>
<arg>${JOB_STATUS}</arg>
<arg>${job_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:47.068372" elapsed="0.000258"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.068851" level="INFO">Length is 12.</msg>
<msg time="2025-10-07T22:29:47.068899" level="INFO">${job_count} = 12</msg>
<var>${job_count}</var>
<arg>${job_status}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.068771" elapsed="0.000144"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${job_count} &gt; 0</arg>
<arg>msg=No recent backup jobs found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.069097" elapsed="0.000221"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.069653" level="INFO">📊 Recent backup jobs collected: 12 jobs</msg>
<arg>📊 Recent backup jobs collected: ${job_count} jobs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.069485" elapsed="0.000295"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.071575" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-07 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.070106" elapsed="0.001581"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_messa...</var>
<status status="PASS" start="2025-10-07T22:29:47.070027" elapsed="0.001700"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.073265" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-05 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.071879" elapsed="0.001491"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-1', 'status': 'Success', 'start_time': '2025-10-05 21:59:47', 'end_time': '2025-10-05 22:29:47', 'data_transferred_gb': 60, 'error_messa...</var>
<status status="PASS" start="2025-10-07T22:29:47.071808" elapsed="0.001599"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.074729" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-03 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.073543" elapsed="0.001288"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-2', 'status': 'Success', 'start_time': '2025-10-03 21:59:47', 'end_time': '2025-10-03 22:29:47', 'data_transferred_gb': 70, 'error_messa...</var>
<status status="PASS" start="2025-10-07T22:29:47.073477" elapsed="0.001386"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.076226" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-07 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.074990" elapsed="0.001363"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_mes...</var>
<status status="PASS" start="2025-10-07T22:29:47.074930" elapsed="0.001474"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.078122" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-05 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.076594" elapsed="0.001764"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-1', 'status': 'Success', 'start_time': '2025-10-05 21:59:47', 'end_time': '2025-10-05 22:29:47', 'data_transferred_gb': 60, 'error_mes...</var>
<status status="PASS" start="2025-10-07T22:29:47.076504" elapsed="0.001932"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.080493" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-03 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.078705" elapsed="0.002002"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-2', 'status': 'Success', 'start_time': '2025-10-03 21:59:47', 'end_time': '2025-10-03 22:29:47', 'data_transferred_gb': 70, 'error_mes...</var>
<status status="PASS" start="2025-10-07T22:29:47.078567" elapsed="0.002199"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.082506" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-07 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.080999" elapsed="0.001667"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_mes...</var>
<status status="PASS" start="2025-10-07T22:29:47.080879" elapsed="0.001851"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.085064" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-05 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.083024" elapsed="0.002218"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-1', 'status': 'Success', 'start_time': '2025-10-05 21:59:47', 'end_time': '2025-10-05 22:29:47', 'data_transferred_gb': 60, 'error_mes...</var>
<status status="PASS" start="2025-10-07T22:29:47.082912" elapsed="0.002380"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.087041" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-03 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.085480" elapsed="0.001696"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-2', 'status': 'Success', 'start_time': '2025-10-03 21:59:47', 'end_time': '2025-10-03 22:29:47', 'data_transferred_gb': 70, 'error_mes...</var>
<status status="PASS" start="2025-10-07T22:29:47.085388" elapsed="0.001848"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.089284" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-07 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.087461" elapsed="0.001974"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_message':...</var>
<status status="PASS" start="2025-10-07T22:29:47.087354" elapsed="0.002135"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.091400" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-05 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.089693" elapsed="0.001830"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-1', 'status': 'Success', 'start_time': '2025-10-05 21:59:47', 'end_time': '2025-10-05 22:29:47', 'data_transferred_gb': 60, 'error_message':...</var>
<status status="PASS" start="2025-10-07T22:29:47.089588" elapsed="0.001969"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.092897" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-03 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.091693" elapsed="0.001311"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-2', 'status': 'Success', 'start_time': '2025-10-03 21:59:47', 'end_time': '2025-10-03 22:29:47', 'data_transferred_gb': 70, 'error_message':...</var>
<status status="PASS" start="2025-10-07T22:29:47.091627" elapsed="0.001410"/>
</iter>
<var>${job}</var>
<value>@{job_status}</value>
<status status="PASS" start="2025-10-07T22:29:47.069893" elapsed="0.023167"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.093452" level="INFO">✅ Recent backup job status collection complete</msg>
<arg>✅ Recent backup job status collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.093330" elapsed="0.000253"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.094670" level="INFO">✅ Completed: Critical - Collect Recent Backup Job Status - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.094509" elapsed="0.000293"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.094321" elapsed="0.000532"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.094994" elapsed="0.000020"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.094886" elapsed="0.000167"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.094296" elapsed="0.000779"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.093951" elapsed="0.001175"/>
</kw>
<doc>✅ Retrieve recent backup job execution status via API</doc>
<tag>api_collection</tag>
<tag>backup_jobs</tag>
<tag>critical</tag>
<tag>job_status</tag>
<status status="PASS" start="2025-10-07T22:29:47.063078" elapsed="0.032161"/>
</test>
<test id="s1-s1-t5" name="Critical - Collect Retention Policy Settings" line="97">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.097026" level="INFO">🏁 Starting: Critical - Collect Retention Policy Settings</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.096889" elapsed="0.000268"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.096562" elapsed="0.000651"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.097481" level="INFO">🔍 Collecting retention policy settings...</msg>
<arg>🔍 Collecting retention policy settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.097382" elapsed="0.000212"/>
</kw>
<kw name="Collect Retention Policy Settings" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.098055" level="INFO">📊 Collecting retention policy settings via API...</msg>
<arg>📊 Collecting retention policy settings via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.097975" elapsed="0.000206"/>
</kw>
<kw name="Vcenter Api Get Retention Policies" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.098429" level="INFO">${retention} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<var>${retention}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get retention policy settings for VMs via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.098275" elapsed="0.000174"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.098599" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.098666" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${retention}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.098528" elapsed="0.000160"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.099070" level="INFO">📊 Collected retention policies for 4 VMs</msg>
<arg>📊 Collected retention policies for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.098929" elapsed="0.000242"/>
</kw>
<return>
<value>${retention}</value>
<status status="PASS" start="2025-10-07T22:29:47.099223" elapsed="0.000034"/>
</return>
<msg time="2025-10-07T22:29:47.099384" level="INFO">${retention_data} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<var>${retention_data}</var>
<doc>Collect retention policy settings via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.097816" elapsed="0.001592"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.099753" level="INFO">${RETENTION_DATA} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<arg>${RETENTION_DATA}</arg>
<arg>${retention_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:47.099577" elapsed="0.000213"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.100040" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.100101" level="INFO">${retention_count} = 4</msg>
<var>${retention_count}</var>
<arg>${retention_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.099947" elapsed="0.000173"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${retention_count} &gt; 0</arg>
<arg>msg=No retention policies found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.100247" elapsed="0.000158"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.100683" level="INFO">📊 Retention policies collected for 4 VMs</msg>
<arg>📊 Retention policies collected for ${retention_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.100551" elapsed="0.000226"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.102270" level="INFO">📊 VM: production-db-01 - Daily: 14d, Weekly: 8w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.101107" elapsed="0.001263"/>
</kw>
<var name="${retention}">{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-07T22:29:47.101029" elapsed="0.001378"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.103738" level="INFO">📊 VM: production-web-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.102540" elapsed="0.001295"/>
</kw>
<var name="${retention}">{'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-07T22:29:47.102480" elapsed="0.001387"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.104974" level="INFO">📊 VM: production-app-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.103990" elapsed="0.001096"/>
</kw>
<var name="${retention}">{'vm_name': 'production-app-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-07T22:29:47.103932" elapsed="0.001203"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.106623" level="INFO">📊 VM: file-server-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.105308" elapsed="0.001423"/>
</kw>
<var name="${retention}">{'vm_name': 'file-server-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-07T22:29:47.105226" elapsed="0.001542"/>
</iter>
<var>${retention}</var>
<value>@{retention_data}</value>
<status status="PASS" start="2025-10-07T22:29:47.100892" elapsed="0.005903"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.107032" level="INFO">✅ Retention policy settings collection complete</msg>
<arg>✅ Retention policy settings collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.106944" elapsed="0.000184"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.108028" level="INFO">✅ Completed: Critical - Collect Retention Policy Settings - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.107906" elapsed="0.000229"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.107710" elapsed="0.000459"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.108264" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.108190" elapsed="0.000114"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.107695" elapsed="0.000624"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.107501" elapsed="0.000853"/>
</kw>
<doc>🗄️ Retrieve backup retention policy settings via API</doc>
<tag>api_collection</tag>
<tag>compliance</tag>
<tag>critical</tag>
<tag>retention</tag>
<status status="PASS" start="2025-10-07T22:29:47.095727" elapsed="0.012730"/>
</test>
<test id="s1-s1-t6" name="Critical - Collect Latest Backup Timestamps" line="117">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.109433" level="INFO">🏁 Starting: Critical - Collect Latest Backup Timestamps</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.109332" elapsed="0.000208"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.109130" elapsed="0.000463"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.109867" level="INFO">🔍 Collecting latest backup timestamps...</msg>
<arg>🔍 Collecting latest backup timestamps...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.109784" elapsed="0.000198"/>
</kw>
<kw name="Collect Latest Backup Timestamps" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.110610" level="INFO">📊 Collecting latest backup timestamps via API...</msg>
<arg>📊 Collecting latest backup timestamps via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.110490" elapsed="0.000251"/>
</kw>
<kw name="Vcenter Api Get Latest Backup Timestamps" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.111171" level="INFO">${timestamps} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-07 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<var>${timestamps}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get latest successful backup timestamps for VMs via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.110886" elapsed="0.000310"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.111396" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.111462" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${timestamps}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.111293" elapsed="0.000191"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.111727" level="INFO">📊 Collected latest backup timestamps for 4 VMs</msg>
<arg>📊 Collected latest backup timestamps for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.111585" elapsed="0.000263"/>
</kw>
<return>
<value>${timestamps}</value>
<status status="PASS" start="2025-10-07T22:29:47.111915" elapsed="0.000047"/>
</return>
<msg time="2025-10-07T22:29:47.112151" level="INFO">${timestamp_data} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-07 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<var>${timestamp_data}</var>
<doc>Collect latest successful backup timestamps via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.110268" elapsed="0.001918"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.112571" level="INFO">${TIMESTAMP_DATA} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-07 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<arg>${TIMESTAMP_DATA}</arg>
<arg>${timestamp_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:47.112386" elapsed="0.000221"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.112877" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.112931" level="INFO">${timestamp_count} = 4</msg>
<var>${timestamp_count}</var>
<arg>${timestamp_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.112788" elapsed="0.000160"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${timestamp_count} &gt; 0</arg>
<arg>msg=No backup timestamps found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.113092" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.113563" level="INFO">📊 Latest backup timestamps collected for 4 VMs</msg>
<arg>📊 Latest backup timestamps collected for ${timestamp_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.113442" elapsed="0.000249"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.115393" level="INFO">📊 VM: production-db-01 - Last Backup: 2025-10-07 19:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.114281" elapsed="0.001237"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-07 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-07T22:29:47.114143" elapsed="0.001414"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.116629" level="INFO">📊 VM: production-web-01 - Last Backup: 2025-10-07 14:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.115704" elapsed="0.001063"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-web-01', 'last_backup_time': '2025-10-07 14:29:47', 'backup_id': 'backup-production-web-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-07T22:29:47.115639" elapsed="0.001173"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.117946" level="INFO">📊 VM: production-app-01 - Last Backup: 2025-10-07 12:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.116981" elapsed="0.001086"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-app-01', 'last_backup_time': '2025-10-07 12:29:47', 'backup_id': 'backup-production-app-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-07T22:29:47.116904" elapsed="0.001219"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.119425" level="INFO">📊 VM: file-server-01 - Last Backup: 2025-10-07 07:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.118325" elapsed="0.001200"/>
</kw>
<var name="${timestamp}">{'vm_name': 'file-server-01', 'last_backup_time': '2025-10-07 07:29:47', 'backup_id': 'backup-file-server-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-07T22:29:47.118230" elapsed="0.001333"/>
</iter>
<var>${timestamp}</var>
<value>@{timestamp_data}</value>
<status status="PASS" start="2025-10-07T22:29:47.113902" elapsed="0.005688"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.119856" level="INFO">✅ Latest backup timestamps collection complete</msg>
<arg>✅ Latest backup timestamps collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.119748" elapsed="0.000203"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.120895" level="INFO">✅ Completed: Critical - Collect Latest Backup Timestamps - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.120774" elapsed="0.000226"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.120622" elapsed="0.000471"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.121188" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.121116" elapsed="0.000112"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.120603" elapsed="0.000639"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.120345" elapsed="0.000932"/>
</kw>
<doc>⏱️ Retrieve latest successful backup timestamps via API</doc>
<tag>backup_timestamp</tag>
<tag>critical</tag>
<tag>recency</tag>
<status status="PASS" start="2025-10-07T22:29:47.108730" elapsed="0.012636"/>
</test>
<test id="s1-s1-t7" name="Critical - Collect Offsite Replication Status" line="137">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.122682" level="INFO">🏁 Starting: Critical - Collect Offsite Replication Status</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.122481" elapsed="0.000335"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.122113" elapsed="0.000757"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.123119" level="INFO">🔍 Collecting offsite replication status...</msg>
<arg>🔍 Collecting offsite replication status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.123024" elapsed="0.000192"/>
</kw>
<kw name="Collect Offsite Replication Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.123653" level="INFO">📊 Collecting offsite replication status via API...</msg>
<arg>📊 Collecting offsite replication status via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.123572" elapsed="0.000186"/>
</kw>
<kw name="Vcenter Api Get Offsite Replication Status" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.124177" level="INFO">${replication} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 16:29:47', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<var>${replication}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get offsite replication status for VMs via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.123901" elapsed="0.000308"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.124445" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.124525" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${replication}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.124333" elapsed="0.000217"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.124811" level="INFO">📊 Collected offsite replication status for 4 VMs</msg>
<arg>📊 Collected offsite replication status for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.124661" elapsed="0.000258"/>
</kw>
<return>
<value>${replication}</value>
<status status="PASS" start="2025-10-07T22:29:47.124975" elapsed="0.000035"/>
</return>
<msg time="2025-10-07T22:29:47.125132" level="INFO">${replication_data} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 16:29:47', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<var>${replication_data}</var>
<doc>Collect offsite replication status via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.123411" elapsed="0.001744"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.125505" level="INFO">${REPLICATION_DATA} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 16:29:47', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<arg>${REPLICATION_DATA}</arg>
<arg>${replication_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:47.125328" elapsed="0.000213"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.125789" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.125850" level="INFO">${replication_count} = 4</msg>
<var>${replication_count}</var>
<arg>${replication_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.125695" elapsed="0.000175"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${replication_count} &gt; 0</arg>
<arg>msg=No offsite replication data found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.126025" elapsed="0.000172"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.126435" level="INFO">📊 Offsite replication data collected for 4 VMs</msg>
<arg>📊 Offsite replication data collected for ${replication_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.126325" elapsed="0.000196"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.128884" level="INFO">📊 VM: production-db-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.127135" elapsed="0.001953"/>
</kw>
<var name="${replication}">{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 16:29:47', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-07T22:29:47.127023" elapsed="0.002116"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.130524" level="INFO">📊 VM: production-web-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.129339" elapsed="0.001331"/>
</kw>
<var name="${replication}">{'vm_name': 'production-web-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 16:29:47', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-07T22:29:47.129236" elapsed="0.001490"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.132288" level="INFO">📊 VM: production-app-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.130925" elapsed="0.001490"/>
</kw>
<var name="${replication}">{'vm_name': 'production-app-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 16:29:47', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-07T22:29:47.130824" elapsed="0.001635"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.134165" level="INFO">📊 VM: file-server-01 - Enabled: False, Target: None</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.132702" elapsed="0.001563"/>
</kw>
<var name="${replication}">{'vm_name': 'file-server-01', 'offsite_enabled': False, 'offsite_target': None, 'last_replication': None, 'replication_status': 'Disabled'}</var>
<status status="PASS" start="2025-10-07T22:29:47.132619" elapsed="0.001678"/>
</iter>
<var>${replication}</var>
<value>@{replication_data}</value>
<status status="PASS" start="2025-10-07T22:29:47.126786" elapsed="0.007535"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.134670" level="INFO">✅ Offsite replication status collection complete</msg>
<arg>✅ Offsite replication status collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.134528" elapsed="0.000273"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.135788" level="INFO">✅ Completed: Critical - Collect Offsite Replication Status - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.135647" elapsed="0.000280"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.135487" elapsed="0.000485"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.136088" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.135999" elapsed="0.000139"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.135467" elapsed="0.000688"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.135227" elapsed="0.000971"/>
</kw>
<doc>🌐 Retrieve offsite replication configuration and status via API</doc>
<tag>api_collection</tag>
<tag>critical</tag>
<tag>dr</tag>
<tag>offsite_replication</tag>
<status status="PASS" start="2025-10-07T22:29:47.121645" elapsed="0.014662"/>
</test>
<test id="s1-s1-t8" name="Critical - Validate Backup Policy Applied" line="157">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.137419" level="INFO">🏁 Starting: Critical - Validate Backup Policy Applied</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.137290" elapsed="0.000239"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.137053" elapsed="0.000524"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.137904" level="INFO">🔍 Validating backup policy application...</msg>
<arg>🔍 Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.137777" elapsed="0.000245"/>
</kw>
<kw name="Validate Backup Policy Applied" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.138478" level="INFO">✅ Validating backup policy application...</msg>
<arg>✅ Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.138388" elapsed="0.000184"/>
</kw>
<kw name="Backup Validator Validate Policies" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.138795" level="INFO">${results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${results}</var>
<arg>${policy_data}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Validate all VMs have backup policies applied</doc>
<status status="PASS" start="2025-10-07T22:29:47.138660" elapsed="0.000153"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.138991" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.138888" elapsed="0.000125"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.139161" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.139207" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.139092" elapsed="0.000129"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.139389" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.139291" elapsed="0.000191"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T22:29:47.139524" elapsed="0.000031"/>
</return>
<msg time="2025-10-07T22:29:47.139644" level="INFO">${policy_results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${policy_results}</var>
<arg>${POLICY_DATA}</arg>
<doc>Validate all VMs have appropriate backup policies applied</doc>
<status status="PASS" start="2025-10-07T22:29:47.138211" elapsed="0.001449"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.140349" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${policy_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.139812" elapsed="0.000555"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.140607" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.140661" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.140523" elapsed="0.000164"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.140961" level="INFO">📊 Policy validation results: 0 violations found</msg>
<arg>📊 Policy validation results: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.140835" elapsed="0.000227"/>
</kw>
<if>
<branch type="IF" condition="${violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.141443" elapsed="0.000015"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T22:29:47.141375" elapsed="0.000116"/>
</iter>
<var>${violation}</var>
<value>@{violations}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.141327" elapsed="0.000186"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Backup policy validation failed: ${violation_count} VMs without proper policies</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.141588" elapsed="0.000070"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.141209" elapsed="0.000478"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.141190" elapsed="0.000517"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.141934" level="INFO">✅ Backup policy validation: All VMs have appropriate policies applied</msg>
<arg>✅ Backup policy validation: All VMs have appropriate policies applied</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.141842" elapsed="0.000187"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.142728" level="INFO">✅ Completed: Critical - Validate Backup Policy Applied - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.142611" elapsed="0.000220"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.142490" elapsed="0.000386"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.142990" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.142899" elapsed="0.000141"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.142477" elapsed="0.000581"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.142287" elapsed="0.000813"/>
</kw>
<doc>✅ Validate all VMs have appropriate backup policies applied</doc>
<tag>critical</tag>
<tag>policy_compliance</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-07T22:29:47.136642" elapsed="0.006652"/>
</test>
<test id="s1-s1-t9" name="Critical - Validate Schedule Alignment with RPO" line="181">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.144740" level="INFO">🏁 Starting: Critical - Validate Schedule Alignment with RPO</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.144564" elapsed="0.000321"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.144281" elapsed="0.000668"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.145194" level="INFO">🔍 Validating backup schedule alignment with RPO requirements...</msg>
<arg>🔍 Validating backup schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.145106" elapsed="0.000216"/>
</kw>
<kw name="Validate Schedule Alignment With RPO" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.145820" level="INFO">✅ Validating schedule alignment with RPO requirements...</msg>
<arg>✅ Validating schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.145740" elapsed="0.000195"/>
</kw>
<kw name="Backup Validator Validate Rpo Alignment" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.146381" level="FAIL">TypeError: '&gt;' not supported between instances of 'int' and 'str'</msg>
<var>${results}</var>
<arg>${schedule_data}</arg>
<arg>${VM_CRITICALITY}</arg>
<arg>${RPO_REQUIREMENTS}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-07T22:29:47.146086" elapsed="0.001410">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.147632" elapsed="0.000018"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.147730" elapsed="0.000014"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${rpo_violation_count} RPO violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.147815" elapsed="0.000013"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.147867" elapsed="0.000014"/>
</return>
<var>${schedule_results}</var>
<arg>${SCHEDULE_DATA}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-07T22:29:47.145544" elapsed="0.002426">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${schedule_results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.148197" elapsed="0.000022"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.148432" elapsed="0.000026"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 RPO validation results: ${rpo_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.148645" elapsed="0.000025"/>
</kw>
<if>
<branch type="IF" condition="${rpo_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ RPO Violation: VM ${violation['vm_name']} - Current: ${violation['current_rpo']}h, Required: ${violation['required_rpo']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.149024" elapsed="0.000019"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T22:29:47.148941" elapsed="0.000140"/>
</iter>
<var>${violation}</var>
<value>@{rpo_violations}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.148880" elapsed="0.000228"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>RPO validation failed: ${rpo_violation_count} VMs exceed RPO requirements</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.149195" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.148821" elapsed="0.000422"/>
</branch>
<status status="NOT RUN" start="2025-10-07T22:29:47.148796" elapsed="0.000471"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Schedule validation: All backup schedules meet RPO requirements</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.149416" elapsed="0.000020"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.150178" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.150004" elapsed="0.000216"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.150435" level="INFO">❌ Completed: Critical - Validate Schedule Alignment with RPO - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.150295" elapsed="0.000268"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.150237" elapsed="0.000377"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.149993" elapsed="0.000650"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.149783" elapsed="0.000915"/>
</kw>
<doc>✅ Validate backup schedules meet RPO requirements for data criticality</doc>
<tag>critical</tag>
<tag>rpo_compliance</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:29:47.143773" elapsed="0.007109">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</test>
<test id="s1-s1-t10" name="Critical - Validate Retention Settings Compliance" line="205">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.152238" level="INFO">🏁 Starting: Critical - Validate Retention Settings Compliance</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.152098" elapsed="0.000258"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.151871" elapsed="0.000539"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.152637" level="INFO">🔍 Validating retention settings compliance...</msg>
<arg>🔍 Validating retention settings compliance...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.152551" elapsed="0.000178"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.152990" level="INFO">📋 Minimum daily retention: 7 days</msg>
<arg>📋 Minimum daily retention: ${MIN_DAILY_RETENTION} days</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.152879" elapsed="0.000233"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.153362" level="INFO">📋 Minimum weekly retention: 4 weeks</msg>
<arg>📋 Minimum weekly retention: ${MIN_WEEKLY_RETENTION} weeks</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.153249" elapsed="0.000209"/>
</kw>
<kw name="Validate Retention Settings Compliance" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.153961" level="INFO">✅ Validating retention settings compliance...</msg>
<arg>✅ Validating retention settings compliance...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.153872" elapsed="0.000180"/>
</kw>
<kw name="Backup Validator Validate Retention Compliance" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.154352" level="FAIL">TypeError: '&lt;' not supported between instances of 'int' and 'str'</msg>
<var>${results}</var>
<arg>${retention_data}</arg>
<arg>${MIN_DAILY_RETENTION}</arg>
<arg>${MIN_WEEKLY_RETENTION}</arg>
<arg>${MIN_MONTHLY_RETENTION}</arg>
<doc>Validate retention settings meet compliance standards</doc>
<status status="FAIL" start="2025-10-07T22:29:47.154148" elapsed="0.000663">TypeError: '&lt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.154921" elapsed="0.000014"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.155005" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.155077" elapsed="0.000011"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.155120" elapsed="0.000014"/>
</return>
<var>${retention_results}</var>
<arg>${RETENTION_DATA}</arg>
<doc>Validate retention settings meet compliance standards</doc>
<status status="FAIL" start="2025-10-07T22:29:47.153653" elapsed="0.001547">TypeError: '&lt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${retention_violations}</var>
<arg>${retention_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.155374" elapsed="0.000020"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${retention_violation_count}</var>
<arg>${retention_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.155547" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Retention validation results: ${retention_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.155703" elapsed="0.000018"/>
</kw>
<if>
<branch type="IF" condition="${retention_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Retention Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.156005" elapsed="0.000016"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T22:29:47.155937" elapsed="0.000115"/>
</iter>
<var>${violation}</var>
<value>@{retention_violations}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.155888" elapsed="0.000187"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Retention validation failed: ${retention_violation_count} VMs with insufficient retention</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.156148" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.155841" elapsed="0.000346"/>
</branch>
<status status="NOT RUN" start="2025-10-07T22:29:47.155821" elapsed="0.000385"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Retention validation: All settings meet compliance standards</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.156409" elapsed="0.000018"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.157063" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.156931" elapsed="0.000274"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.157420" level="INFO">❌ Completed: Critical - Validate Retention Settings Compliance - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.157296" elapsed="0.000239"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.157229" elapsed="0.000343"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.156919" elapsed="0.000674"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.156720" elapsed="0.000915"/>
</kw>
<doc>✅ Validate retention settings meet compliance standards</doc>
<tag>critical</tag>
<tag>retention_compliance</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:29:47.151414" elapsed="0.006318">TypeError: '&lt;' not supported between instances of 'int' and 'str'</status>
</test>
<test id="s1-s1-t11" name="Critical - Validate Recent Job Completion Status" line="231">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.158792" level="INFO">🏁 Starting: Critical - Validate Recent Job Completion Status</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.158680" elapsed="0.000212"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.158505" elapsed="0.000443"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.159169" level="INFO">🔍 Validating recent backup job completion status...</msg>
<arg>🔍 Validating recent backup job completion status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.159084" elapsed="0.000176"/>
</kw>
<kw name="Validate Recent Job Completion Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.159696" level="INFO">✅ Validating recent backup job completion status...</msg>
<arg>✅ Validating recent backup job completion status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.159622" elapsed="0.000164"/>
</kw>
<kw name="Backup Validator Validate Job Status" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.164796" level="INFO">${results} = {'failed_jobs': [], 'total_jobs': 12, 'successful_jobs': 12}</msg>
<var>${results}</var>
<arg>${job_status}</arg>
<doc>Validate recent backup jobs completed successfully</doc>
<status status="PASS" start="2025-10-07T22:29:47.159897" elapsed="0.004936"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.165126" level="INFO">${failed_jobs} = []</msg>
<var>${failed_jobs}</var>
<arg>${results}</arg>
<arg>failed_jobs</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.164978" elapsed="0.000166"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.165297" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.165343" level="INFO">${failed_count} = 0</msg>
<var>${failed_count}</var>
<arg>${failed_jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.165221" elapsed="0.000137"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.165551" level="INFO">📊 Validation complete: 0 failed jobs found</msg>
<arg>📊 Validation complete: ${failed_count} failed jobs found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.165432" elapsed="0.000266"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T22:29:47.165744" elapsed="0.000030"/>
</return>
<msg time="2025-10-07T22:29:47.165880" level="INFO">${job_results} = {'failed_jobs': [], 'total_jobs': 12, 'successful_jobs': 12}</msg>
<var>${job_results}</var>
<arg>${JOB_STATUS}</arg>
<doc>Validate recent backup jobs completed successfully</doc>
<status status="PASS" start="2025-10-07T22:29:47.159443" elapsed="0.006455"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.166154" level="INFO">${failed_jobs} = []</msg>
<var>${failed_jobs}</var>
<arg>${job_results}</arg>
<arg>failed_jobs</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.166039" elapsed="0.000132"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.166477" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.166551" level="INFO">${failed_count} = 0</msg>
<var>${failed_count}</var>
<arg>${failed_jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.166363" elapsed="0.000212"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.166905" level="INFO">📊 Job validation results: 0 failed jobs found</msg>
<arg>📊 Job validation results: ${failed_count} failed jobs found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.166748" elapsed="0.000715"/>
</kw>
<if>
<branch type="IF" condition="${failed_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Failed Job: VM ${failed['vm_name']} - Status: ${failed['status']}, Error: ${failed['error_message']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.167816" elapsed="0.000017"/>
</kw>
<var name="${failed}"/>
<status status="NOT RUN" start="2025-10-07T22:29:47.167757" elapsed="0.000110"/>
</iter>
<var>${failed}</var>
<value>@{failed_jobs}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.167705" elapsed="0.000188"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Job validation failed: ${failed_count} backup jobs failed</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.167973" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.167584" elapsed="0.000430"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.167558" elapsed="0.000478"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.168270" level="INFO">✅ Job validation: All recent backup jobs completed successfully</msg>
<arg>✅ Job validation: All recent backup jobs completed successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.168175" elapsed="0.000197"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.169333" level="INFO">✅ Completed: Critical - Validate Recent Job Completion Status - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.169202" elapsed="0.000248"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.169066" elapsed="0.000429"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.169610" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.169521" elapsed="0.000209"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.169051" elapsed="0.000701"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.168793" elapsed="0.001005"/>
</kw>
<doc>✅ Validate recent backup jobs completed successfully</doc>
<tag>critical</tag>
<tag>job_success</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-07T22:29:47.158167" elapsed="0.011794"/>
</test>
<test id="s1-s1-t12" name="Critical - Validate Backup Recency" line="255">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.171174" level="INFO">🏁 Starting: Critical - Validate Backup Recency</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.171051" elapsed="0.000232"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.170817" elapsed="0.000517"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.171575" level="INFO">🔍 Validating backup recency...</msg>
<arg>🔍 Validating backup recency...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.171477" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.171997" level="INFO">📋 Maximum backup age: 26 hours</msg>
<arg>📋 Maximum backup age: ${MAX_BACKUP_AGE_HOURS} hours</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.171849" elapsed="0.000275"/>
</kw>
<kw name="Validate Backup Recency" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.172679" level="INFO">✅ Validating backup recency...</msg>
<arg>✅ Validating backup recency...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.172584" elapsed="0.000207"/>
</kw>
<kw name="Backup Validator Validate Backup Recency" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.173112" level="FAIL">TypeError: '&gt;' not supported between instances of 'float' and 'str'</msg>
<var>${results}</var>
<arg>${timestamp_data}</arg>
<arg>${MAX_BACKUP_AGE_HOURS}</arg>
<doc>Validate backups are recent and within acceptable time windows</doc>
<status status="FAIL" start="2025-10-07T22:29:47.172895" elapsed="0.000633">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${stale_backups}</var>
<arg>${results}</arg>
<arg>stale_backups</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.173646" elapsed="0.000017"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${stale_count}</var>
<arg>${stale_backups}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.173750" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${stale_count} stale backups found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.173835" elapsed="0.000012"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.173881" elapsed="0.000014"/>
</return>
<var>${recency_results}</var>
<arg>${TIMESTAMP_DATA}</arg>
<doc>Validate backups are recent and within acceptable time windows</doc>
<status status="FAIL" start="2025-10-07T22:29:47.172350" elapsed="0.001612">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${stale_backups}</var>
<arg>${recency_results}</arg>
<arg>stale_backups</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.174125" elapsed="0.000017"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${stale_count}</var>
<arg>${stale_backups}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.174285" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Recency validation results: ${stale_count} stale backups found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.174417" elapsed="0.000015"/>
</kw>
<if>
<branch type="IF" condition="${stale_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Stale Backup: VM ${stale['vm_name']} - Last backup: ${stale['last_backup_time']}, Age: ${stale['age_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.174690" elapsed="0.000012"/>
</kw>
<var name="${stale}"/>
<status status="NOT RUN" start="2025-10-07T22:29:47.174633" elapsed="0.000097"/>
</iter>
<var>${stale}</var>
<value>@{stale_backups}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.174592" elapsed="0.000158"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Recency validation failed: ${stale_count} VMs have stale backups</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.174811" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.174551" elapsed="0.000291"/>
</branch>
<status status="NOT RUN" start="2025-10-07T22:29:47.174534" elapsed="0.000324"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Recency validation: All backups are current and within acceptable time windows</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.174973" elapsed="0.000014"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.175628" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.175501" elapsed="0.000165"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.175883" level="INFO">❌ Completed: Critical - Validate Backup Recency - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.175756" elapsed="0.000251"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.175683" elapsed="0.000374"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.175489" elapsed="0.000586"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.175301" elapsed="0.000836"/>
</kw>
<doc>✅ Validate backups are recent and within acceptable time windows</doc>
<tag>backup_recency</tag>
<tag>critical</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:29:47.170327" elapsed="0.005897">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</test>
<test id="s1-s1-t13" name="Critical - Validate Offsite Replication Configuration" line="280">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.177742" level="INFO">🏁 Starting: Critical - Validate Offsite Replication Configuration</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.177569" elapsed="0.000424"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.177196" elapsed="0.000885"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.178481" level="INFO">🔍 Validating offsite replication configuration...</msg>
<arg>🔍 Validating offsite replication configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.178328" elapsed="0.000282"/>
</kw>
<kw name="Validate Offsite Replication Configuration" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.179548" level="INFO">✅ Validating offsite replication configuration...</msg>
<arg>✅ Validating offsite replication configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.179379" elapsed="0.000319"/>
</kw>
<kw name="Backup Validator Validate Offsite Replication" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.180068" level="INFO">${results} = {'violations': [], 'total_required_vms': 3, 'compliant_vms': 3}</msg>
<var>${results}</var>
<arg>${replication_data}</arg>
<arg>${OFFSITE_REQUIRED_VMS}</arg>
<doc>Validate offsite replication is enabled for critical VMs</doc>
<status status="PASS" start="2025-10-07T22:29:47.179815" elapsed="0.000283"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.180339" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.180203" elapsed="0.000166"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.180547" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.180604" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.180461" elapsed="0.000162"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.180836" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.180708" elapsed="0.000275"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T22:29:47.181035" elapsed="0.000035"/>
</return>
<msg time="2025-10-07T22:29:47.181191" level="INFO">${replication_results} = {'violations': [], 'total_required_vms': 3, 'compliant_vms': 3}</msg>
<var>${replication_results}</var>
<arg>${REPLICATION_DATA}</arg>
<doc>Validate offsite replication is enabled for critical VMs</doc>
<status status="PASS" start="2025-10-07T22:29:47.178879" elapsed="0.002331"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.181645" level="INFO">${offsite_violations} = []</msg>
<var>${offsite_violations}</var>
<arg>${replication_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.181442" elapsed="0.000233"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.181962" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.182020" level="INFO">${offsite_violation_count} = 0</msg>
<var>${offsite_violation_count}</var>
<arg>${offsite_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.181871" elapsed="0.000168"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.182320" level="INFO">📊 Offsite validation results: 0 violations found</msg>
<arg>📊 Offsite validation results: ${offsite_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.182187" elapsed="0.000238"/>
</kw>
<if>
<branch type="IF" condition="${offsite_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Offsite Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.182824" elapsed="0.000018"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T22:29:47.182753" elapsed="0.000123"/>
</iter>
<var>${violation}</var>
<value>@{offsite_violations}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.182702" elapsed="0.000198"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Offsite replication validation failed: ${offsite_violation_count} VMs missing offsite protection</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.182979" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.182573" elapsed="0.000446"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.182550" elapsed="0.000490"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.183285" level="INFO">✅ Offsite validation: Critical VMs have proper offsite replication configured</msg>
<arg>✅ Offsite validation: Critical VMs have proper offsite replication configured</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.183187" elapsed="0.000203"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.184193" level="INFO">✅ Completed: Critical - Validate Offsite Replication Configuration - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.184074" elapsed="0.000224"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.183950" elapsed="0.000396"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.184461" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.184372" elapsed="0.000150"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.183936" elapsed="0.000606"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.183691" elapsed="0.000894"/>
</kw>
<doc>✅ Validate offsite replication is enabled for critical VMs</doc>
<tag>critical</tag>
<tag>dr</tag>
<tag>offsite_compliance</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-07T22:29:47.176662" elapsed="0.008090"/>
</test>
<test id="s1-s1-t14" name="Normal - Comprehensive Backup Compliance Validation" line="304">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.186293" level="INFO">🏁 Starting: Normal - Comprehensive Backup Compliance Validation</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.186182" elapsed="0.000224"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.185977" elapsed="0.000544"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.186742" level="INFO">🔍 Performing comprehensive backup compliance validation...</msg>
<arg>🔍 Performing comprehensive backup compliance validation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.186655" elapsed="0.000180"/>
</kw>
<kw name="Validate Complete Backup Compliance" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.187461" level="INFO">🔍 Performing comprehensive backup compliance validation...</msg>
<arg>🔍 Performing comprehensive backup compliance validation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.187353" elapsed="0.000257"/>
</kw>
<kw name="Validate Backup Policy Applied" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.188065" level="INFO">✅ Validating backup policy application...</msg>
<arg>✅ Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.187987" elapsed="0.000202"/>
</kw>
<kw name="Backup Validator Validate Policies" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.188450" level="INFO">${results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${results}</var>
<arg>${policy_data}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Validate all VMs have backup policies applied</doc>
<status status="PASS" start="2025-10-07T22:29:47.188295" elapsed="0.000176"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.188682" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.188561" elapsed="0.000140"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.188874" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.188928" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.188788" elapsed="0.000157"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.189134" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.189021" elapsed="0.000222"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T22:29:47.189294" elapsed="0.000044"/>
</return>
<msg time="2025-10-07T22:29:47.189450" level="INFO">${policy_validation} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${policy_validation}</var>
<arg>${POLICY_DATA}</arg>
<doc>Validate all VMs have appropriate backup policies applied</doc>
<status status="PASS" start="2025-10-07T22:29:47.187777" elapsed="0.001692"/>
</kw>
<kw name="Validate Schedule Alignment With RPO" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.189875" level="INFO">✅ Validating schedule alignment with RPO requirements...</msg>
<arg>✅ Validating schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.189790" elapsed="0.000189"/>
</kw>
<kw name="Backup Validator Validate Rpo Alignment" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.190238" level="FAIL">TypeError: '&gt;' not supported between instances of 'int' and 'str'</msg>
<var>${results}</var>
<arg>${schedule_data}</arg>
<arg>${VM_CRITICALITY}</arg>
<arg>${RPO_REQUIREMENTS}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-07T22:29:47.190071" elapsed="0.000510">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.190677" elapsed="0.000014"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.190758" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${rpo_violation_count} RPO violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.190833" elapsed="0.000011"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.190884" elapsed="0.000013"/>
</return>
<var>${rpo_validation}</var>
<arg>${SCHEDULE_DATA}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-07T22:29:47.189597" elapsed="0.001366">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Validate Retention Settings Compliance" owner="backup_keywords">
<var>${retention_validation}</var>
<arg>${RETENTION_DATA}</arg>
<doc>Validate retention settings meet compliance standards</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191085" elapsed="0.000017"/>
</kw>
<kw name="Validate Recent Job Completion Status" owner="backup_keywords">
<var>${job_validation}</var>
<arg>${JOB_STATUS}</arg>
<doc>Validate recent backup jobs completed successfully</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191199" elapsed="0.000015"/>
</kw>
<kw name="Validate Backup Recency" owner="backup_keywords">
<var>${recency_validation}</var>
<arg>${TIMESTAMP_DATA}</arg>
<doc>Validate backups are recent and within acceptable time windows</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191312" elapsed="0.000014"/>
</kw>
<kw name="Validate Offsite Replication Configuration" owner="backup_keywords">
<var>${offsite_validation}</var>
<arg>${REPLICATION_DATA}</arg>
<doc>Validate offsite replication is enabled for critical VMs</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191427" elapsed="0.000015"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${total_violations}</var>
<arg>${policy_validation}['violations'].__len__() + ${rpo_validation}['rpo_violations'].__len__() + ${retention_validation}['violations'].__len__() + ${job_validation}['failed_jobs'].__len__() + ${recency_validation}['stale_backups'].__len__() + ${offsite_validation}['violations'].__len__()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191507" elapsed="0.000013"/>
</kw>
<if>
<branch type="IF" condition="${total_violations} &gt; 0">
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Comprehensive validation found ${total_violations} total issues</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191645" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.191577" elapsed="0.000104"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>✅ Comprehensive validation: All checks passed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191757" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.191700" elapsed="0.000144"/>
</branch>
<status status="NOT RUN" start="2025-10-07T22:29:47.191560" elapsed="0.000301"/>
</if>
<return>
<value>${total_violations}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.191894" elapsed="0.000011"/>
</return>
<doc>Perform comprehensive backup compliance validation</doc>
<status status="FAIL" start="2025-10-07T22:29:47.187146" elapsed="0.004817">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Comprehensive validation summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.192144" elapsed="0.000021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - vCenter API connection: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.192346" elapsed="0.000021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Backup policies applied: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.192525" elapsed="0.000019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Schedule alignment with RPO: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.192691" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Retention settings compliance: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.192844" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Recent job completion: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.193052" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Backup recency: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.193327" elapsed="0.000020"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Offsite replication: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.193589" elapsed="0.000027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Comprehensive backup compliance validation: PASSED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.193777" elapsed="0.000017"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.194663" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.194496" elapsed="0.000216"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.194982" level="INFO">❌ Completed: Normal - Comprehensive Backup Compliance Validation - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.194801" elapsed="0.000355"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.194735" elapsed="0.000457"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.194475" elapsed="0.000736"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.194193" elapsed="0.001061"/>
</kw>
<doc>🔗 Perform comprehensive validation of all backup compliance aspects</doc>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:29:47.185232" elapsed="0.010127">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</test>
<kw name="Generate Backup Validation Executive Summary" owner="backup_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.196892" level="INFO">📊 Generating Backup Validation Executive Summary...</msg>
<arg>📊 Generating Backup Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.196537" elapsed="0.000501"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T22:29:47.197441" level="INFO">${end_time} = 2025-10-07 22:29:47</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T22:29:47.197189" elapsed="0.000283"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.198557" level="INFO">${TEST_END_TIME} = 2025-10-07 22:29:47</msg>
<arg>${TEST_END_TIME}</arg>
<arg>${end_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:29:47.197605" elapsed="0.000984"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.198746" level="INFO">${summary_file} = results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T22:29:47.198664" elapsed="0.000100"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.199073" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:29:47
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>💾 TEST-15: BACKUP VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${end_time}</arg>
<arg>🎯 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>📋 Test Suite: Test-15 Backup Configuration Validation</arg>
<arg>========================================</arg>
<arg>📋 TEST OBJECTIVES</arg>
<arg>========================================</arg>
<arg>1. Connect to vCenter REST API</arg>
<arg>2. Collect backup configuration via API calls</arg>
<arg>3. Validate backup compliance against standards</arg>
<arg>========================================</arg>
<arg>📊 VALIDATION SCOPE</arg>
<arg>========================================</arg>
<arg>✅ Backup policy application</arg>
<arg>✅ Schedule alignment with RPO</arg>
<arg>✅ Retention settings compliance</arg>
<arg>✅ Recent job completion status</arg>
<arg>✅ Backup recency validation</arg>
<arg>✅ Offsite replication configuration</arg>
<arg>========================================</arg>
<arg>📋 TARGET VMS</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:47.198838" elapsed="0.000258"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.199499" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:29:47
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:47.199358" elapsed="0.000226"/>
</kw>
<var name="${vm}">production-db-01</var>
<status status="PASS" start="2025-10-07T22:29:47.199293" elapsed="0.000325"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.199879" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:29:47
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:47.199731" elapsed="0.000170"/>
</kw>
<var name="${vm}">production-web-01</var>
<status status="PASS" start="2025-10-07T22:29:47.199677" elapsed="0.000254"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.200159" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:29:47
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:47.200032" elapsed="0.000147"/>
</kw>
<var name="${vm}">production-app-01</var>
<status status="PASS" start="2025-10-07T22:29:47.199981" elapsed="0.000227"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.200895" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:29:47
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:47.200307" elapsed="0.000611"/>
</kw>
<var name="${vm}">file-server-01</var>
<status status="PASS" start="2025-10-07T22:29:47.200257" elapsed="0.000693"/>
</iter>
<var>${vm}</var>
<value>@{TARGET_VMS}</value>
<status status="PASS" start="2025-10-07T22:29:47.199191" elapsed="0.001780"/>
</for>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.201299" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:29:47
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>========================================</arg>
<arg>🔍 COMPLIANCE REQUIREMENTS</arg>
<arg>========================================</arg>
<arg>📅 Maximum backup age: ${MAX_BACKUP_AGE_HOURS} hours</arg>
<arg>💾 Minimum daily retention: ${MIN_DAILY_RETENTION} days</arg>
<arg>📦 Minimum weekly retention: ${MIN_WEEKLY_RETENTION} weeks</arg>
<arg>🌐 Offsite replication: Required for critical VMs</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 API data collected in JSON format</arg>
<arg>📊 Robot Framework reports: results/test15_backup_validation/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>💾 Backup policies validated</arg>
<arg>📅 Schedule compliance verified</arg>
<arg>🗄️ Retention settings confirmed</arg>
<arg>🌐 Offsite replication validated</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:47.201040" elapsed="0.000279"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T22:29:47.202151" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation\Test15_Backup_Validation_Executive_Summary.txt"&gt;C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation\Test15_Backup_Validation_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-07T22:29:47.201446" elapsed="0.000753"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.202413" level="INFO">📊 Executive summary generated: results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.202280" elapsed="0.000280"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.202782" level="INFO">✅ Test-15 Backup Validation completed successfully!</msg>
<arg>✅ Test-15 Backup Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.202674" elapsed="0.000227"/>
</kw>
<if>
<branch type="IF" condition="${VCENTER_API_CONN}">
<kw name="Vcenter Api Disconnect" owner="VCenterAPILibrary">
<arg>${VCENTER_API_CONN}</arg>
<doc>Disconnect from vCenter API</doc>
<status status="PASS" start="2025-10-07T22:29:47.203097" elapsed="0.000087"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.203333" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.203257" elapsed="0.000179"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.202985" elapsed="0.000490"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.202967" elapsed="0.000531"/>
</if>
<doc>Generate executive summary report for backup validation test</doc>
<status status="PASS" start="2025-10-07T22:29:47.196360" elapsed="0.007179"/>
</kw>
<doc>💾 Backup Configuration Validation Test Suite - Test-15
🔍 Process: Connect to vCenter API → Collect Backup Configuration → Validate Backup Compliance
✅ Pass if backup configuration meets data criticality requirements and compliance standards
📊 Validates: Backup policies, schedules, retention, job status, offsite replication</doc>
<status status="FAIL" start="2025-10-07T22:29:46.964365" elapsed="0.239202"/>
</suite>
<suite id="s1-s2" name="Av Agent Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test20_av_agent_validation\av_agent_validation.robot">
<kw name="Initialize AV Test Environment" owner="av_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:48.026011" level="INFO">🔧 Initializing AV Test Environment...</msg>
<arg>🔧 Initializing AV Test Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:48.025843" elapsed="0.000318"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_HOSTNAME}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-07T22:29:48.026296" elapsed="0.000181"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-07T22:29:48.026712" level="INFO">Logging into 'allxdvitap01:22' as 'test'.</msg>
<msg time="2025-10-07T22:29:52.814588" level="FAIL">NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</msg>
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="FAIL" start="2025-10-07T22:29:48.026564" elapsed="4.794399">NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<arg>${AV_SCREENSHOT_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:52.821121" elapsed="0.000022"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ AV Test Environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:52.821210" elapsed="0.000014"/>
</kw>
<doc>Initialize the AV test environment and establish SSH connection</doc>
<status status="FAIL" start="2025-10-07T22:29:48.025307" elapsed="4.796019">NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</kw>
<test id="s1-s2-t1" name="Critical - Connect to Target Machine" line="19">
<doc>🔗 Establish SSH connection to target machine for AV validation</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="FAIL" start="2025-10-07T22:29:52.821405" elapsed="0.000539">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t2" name="Critical - Detect Operating System Type" line="32">
<doc>🖥️ Detect operating system type (Windows/Linux) for appropriate AV detection</doc>
<tag>critical</tag>
<tag>os_detection</tag>
<tag>platform</tag>
<status status="FAIL" start="2025-10-07T22:29:52.822461" elapsed="0.000440">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t3" name="Critical - Detect Installed AV Agent" line="44">
<doc>🔍 Detect installed antivirus agent (McAfee, Sentinel One, or other)</doc>
<tag>agent</tag>
<tag>av_detection</tag>
<tag>critical</tag>
<status status="FAIL" start="2025-10-07T22:29:52.823313" elapsed="0.000314">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t4" name="Critical - Verify AV Agent Installation Status" line="61">
<doc>📦 Verify antivirus agent is properly installed</doc>
<tag>critical</tag>
<tag>installation</tag>
<tag>status</tag>
<status status="FAIL" start="2025-10-07T22:29:52.823966" elapsed="0.000306">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t5" name="Critical - Verify AV Agent Service Status" line="75">
<doc>🔄 Verify AV agent service is running</doc>
<tag>critical</tag>
<tag>running</tag>
<tag>service</tag>
<status status="FAIL" start="2025-10-07T22:29:52.824610" elapsed="0.000340">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t6" name="Critical - Collect AV Agent Information" line="89">
<doc>📊 Collect comprehensive AV agent information</doc>
<tag>collection</tag>
<tag>critical</tag>
<tag>information</tag>
<status status="FAIL" start="2025-10-07T22:29:52.825282" elapsed="0.000289">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t7" name="Critical - Verify Real-Time Protection Enabled" line="105">
<doc>🛡️ Verify real-time protection is enabled (CIP-007 R3.1 requirement)</doc>
<tag>cip_007</tag>
<tag>critical</tag>
<tag>protection</tag>
<tag>real_time</tag>
<status status="FAIL" start="2025-10-07T22:29:52.825939" elapsed="0.000437">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t8" name="Critical - Verify Signature Update Status" line="120">
<doc>📅 Verify antivirus signatures are up-to-date</doc>
<tag>cip_007</tag>
<tag>critical</tag>
<tag>signatures</tag>
<tag>updates</tag>
<status status="FAIL" start="2025-10-07T22:29:52.826751" elapsed="0.000380">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t9" name="Normal - Verify Scheduled Scan Configuration" line="141">
<doc>📅 Verify scheduled scans are configured</doc>
<tag>configuration</tag>
<tag>normal</tag>
<tag>scheduled_scan</tag>
<status status="FAIL" start="2025-10-07T22:29:52.827771" elapsed="0.000289">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t10" name="Normal - Collect Exclusion List Configuration" line="157">
<doc>📋 Collect antivirus exclusion list configuration</doc>
<tag>configuration</tag>
<tag>exclusions</tag>
<tag>normal</tag>
<status status="FAIL" start="2025-10-07T22:29:52.828477" elapsed="0.000301">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t11" name="Normal - Verify AV Console Reporting" line="172">
<doc>📡 Verify AV agent is reporting to management console</doc>
<tag>console</tag>
<tag>normal</tag>
<tag>reporting</tag>
<status status="FAIL" start="2025-10-07T22:29:52.829186" elapsed="0.000359">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t12" name="Normal - Capture AV Agent Screenshots" line="188">
<doc>📸 Capture screenshots of AV agent console and status</doc>
<tag>documentation</tag>
<tag>normal</tag>
<tag>screenshots</tag>
<status status="FAIL" start="2025-10-07T22:29:52.830294" elapsed="0.000300">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t13" name="Normal - Validate Against CIP-007 R3.1 Requirements" line="200">
<doc>✅ Comprehensive validation against CIP-007 R3.1 requirements</doc>
<tag>cip_007</tag>
<tag>compliance</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:29:52.831026" elapsed="0.000357">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<kw name="Generate AV Agent Executive Summary" owner="av_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:52.832582" level="INFO">📊 Generating AV Agent Validation Executive Summary...</msg>
<arg>📊 Generating AV Agent Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:52.832442" elapsed="0.000267"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:52.833224" level="INFO">======================================</msg>
<arg>======================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:52.833097" elapsed="0.000237"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:52.833510" level="INFO">AV AGENT VALIDATION - EXECUTIVE SUMMARY</msg>
<arg>AV AGENT VALIDATION - EXECUTIVE SUMMARY</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:52.833421" elapsed="0.000188"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:52.833831" level="INFO">======================================</msg>
<arg>======================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:52.833721" elapsed="0.000198"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:52.834078" level="INFO">Test Suite: Test-20 - AV Agent Validation</msg>
<arg>Test Suite: Test-20 - AV Agent Validation</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:52.834000" elapsed="0.000158"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:52.834309" level="INFO">Compliance Standard: CIP-007 R3.1</msg>
<arg>Compliance Standard: CIP-007 R3.1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:52.834235" elapsed="0.000154"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:52.834548" level="INFO">======================================</msg>
<arg>======================================</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:52.834472" elapsed="0.000164"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-07T22:29:52.834743" elapsed="0.000097"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:52.835040" level="INFO">✅ Executive Summary Generated</msg>
<arg>✅ Executive Summary Generated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:52.834925" elapsed="0.000216"/>
</kw>
<doc>Generate executive summary for AV agent validation</doc>
<status status="PASS" start="2025-10-07T22:29:52.832241" elapsed="0.002961"/>
</kw>
<doc>🛡️ AV Agent Validation Test Suite - Test-20
🔍 Process: Connect to target → Detect AV type → Collect agent information → Validate protection settings
✅ Pass if AV agent (McAfee or Sentinel One) is installed, running, and meets CIP-007 R3.1 requirements
📊 Validates: Agent installation, real-time protection, signature updates, scan schedules, exclusions
📋 CIP-007 R3.1: Malicious code prevention via antivirus protection</doc>
<status status="FAIL" start="2025-10-07T22:29:47.860675" elapsed="4.974556">Suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</suite>
<suite id="s1-s3" name="Network Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test3_network_validation\network_validation.robot">
<kw name="Initialize Test Environment And Lookup Configuration" owner="network_keywords" type="SETUP">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T22:29:54.102004" level="INFO">${start_time} = 2025-10-07 22:29:54</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T22:29:54.101800" elapsed="0.000236"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.102880" level="INFO">${TEST_START_TIME} = 2025-10-07 22:29:54</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:54.102143" elapsed="0.000774"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${TEST_SUITE_ID}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T22:29:54.103476" elapsed="0.000090"/>
</kw>
<msg time="2025-10-07T22:29:54.103625" level="INFO">${suite_id} = test3</msg>
<var>${suite_id}</var>
<arg>'${TEST_SUITE_ID}' == '${EMPTY}'</arg>
<arg>Auto Detect Test Suite ID</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${TEST_SUITE_ID}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T22:29:54.103006" elapsed="0.000636"/>
</kw>
<kw name="Auto Detect Test Suite Name" owner="network_keywords">
<kw name="Get Variable Value" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.104022" level="INFO">${suite_source} = C:\Users\write\project_2025\robot\robotframework\tests\test3_network_validation\network_validation.robot</msg>
<var>${suite_source}</var>
<arg>${SUITE_SOURCE}</arg>
<arg>${EMPTY}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<status status="PASS" start="2025-10-07T22:29:54.103908" elapsed="0.000133"/>
</kw>
<kw name="Split String" owner="String">
<msg time="2025-10-07T22:29:54.104237" level="INFO">${path_parts} = ['C:', 'Users', 'write', 'project_2025', 'robot', 'robotframework', 'tests', 'test3_network_validation', 'network_validation.robot']</msg>
<var>${path_parts}</var>
<arg>${suite_source}</arg>
<arg>${/}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-10-07T22:29:54.104114" elapsed="0.000141"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.104768" level="FAIL">'C:' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T22:29:54.104581" elapsed="0.000311">'C:' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T22:29:54.104961" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T22:29:54.104479" elapsed="0.000498"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T22:29:54.105059" elapsed="0.000070"/>
</kw>
<var name="${part}">C:</var>
<status status="PASS" start="2025-10-07T22:29:54.104413" elapsed="0.000752"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.105493" level="FAIL">'Users' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T22:29:54.105380" elapsed="0.000161">'Users' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T22:29:54.105603" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T22:29:54.105294" elapsed="0.000325"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T22:29:54.105694" elapsed="0.000068"/>
</kw>
<var name="${part}">Users</var>
<status status="PASS" start="2025-10-07T22:29:54.105233" elapsed="0.000556"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.106087" level="FAIL">'write' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T22:29:54.105987" elapsed="0.000138">'write' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T22:29:54.106187" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T22:29:54.105905" elapsed="0.000297"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T22:29:54.106276" elapsed="0.000065"/>
</kw>
<var name="${part}">write</var>
<status status="PASS" start="2025-10-07T22:29:54.105848" elapsed="0.000519"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.106661" level="FAIL">'project_2025' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T22:29:54.106563" elapsed="0.000134">'project_2025' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T22:29:54.106753" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T22:29:54.106480" elapsed="0.000288"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T22:29:54.106843" elapsed="0.000069"/>
</kw>
<var name="${part}">project_2025</var>
<status status="PASS" start="2025-10-07T22:29:54.106422" elapsed="0.000516"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.107235" level="FAIL">'robot' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T22:29:54.107131" elapsed="0.000141">'robot' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T22:29:54.107494" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T22:29:54.107050" elapsed="0.000462"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T22:29:54.107596" elapsed="0.000072"/>
</kw>
<var name="${part}">robot</var>
<status status="PASS" start="2025-10-07T22:29:54.106993" elapsed="0.000713"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.108007" level="FAIL">'robotframework' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T22:29:54.107905" elapsed="0.000141">'robotframework' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T22:29:54.108104" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T22:29:54.107822" elapsed="0.000297"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T22:29:54.108192" elapsed="0.000066"/>
</kw>
<var name="${part}">robotframework</var>
<status status="PASS" start="2025-10-07T22:29:54.107763" elapsed="0.000521"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.108572" level="FAIL">'tests' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-07T22:29:54.108475" elapsed="0.000133">'tests' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-07T22:29:54.108665" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T22:29:54.108395" elapsed="0.000285"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T22:29:54.108753" elapsed="0.000065"/>
</kw>
<var name="${part}">tests</var>
<status status="PASS" start="2025-10-07T22:29:54.108339" elapsed="0.000506"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-07T22:29:54.109033" elapsed="0.000082"/>
</kw>
<msg time="2025-10-07T22:29:54.109176" level="INFO">${is_test_dir} = True</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-07T22:29:54.108955" elapsed="0.000237"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Return From Keyword" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.109409" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>${part}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" start="2025-10-07T22:29:54.109369" elapsed="0.000076"/>
</kw>
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-07T22:29:54.109264" elapsed="0.000211"/>
</kw>
<var name="${part}">test3_network_validation</var>
<status status="PASS" start="2025-10-07T22:29:54.108899" elapsed="0.000600"/>
</iter>
<var>${part}</var>
<value>@{path_parts}</value>
<status status="PASS" start="2025-10-07T22:29:54.104304" elapsed="0.005216"/>
</for>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Could not auto-detect test suite name, defaulting to test3_network_validation</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.109590" elapsed="0.000013"/>
</kw>
<return>
<value>test3_network_validation</value>
<status status="NOT RUN" start="2025-10-07T22:29:54.109638" elapsed="0.000015"/>
</return>
<msg time="2025-10-07T22:29:54.109737" level="INFO">${suite_name} = test3_network_validation</msg>
<var>${suite_name}</var>
<doc>Auto-detect full test suite name from current working directory or test file path</doc>
<status status="PASS" start="2025-10-07T22:29:54.103792" elapsed="0.005960"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.109930" level="INFO">${TEST_SUITE_ID} = test3</msg>
<arg>${TEST_SUITE_ID}</arg>
<arg>${suite_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:54.109822" elapsed="0.000133"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.110127" level="INFO">${TEST_SUITE_NAME} = Hostname Validation Test Suite - test3</msg>
<arg>${TEST_SUITE_NAME}</arg>
<arg>Hostname Validation Test Suite - ${suite_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:54.110024" elapsed="0.000127"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.110334" level="INFO">${TEST_REPORTS_DIR} = C:\Users\write\project_2025\robot\robotframework/results/test3_network_validation</msg>
<arg>${TEST_REPORTS_DIR}</arg>
<arg>${REPORTS_DIR}/${suite_name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:54.110218" elapsed="0.000139"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:54.110520" level="INFO">${DATA_DIR} = C:\Users\write\project_2025\robot\robotframework/results/test3_network_validation/data</msg>
<arg>${DATA_DIR}</arg>
<arg>${TEST_REPORTS_DIR}/data</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:54.110423" elapsed="0.000120"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T22:29:54.110726" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results"&gt;C:\Users\write\project_2025\robot\robotframework\results&lt;/a&gt;' already exists.</msg>
<arg>${REPORTS_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T22:29:54.110604" elapsed="0.000159"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T22:29:54.110963" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test3_network_validation"&gt;C:\Users\write\project_2025\robot\robotframework\results\test3_network_validation&lt;/a&gt;' already exists.</msg>
<arg>${TEST_REPORTS_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T22:29:54.110845" elapsed="0.000232"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T22:29:54.111274" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test3_network_validation\data"&gt;C:\Users\write\project_2025\robot\robotframework\results\test3_network_validation\data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T22:29:54.111155" elapsed="0.000156"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n🔍 Looking up configuration for hostname: ${TARGET_HOSTNAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T22:29:54.111383" elapsed="0.000247"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-07T22:29:54.123170" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T22:29:54.123394" level="INFO">Available hostnames: ['alhxvdvitap01', 'alhxvdvitag01', 'alhxvqaitiap01', 'alhxvqaitiap02', 'alhxvqaitred01', 'alhxvqaitred02', 'alhxvqaitred03', 'alhxvqaitmdb01', 'alhxvqaitmdb02', 'alhxvqaitmdb03', 'alhxvqaitag01', 'alhxvqaitag02', 'alhxvpritiap01', 'alhxvpritiap02']</msg>
<msg time="2025-10-07T22:29:54.123484" level="FAIL">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</msg>
<var>${config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="FAIL" start="2025-10-07T22:29:54.111758" elapsed="0.012405">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_IP}</arg>
<arg>${config}[ip]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.124337" elapsed="0.000023"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_SUBNET}</arg>
<arg>${config}[subnet]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.124436" elapsed="0.000014"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_MASK}</arg>
<arg>${config}[mask]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.124517" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_GATEWAY}</arg>
<arg>${config}[gateway]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.124592" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_CNAME}</arg>
<arg>${config}[cname]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.124667" elapsed="0.000013"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_DOMAIN}</arg>
<arg>${config}[domain]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.124750" elapsed="0.000011"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n📋 EDS Configuration for ${TARGET_HOSTNAME}:</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.124825" elapsed="0.000011"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 IP: ${TARGET_IP}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.124895" elapsed="0.000012"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 Subnet: ${TARGET_SUBNET}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.124965" elapsed="0.000011"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 Gateway: ${TARGET_GATEWAY}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125031" elapsed="0.000010"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 CNAME: ${TARGET_CNAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125097" elapsed="0.000022"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 Domain: ${TARGET_DOMAIN}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125177" elapsed="0.000011"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n🚀 ===================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125244" elapsed="0.000012"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🌐 NETWORK VALIDATION: EDS vs SERVER COMPARISON</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125314" elapsed="0.000011"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>⚡ Test Suite: ${suite_id} (${TEST_SUITE_NAME})</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125381" elapsed="0.000011"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>═══════════════════════════════════════════════════</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125449" elapsed="0.000010"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📅 Start Time: ${start_time}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125515" elapsed="0.000012"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🎯 Target Hostname: ${TARGET_HOSTNAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125584" elapsed="0.000011"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🌐 SSH Target IP: ${TARGET_IP}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125652" elapsed="0.000011"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 Suite Reports: ${TEST_REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125725" elapsed="0.000012"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 Overall Reports: ${REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125794" elapsed="0.000011"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>===================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:54.125861" elapsed="0.000010"/>
</kw>
<doc>🚀 Load EDS configuration and prepare for server validation</doc>
<status status="FAIL" start="2025-10-07T22:29:54.101279" elapsed="0.024688">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<test id="s1-s3-t1" name="Critical - Hostname Validation" line="18">
<doc>🔧 SSH to server and compare hostname with EDS expectation</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hostname</tag>
<status status="FAIL" start="2025-10-07T22:29:54.126049" elapsed="0.000499">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s3-t2" name="Critical - IP Address Validation" line="37">
<doc>🌐 SSH to server and compare IP configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>ip</tag>
<tag>networking</tag>
<status status="FAIL" start="2025-10-07T22:29:54.127098" elapsed="0.000437">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s3-t3" name="Critical - Subnet Validation" line="56">
<doc>🌍 SSH to server and compare subnet configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>networking</tag>
<tag>subnet</tag>
<status status="FAIL" start="2025-10-07T22:29:54.128007" elapsed="0.000328">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s3-t4" name="Critical - Gateway Validation" line="75">
<doc>🛣️ SSH to server and compare gateway configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>gateway</tag>
<tag>networking</tag>
<status status="FAIL" start="2025-10-07T22:29:54.128813" elapsed="0.000342">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s3-t5" name="Critical - DNS Name Validation" line="94">
<doc>🌐 SSH to server and compare DNS configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>dns</tag>
<tag>hostname</tag>
<status status="FAIL" start="2025-10-07T22:29:54.129710" elapsed="0.000498">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s3-t6" name="Normal - NTP Configuration Validation" line="117">
<doc>📈 SSH to server and validate NTP service is running</doc>
<tag>normal</tag>
<tag>ntp</tag>
<tag>time</tag>
<status status="FAIL" start="2025-10-07T22:29:54.130676" elapsed="0.000514">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<kw name="Generate Executive Summary" owner="network_keywords" type="TEARDOWN">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T22:29:54.132554" level="INFO">${end_time} = 2025-10-07 22:29:54</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T22:29:54.132321" elapsed="0.000257"/>
</kw>
<kw name="Subtract Date From Date" owner="DateTime">
<msg time="2025-10-07T22:29:54.133296" level="INFO">${duration} = 0.0</msg>
<var>${duration}</var>
<arg>${end_time}</arg>
<arg>${TEST_START_TIME}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="PASS" start="2025-10-07T22:29:54.132676" elapsed="0.000643"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-07T22:29:54.133410" elapsed="0.000070"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n🎯 ═══════════════════════════════════════════════════════════════</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T22:29:54.133550" elapsed="0.000296"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 EXECUTIVE SUMMARY - ${TEST_SUITE_ID} EDS vs SERVER VALIDATION</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T22:29:54.133958" elapsed="0.000226"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>═══════════════════════════════════════════════════════════════</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T22:29:54.134369" elapsed="0.000182"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>⏱️ Duration: ${duration} seconds</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T22:29:54.134657" elapsed="0.000190"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🎯 Target: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T22:29:54.134971" elapsed="0.000256"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📋 EDS Data: Successfully loaded and compared</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T22:29:54.135337" elapsed="0.000149"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🔌 SSH Connection: Used for server validation</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T22:29:54.135614" elapsed="0.000167"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 Suite Reports: ${TEST_REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T22:29:54.135900" elapsed="0.000202"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 Overall Reports: ${REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T22:29:54.136189" elapsed="0.000163"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🏆 Overall Status: TEST COMPLETED</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T22:29:54.136463" elapsed="0.000145"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>═══════════════════════════════════════════════════════════════</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-07T22:29:54.136707" elapsed="0.000166"/>
</kw>
<doc>Generate test summary and close connections</doc>
<status status="PASS" start="2025-10-07T22:29:54.132124" elapsed="0.004891"/>
</kw>
<doc>🌐 Hostname Validation Test Suite - Test-3
🔍 Process: Find hostname in EDS → SSH to IP → Compare server vs EDS
✅ Pass if server matches EDS, ❌ Fail if mismatch</doc>
<status status="FAIL" start="2025-10-07T22:29:53.488983" elapsed="0.648113">Suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</suite>
<suite id="s1-s4" name="Vm Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test4_vm_validation\vm_validation.robot">
<kw name="Initialize VM Test Environment And Lookup Configuration" owner="variables" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.473676" level="INFO">🚀 Initializing VM Validation Test Suite (Test-4)</msg>
<arg>🚀 Initializing VM Validation Test Suite (Test-4)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.473524" elapsed="0.000326"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.474185" level="INFO">🎯 Target VM: allxdvitap01</msg>
<arg>🎯 Target VM: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.474003" elapsed="0.000317"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-07T22:29:55.487099" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T22:29:55.487495" level="INFO">Available hostnames: ['alhxvdvitap01', 'alhxvdvitag01', 'alhxvqaitiap01', 'alhxvqaitiap02', 'alhxvqaitred01', 'alhxvqaitred02', 'alhxvqaitred03', 'alhxvqaitmdb01', 'alhxvqaitmdb02', 'alhxvqaitmdb03', 'alhxvqaitag01', 'alhxvqaitag02', 'alhxvpritiap01', 'alhxvpritiap02']</msg>
<msg time="2025-10-07T22:29:55.487632" level="FAIL">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="FAIL" start="2025-10-07T22:29:55.474442" elapsed="0.014090">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VXRAIL_CLUSTER}</arg>
<arg>${eds_config['vxrail_cluster']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.488727" elapsed="0.000026"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${vcenter_from_eds}</var>
<arg>${eds_config['vcenter_host']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.488846" elapsed="0.000017"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<var>${final_vcenter_host}</var>
<arg>'${vcenter_from_eds}' == 'N/A'</arg>
<arg>Set Variable</arg>
<arg>${DEFAULT_VCENTER_HOST}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${vcenter_from_eds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.488952" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VCENTER_HOST}</arg>
<arg>${final_vcenter_host}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489037" elapsed="0.000011"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_CPU_CORES}</arg>
<arg>${eds_config['cpu_cores']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489110" elapsed="0.000011"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_RAM}</arg>
<arg>${eds_config['ram']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489182" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_HARDWARE_VERSION}</arg>
<arg>${eds_config['vm_hardware_version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489270" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_MEMORY_RESERVATION}</arg>
<arg>${eds_config['vm_memory_reservation']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489356" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_CPU_RESERVATION}</arg>
<arg>${eds_config['vm_cpu_reservation']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489428" elapsed="0.000011"/>
</kw>
<kw name="Get Environment Variable" owner="OperatingSystem">
<var>${env_vcenter_user}</var>
<arg>VCENTER_USERNAME</arg>
<arg>${VCENTER_USERNAME}</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489497" elapsed="0.000011"/>
</kw>
<kw name="Get Environment Variable" owner="OperatingSystem">
<var>${env_vcenter_pass}</var>
<arg>VCENTER_PASSWORD</arg>
<arg>${VCENTER_PASSWORD}</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489566" elapsed="0.000010"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${VCENTER_USERNAME}</arg>
<arg>${env_vcenter_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489637" elapsed="0.000011"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${VCENTER_PASSWORD}</arg>
<arg>${env_vcenter_pass}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489706" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS Configuration Retrieved:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489776" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - VxRail Cluster: ${TARGET_VXRAIL_CLUSTER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489844" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - vCenter Host: ${TARGET_VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489912" elapsed="0.000010"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - CPU Cores: ${TARGET_VM_CPU_CORES}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.489976" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - RAM: ${TARGET_VM_RAM}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.490046" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - Hardware Version: ${TARGET_VM_HARDWARE_VERSION}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.490114" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ VM Test Environment Initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:55.490182" elapsed="0.000011"/>
</kw>
<doc>Initialize test environment and lookup VM configuration from EDS</doc>
<status status="FAIL" start="2025-10-07T22:29:55.473062" elapsed="0.017225">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<test id="s1-s4-t1" name="Critical - vCenter API Connection" line="21">
<doc>🔌 Establish API connection to vCenter and retrieve VM details</doc>
<tag>api</tag>
<tag>connection</tag>
<tag>critical</tag>
<tag>vcenter</tag>
<status status="FAIL" start="2025-10-07T22:29:55.490477" elapsed="0.000477">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t2" name="Critical - VM Cluster Placement Validation" line="48">
<doc>🏢 Validate VM is placed in the correct VxRail cluster per EDS specification</doc>
<tag>cluster</tag>
<tag>compliance</tag>
<tag>critical</tag>
<tag>placement</tag>
<status status="FAIL" start="2025-10-07T22:29:55.491433" elapsed="0.000430">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t3" name="Critical - VM CPU Configuration Validation" line="62">
<doc>💻 Validate VM CPU allocation matches EDS specification</doc>
<tag>compliance</tag>
<tag>cpu</tag>
<tag>critical</tag>
<tag>hardware</tag>
<status status="FAIL" start="2025-10-07T22:29:55.492342" elapsed="0.000362">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t4" name="Critical - VM Memory Configuration Validation" line="76">
<doc>🧠 Validate VM memory allocation matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hardware</tag>
<tag>memory</tag>
<status status="FAIL" start="2025-10-07T22:29:55.493038" elapsed="0.000319">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t5" name="Critical - VM Hardware Version Validation" line="90">
<doc>⚙️ Validate VM hardware version matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hardware</tag>
<tag>version</tag>
<status status="FAIL" start="2025-10-07T22:29:55.493673" elapsed="0.000337">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t6" name="Critical - VM Network Adapter Validation" line="104">
<doc>🌐 Validate VM network adapter configuration</doc>
<tag>adapters</tag>
<tag>compliance</tag>
<tag>critical</tag>
<tag>network</tag>
<status status="FAIL" start="2025-10-07T22:29:55.494488" elapsed="0.000306">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t7" name="Critical - VM Disk Configuration Validation" line="118">
<doc>💾 Validate VM disk configuration and capacity</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>disk</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-07T22:29:55.495173" elapsed="0.000358">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t8" name="Normal - VM Properties Comprehensive Review" line="132">
<doc>📋 Review all VM properties and configuration details</doc>
<tag>analysis</tag>
<tag>normal</tag>
<tag>properties</tag>
<tag>review</tag>
<status status="FAIL" start="2025-10-07T22:29:55.495954" elapsed="0.000414">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<kw name="Generate VM Executive Summary And Disconnect" type="TEARDOWN">
<kw name="Generate VM Executive Summary" owner="variables">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.497761" level="INFO">📊 Generating VM Validation Executive Summary...</msg>
<arg>📊 Generating VM Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.497623" elapsed="0.000265"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.498173" level="INFO">${summary_file} = C:\Users\write\project_2025\robot\robotframework\results\test4_vm_validation/Test4_VM_Validation_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>${OUTPUT_DIR}/Test4_VM_Validation_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T22:29:55.498010" elapsed="0.000188"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.499832" level="INFO">${summary} = ========================================
VM VALIDATION TEST - EXECUTIVE SUMMARY
========================================

Test Suite: Test-4 VM Validation
Target VM: allxdvitap01

EDS CONFIGURATION:
-...</msg>
<var>${summary}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>VM VALIDATION TEST - EXECUTIVE SUMMARY</arg>
<arg>========================================</arg>
<arg>${EMPTY}</arg>
<arg>Test Suite: Test-4 VM Validation</arg>
<arg>Target VM: ${TARGET_HOSTNAME}</arg>
<arg>${EMPTY}</arg>
<arg>EDS CONFIGURATION:</arg>
<arg>- VxRail Cluster: ${TARGET_VXRAIL_CLUSTER}</arg>
<arg>- vCenter Host: ${TARGET_VCENTER_HOST}</arg>
<arg>- Expected CPU Cores: ${TARGET_VM_CPU_CORES}</arg>
<arg>- Expected RAM: ${TARGET_VM_RAM}</arg>
<arg>- Expected Hardware Version: ${TARGET_VM_HARDWARE_VERSION}</arg>
<arg>- Memory Reservation: ${TARGET_VM_MEMORY_RESERVATION}</arg>
<arg>- CPU Reservation: ${TARGET_VM_CPU_RESERVATION}</arg>
<arg>${EMPTY}</arg>
<arg>VALIDATION STATUS:</arg>
<arg>- See detailed test report for validation results</arg>
<arg>${EMPTY}</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:55.498296" elapsed="0.001558"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T22:29:55.500664" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test4_vm_validation\Test4_VM_Validation_Executive_Summary.txt"&gt;C:\Users\write\project_2025\robot\robotframework\results\test4_vm_validation\Test4_VM_Validation_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-07T22:29:55.499964" elapsed="0.000748"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.500920" level="INFO">✅ Executive Summary generated: C:\Users\write\project_2025\robot\robotframework\results\test4_vm_validation/Test4_VM_Validation_Executive_Summary.txt</msg>
<arg>✅ Executive Summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.500792" elapsed="0.000269"/>
</kw>
<doc>Generate executive summary for VM validation test results</doc>
<status status="PASS" start="2025-10-07T22:29:55.497462" elapsed="0.003682"/>
</kw>
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<msg time="2025-10-07T22:29:55.519563" level="FAIL">Recursive execution stopped.</msg>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.519320" elapsed="0.000276">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.519871" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.519749" elapsed="0.000294"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.519218" elapsed="0.001069">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.520651" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.520535" elapsed="0.000246"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.519125" elapsed="0.001878">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.521227" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.521144" elapsed="0.000200"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.519029" elapsed="0.002482">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.521710" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.521630" elapsed="0.000164"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.518928" elapsed="0.003030">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.522150" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.522074" elapsed="0.000164"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.518819" elapsed="0.003634">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.524239" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.524145" elapsed="0.000200"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.518624" elapsed="0.006089">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.525146" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.524966" elapsed="0.000305"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.518453" elapsed="0.007000">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.525709" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.525603" elapsed="0.000227"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.518348" elapsed="0.007678">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.526309" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.526172" elapsed="0.000255"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.518250" elapsed="0.008432">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.526974" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.526844" elapsed="0.000266"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.518154" elapsed="0.009185">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.527552" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.527462" elapsed="0.000192"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.518056" elapsed="0.009771">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.528034" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.527949" elapsed="0.000191"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.517958" elapsed="0.010356">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.528513" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.528433" elapsed="0.000176"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.517863" elapsed="0.010928">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.529010" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.528919" elapsed="0.000203"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.517688" elapsed="0.011684">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.529638" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.529530" elapsed="0.000237"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.517592" elapsed="0.012401">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.530292" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.530157" elapsed="0.000261"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.517493" elapsed="0.013123">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.530846" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.530750" elapsed="0.000188"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.517393" elapsed="0.013738">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.531516" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.531414" elapsed="0.000206"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.517293" elapsed="0.014579">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.532204" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.532052" elapsed="0.000279"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.517192" elapsed="0.015330">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.532732" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.532650" elapsed="0.000176"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.517001" elapsed="0.019090">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.536438" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.536282" elapsed="0.000308"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.516799" elapsed="0.019996">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.537167" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.536965" elapsed="0.000330"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.516703" elapsed="0.020843">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.537794" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.537695" elapsed="0.000209"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.516606" elapsed="0.021497">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.538303" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.538222" elapsed="0.000166"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.516510" elapsed="0.022030">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.538726" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.538649" elapsed="0.000157"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.516406" elapsed="0.022547">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.539146" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.539062" elapsed="0.000170"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.516314" elapsed="0.023067">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.539574" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.539501" elapsed="0.000168"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.516216" elapsed="0.023598">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.539993" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.539922" elapsed="0.000150"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.516123" elapsed="0.024096">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.540399" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.540326" elapsed="0.000153"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.516022" elapsed="0.024602">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.540809" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.540733" elapsed="0.000154"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.515925" elapsed="0.025115">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.541217" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.541143" elapsed="0.000153"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.515831" elapsed="0.025611">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.541620" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.541547" elapsed="0.000156"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.515730" elapsed="0.026118">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.542060" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.541967" elapsed="0.000236"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.515630" elapsed="0.026799">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.542765" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.542651" elapsed="0.000251"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.515478" elapsed="0.027633">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.543450" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.543288" elapsed="0.000272"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.515224" elapsed="0.028607">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.544328" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.544120" elapsed="0.000366"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.515076" elapsed="0.029631">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.544951" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.544835" elapsed="0.000231"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.514980" elapsed="0.030246">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.545434" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.545345" elapsed="0.000211"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.514883" elapsed="0.030853">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.545948" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.545855" elapsed="0.000210"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.514773" elapsed="0.031485">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.546482" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.546380" elapsed="0.000226"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.514675" elapsed="0.032174">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.547167" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.547031" elapsed="0.000261"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.514541" elapsed="0.032948">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.547755" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.547644" elapsed="0.000218"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.514448" elapsed="0.033627">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.548317" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.548219" elapsed="0.000193"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.514336" elapsed="0.034250">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.548780" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.548699" elapsed="0.000181"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.514237" elapsed="0.034817">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.549260" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.549178" elapsed="0.000183"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.514137" elapsed="0.035383">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.549731" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.549637" elapsed="0.000215"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.514036" elapsed="0.036069">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.550402" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.550282" elapsed="0.000230"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.513934" elapsed="0.036742">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.550883" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.550792" elapsed="0.000197"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.513825" elapsed="0.037338">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.551439" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.551344" elapsed="0.000199"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.513548" elapsed="0.038264">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.552347" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.552039" elapsed="0.000450"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.513159" elapsed="0.039492">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.552990" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.552825" elapsed="0.000284"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.513059" elapsed="0.040285">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.553536" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.553453" elapsed="0.000177"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.512929" elapsed="0.040867">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.553998" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.553916" elapsed="0.000172"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.512830" elapsed="0.041428">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.554457" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.554376" elapsed="0.000190"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.512725" elapsed="0.042028">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.554976" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.554880" elapsed="0.000204"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.512629" elapsed="0.042609">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.555413" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.555336" elapsed="0.000169"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.512532" elapsed="0.043118">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.556143" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.555750" elapsed="0.000482"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.512439" elapsed="0.043952">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.556594" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.556504" elapsed="0.000179"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.512339" elapsed="0.044483">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.557000" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.556921" elapsed="0.000159"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.512246" elapsed="0.044981">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.557419" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.557341" elapsed="0.000177"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.512154" elapsed="0.045509">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.557845" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.557768" elapsed="0.000177"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.512055" elapsed="0.046029">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.558267" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.558188" elapsed="0.000170"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.511957" elapsed="0.046527">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.558654" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.558578" elapsed="0.000180"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.511820" elapsed="0.047205">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.559426" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.559271" elapsed="0.000280"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.511584" elapsed="0.048120">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.560095" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.559878" elapsed="0.000333"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.511445" elapsed="0.048943">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.560583" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.560493" elapsed="0.000283"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.511333" elapsed="0.049756">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.561466" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.561319" elapsed="0.000261"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.511242" elapsed="0.050531">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.562022" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.561915" elapsed="0.000245"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.511145" elapsed="0.051226">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.562659" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.562529" elapsed="0.000309"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.511049" elapsed="0.051968">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.563272" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.563160" elapsed="0.000229"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.510956" elapsed="0.052606">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.563800" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.563692" elapsed="0.000241"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.510861" elapsed="0.053343">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.564423" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.564328" elapsed="0.000219"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.510748" elapsed="0.053950">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.564918" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.564814" elapsed="0.000252"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.510645" elapsed="0.054613">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.565534" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.565427" elapsed="0.000206"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.510528" elapsed="0.055283">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.566047" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.565947" elapsed="0.000206"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.510418" elapsed="0.055900">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.566543" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.566450" elapsed="0.000192"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.510324" elapsed="0.056454">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.566964" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.566881" elapsed="0.000183"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.510227" elapsed="0.056965">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.568254" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.568157" elapsed="0.000198"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.510030" elapsed="0.058559">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.568931" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.568770" elapsed="0.000335"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.509862" elapsed="0.059414">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.569537" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.569420" elapsed="0.000260"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.509768" elapsed="0.060079">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.570022" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.569943" elapsed="0.000175"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.509679" elapsed="0.060605">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.570506" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.570408" elapsed="0.000245"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.509586" elapsed="0.061194">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.570959" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.570880" elapsed="0.000161"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.509487" elapsed="0.061675">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.571344" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.571268" elapsed="0.000172"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.509395" elapsed="0.062198">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.571808" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.571708" elapsed="0.000208"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.509279" elapsed="0.062762">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.572215" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.572136" elapsed="0.000175"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.509099" elapsed="0.063324">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.572600" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.572524" elapsed="0.000167"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.509008" elapsed="0.063804">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.572989" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.572904" elapsed="0.000189"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.508915" elapsed="0.064303">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.573390" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.573311" elapsed="0.000185"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.508820" elapsed="0.064794">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.573795" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.573706" elapsed="0.000201"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.508717" elapsed="0.065398">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.574404" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.574275" elapsed="0.000247"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.508618" elapsed="0.066041">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.574847" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.574761" elapsed="0.000193"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.508452" elapsed="0.068216">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.576966" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.576819" elapsed="0.000301"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.508251" elapsed="0.068999">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.577530" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.577370" elapsed="0.000287"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.508156" elapsed="0.069698">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.578065" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.577969" elapsed="0.000216"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.508063" elapsed="0.070277">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.578554" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.578454" elapsed="0.000200"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.507969" elapsed="0.070824">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.578997" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.578902" elapsed="0.000218"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.507872" elapsed="0.071399">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.579511" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.579399" elapsed="0.000231"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.507782" elapsed="0.072048">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.580016" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.579930" elapsed="0.000194"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.507689" elapsed="0.072627">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.580564" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.580470" elapsed="0.000200"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.507593" elapsed="0.073215">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.581005" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.580916" elapsed="0.000188"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.507498" elapsed="0.073741">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.581457" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.581371" elapsed="0.000188"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.507405" elapsed="0.074306">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.581933" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.581833" elapsed="0.000203"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.507308" elapsed="0.074852">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.582329" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.582253" elapsed="0.000157"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.507203" elapsed="0.075311">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.582689" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.582605" elapsed="0.000173"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.507102" elapsed="0.075796">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.583075" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.582995" elapsed="0.000167"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.506923" elapsed="0.076394">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.583587" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.583459" elapsed="0.000374"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.506609" elapsed="0.077381">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.584385" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.584191" elapsed="0.000340"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.506441" elapsed="0.078242">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.584874" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.584782" elapsed="0.000198"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.506332" elapsed="0.078790">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.585302" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.585215" elapsed="0.000195"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.506236" elapsed="0.079287">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.585695" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.585616" elapsed="0.000170"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.506138" elapsed="0.079760">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.586065" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.585987" elapsed="0.000170"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.506041" elapsed="0.080217">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.586417" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.586344" elapsed="0.000163"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.505947" elapsed="0.080667">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.586783" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.586705" elapsed="0.000168"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.505852" elapsed="0.081176">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.587191" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.587114" elapsed="0.000162"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.505758" elapsed="0.081614">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.587528" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.587454" elapsed="0.000157"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.505666" elapsed="0.082054">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.587891" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.587812" elapsed="0.000167"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.505574" elapsed="0.082513">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.588251" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.588174" elapsed="0.000168"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.505477" elapsed="0.082959">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.588591" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.588516" elapsed="0.000162"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.505379" elapsed="0.083409">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.588961" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.588881" elapsed="0.000174"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.505270" elapsed="0.083894">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.589372" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.589293" elapsed="0.000177"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.505063" elapsed="0.084560">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.589943" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.589785" elapsed="0.000285"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.504576" elapsed="0.085604">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.590492" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.590322" elapsed="0.000286"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.504480" elapsed="0.086312">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.590965" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.590881" elapsed="0.000171"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.504385" elapsed="0.086775">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.591327" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.591244" elapsed="0.000175"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.504286" elapsed="0.087231">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.591677" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.591598" elapsed="0.000189"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.504190" elapsed="0.087699">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.592054" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.591975" elapsed="0.000175"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.504093" elapsed="0.088148">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.592395" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.592321" elapsed="0.000153"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.503984" elapsed="0.088596">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.592730" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.592658" elapsed="0.000154"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.503867" elapsed="0.089050">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.593076" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.593000" elapsed="0.000169"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.503739" elapsed="0.089556">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.593450" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.593374" elapsed="0.000179"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.503609" elapsed="0.090033">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.593867" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.593725" elapsed="0.000287"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.503363" elapsed="0.090772">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.594314" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.594228" elapsed="0.000199"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.503233" elapsed="0.091288">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.594733" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.594635" elapsed="0.000207"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.503100" elapsed="0.091853">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.595129" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.595044" elapsed="0.000186"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.502889" elapsed="0.092485">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.595638" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.595522" elapsed="0.000255"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.502553" elapsed="0.093372">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.596437" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.596138" elapsed="0.000461"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.502394" elapsed="0.094370">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.596961" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.596864" elapsed="0.000221"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.502294" elapsed="0.094931">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.597479" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.597353" elapsed="0.000237"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.502195" elapsed="0.095494">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.597858" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.597775" elapsed="0.000175"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.502095" elapsed="0.095937">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.598197" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.598109" elapsed="0.000186"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.501982" elapsed="0.096422">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.598598" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.598501" elapsed="0.000198"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.501851" elapsed="0.096937">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.598943" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.598866" elapsed="0.000178"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.501717" elapsed="0.097434">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.599425" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.599247" elapsed="0.000290"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.501585" elapsed="0.098059">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.599848" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.599749" elapsed="0.000196"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.501439" elapsed="0.098606">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:55.600222" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:55.600141" elapsed="0.000180"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-07T22:29:55.501276" elapsed="0.099302">Recursive execution stopped.</status>
</kw>
<doc>Generate executive summary and disconnect from vCenter</doc>
<status status="FAIL" start="2025-10-07T22:29:55.497216" elapsed="0.103450">Recursive execution stopped.</status>
</kw>
<doc>🖥️ VM Configuration Validation Test Suite - Test-4
🔍 Process: Connect to vCenter API → Query VM details → Compare vCenter vs EDS
✅ Pass if VM configuration matches EDS requirements, ❌ Fail if mismatch
📊 Validates: Cluster placement, CPU cores, memory, hardware version, network, disks</doc>
<status status="FAIL" start="2025-10-07T22:29:54.928723" elapsed="0.672022">Suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also suite teardown failed:
Recursive execution stopped.</status>
</suite>
<suite id="s1-s5" name="Disk Space Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test5_disk_space_validation\disk_space_validation.robot">
<kw name="Initialize Storage Test Environment And Lookup Configuration" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:56.943569" level="INFO">🚀 Initializing Test-5: Storage &amp; System Validation Environment...</msg>
<arg>🚀 Initializing Test-5: Storage &amp; System Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:56.943419" elapsed="0.000276"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T22:29:56.943981" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test5_disk_space_validation\data"&gt;C:\Users\write\project_2025\robot\robotframework\results\test5_disk_space_validation\data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T22:29:56.943797" elapsed="0.000228"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-07T22:29:56.956627" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T22:29:56.956870" level="INFO">Available hostnames: ['alhxvdvitap01', 'alhxvdvitag01', 'alhxvqaitiap01', 'alhxvqaitiap02', 'alhxvqaitred01', 'alhxvqaitred02', 'alhxvqaitred03', 'alhxvqaitmdb01', 'alhxvqaitmdb02', 'alhxvqaitmdb03', 'alhxvqaitag01', 'alhxvqaitag02', 'alhxvpritiap01', 'alhxvpritiap02']</msg>
<msg time="2025-10-07T22:29:56.957018" level="FAIL">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="FAIL" start="2025-10-07T22:29:56.944103" elapsed="0.013788">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.958069" elapsed="0.000023"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_CPU_CORES}</arg>
<arg>${eds_config['cpu_cores']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.958183" elapsed="0.000014"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_RAM}</arg>
<arg>${eds_config['ram']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.958270" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_STORAGE_TYPE}</arg>
<arg>${eds_config['storage_type']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.958348" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_STORAGE_TOTAL_TB}</arg>
<arg>${eds_config['storage_total_tb']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.958423" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_DRIVE_VOLUME_GROUP}</arg>
<arg>${eds_config['drive_volume_group']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.958500" elapsed="0.000011"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_FILE_SYSTEM}</arg>
<arg>${eds_config['file_system']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.958574" elapsed="0.000011"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_LOGICAL_VOLUME}</arg>
<arg>${eds_config['logical_volume_partition']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.958655" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_STORAGE_ALLOC_GB}</arg>
<arg>${eds_config['storage_allocation_gb']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.958729" elapsed="0.000011"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_RECOMMENDED_GB}</arg>
<arg>${eds_config['recommended_storage_gb']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.958813" elapsed="0.000011"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_DRIVE_PURPOSE}</arg>
<arg>${eds_config['drive_purpose']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.958884" elapsed="0.000011"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_OS_TYPE}</arg>
<arg>${eds_config['os_type']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.958966" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.959037" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS CPU Cores: ${TARGET_CPU_CORES}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.959107" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS RAM: ${TARGET_RAM} GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.959183" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS Storage Type: ${TARGET_STORAGE_TYPE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.959262" elapsed="0.000010"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS Storage Total: ${TARGET_STORAGE_TOTAL_TB} TB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.959331" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS OS Type: ${TARGET_OS_TYPE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.959397" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔗 Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.959465" elapsed="0.000011"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.959544" elapsed="0.000011"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.959609" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.959835" elapsed="0.000023"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Test-5 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:56.959994" elapsed="0.000019"/>
</kw>
<doc>🏗️ Set up test environment and lookup EDS configuration</doc>
<status status="FAIL" start="2025-10-07T22:29:56.942912" elapsed="0.017223">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<test id="s1-s5-t1" name="Critical - CPU Cores Validation" line="18">
<doc>💻 SSH to server and validate CPU core count matches EDS specification</doc>
<tag>compliance</tag>
<tag>cpu</tag>
<tag>critical</tag>
<tag>hardware</tag>
<status status="FAIL" start="2025-10-07T22:29:56.960244" elapsed="0.000652">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t2" name="Critical - Memory Allocation Validation" line="35">
<doc>🧠 SSH to server and validate memory allocation matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hardware</tag>
<tag>memory</tag>
<status status="FAIL" start="2025-10-07T22:29:56.961445" elapsed="0.000521">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t3" name="Critical - Disk Space Allocation Validation" line="52">
<doc>💾 SSH to server and validate disk space allocation against EDS requirements</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>disk</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-07T22:29:56.962470" elapsed="0.000493">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t4" name="Critical - Storage Type Validation" line="69">
<doc>📡 SSH to server and validate storage infrastructure matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-07T22:29:56.963354" elapsed="0.000429">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t5" name="Critical - Root Filesystem Validation" line="86">
<doc>🗂️ SSH to server and validate root filesystem configuration against EDS</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>filesystem</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-07T22:29:56.964176" elapsed="0.000472">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t6" name="Normal - Storage Capacity Analysis" line="106">
<doc>📊 Analyze overall storage capacity and utilization patterns</doc>
<tag>analysis</tag>
<tag>capacity</tag>
<tag>normal</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-07T22:29:56.965052" elapsed="0.000341">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t7" name="Normal - Volume Group Analysis" line="126">
<doc>🏗️ Analyze volume group and logical volume configuration</doc>
<tag>analysis</tag>
<tag>lvm</tag>
<tag>normal</tag>
<tag>volumes</tag>
<status status="FAIL" start="2025-10-07T22:29:56.965857" elapsed="0.000494">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t8" name="Normal - Operating System Validation" line="145">
<doc>🖥️ Validate operating system type matches EDS specification</doc>
<tag>compliance</tag>
<tag>normal</tag>
<tag>os</tag>
<tag>system</tag>
<status status="FAIL" start="2025-10-07T22:29:56.966730" elapsed="0.000487">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<kw name="Generate Storage Executive Summary" owner="storage_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:56.968501" level="INFO">📊 Generating Test-5 Storage Validation Executive Summary...</msg>
<arg>📊 Generating Test-5 Storage Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:56.968335" elapsed="0.000299"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T22:29:56.968936" level="INFO">${timestamp} = 2025-10-07 22:29:56</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T22:29:56.968742" elapsed="0.000214"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:56.969124" level="INFO">${summary_file} = results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T22:29:56.969036" elapsed="0.000106"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:56.970231" level="INFO">${summary_content} = None</msg>
<msg time="2025-10-07T22:29:56.970259" level="FAIL">Variable '${TARGET_IP}' not found.</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>🗄️ TEST-5: STORAGE &amp; SYSTEM VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${timestamp}</arg>
<arg>🎯 Target System: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>📋 Test Suite: Test-5 Disk Space &amp; System Validation</arg>
<arg>========================================</arg>
<arg>📋 EDS BASELINE CONFIGURATION</arg>
<arg>========================================</arg>
<arg>💻 CPU Cores (Expected): ${TARGET_CPU_CORES}</arg>
<arg>🧠 RAM (Expected): ${TARGET_RAM} GB</arg>
<arg>📡 Storage Type (Expected): ${TARGET_STORAGE_TYPE}</arg>
<arg>💾 Storage Total (Expected): ${TARGET_STORAGE_TOTAL_TB} TB</arg>
<arg>🗂️ Mount Point (Expected): ${TARGET_LOGICAL_VOLUME}</arg>
<arg>📊 Storage Allocation (Expected): ${TARGET_STORAGE_ALLOC_GB} GB</arg>
<arg>🎯 Drive Purpose: ${TARGET_DRIVE_PURPOSE}</arg>
<arg>🖥️ OS Type (Expected): ${TARGET_OS_TYPE}</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 Detailed data files: results/test5_disk_space_validation/data/</arg>
<arg>📊 Robot Framework reports: results/test5_disk_space_validation/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>📋 All data collected and validated against EDS</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="FAIL" start="2025-10-07T22:29:56.969210" elapsed="0.001073">Variable '${TARGET_IP}' not found.</status>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T22:29:56.971080" level="FAIL">TypeError: write() argument must be str, not None</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="FAIL" start="2025-10-07T22:29:56.970541" elapsed="0.000613">TypeError: write() argument must be str, not None</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:56.971368" level="INFO">📊 Executive summary generated: results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:56.971243" elapsed="0.000259"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:56.971731" level="INFO">✅ Test-5 Storage Validation completed successfully!</msg>
<arg>✅ Test-5 Storage Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:56.971616" elapsed="0.000241"/>
</kw>
<doc>📊 Generate executive summary for storage validation results</doc>
<status status="FAIL" start="2025-10-07T22:29:56.968104" elapsed="0.003939">Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</kw>
<doc>🗄️ Storage &amp; System Validation Test Suite - Test-5
🔍 Process: Find hostname in EDS → SSH to server → Collect disk/CPU/memory data → Compare server vs EDS
✅ Pass if server resources match EDS requirements, ❌ Fail if mismatch
📊 Validates: CPU cores, RAM, disk space allocation, filesystem types, storage configuration</doc>
<status status="FAIL" start="2025-10-07T22:29:56.339001" elapsed="0.633128">Suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</suite>
<suite id="s1-s6" name="Time Configuration Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test7_time_configuration_validation\time_configuration_validation.robot">
<kw name="Initialize Time Test Environment" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:58.321451" level="INFO">🚀 Initializing Test-7: Time Configuration Validation Environment...</msg>
<arg>🚀 Initializing Test-7: Time Configuration Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:58.321291" elapsed="0.000286"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T22:29:58.321819" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test7_time_configuration_validation\data"&gt;C:\Users\write\project_2025\robot\robotframework\results\test7_time_configuration_validation\data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T22:29:58.321683" elapsed="0.000180"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-07T22:29:58.334271" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T22:29:58.334491" level="INFO">Available hostnames: ['alhxvdvitap01', 'alhxvdvitag01', 'alhxvqaitiap01', 'alhxvqaitiap02', 'alhxvqaitred01', 'alhxvqaitred02', 'alhxvqaitred03', 'alhxvqaitmdb01', 'alhxvqaitmdb02', 'alhxvqaitmdb03', 'alhxvqaitag01', 'alhxvqaitag02', 'alhxvpritiap01', 'alhxvpritiap02']</msg>
<msg time="2025-10-07T22:29:58.334632" level="FAIL">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="FAIL" start="2025-10-07T22:29:58.321941" elapsed="0.013595">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:58.335718" elapsed="0.000023"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Target Server: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:58.335817" elapsed="0.000022"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:58.335911" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔗 Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:58.335984" elapsed="0.000012"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:58.336060" elapsed="0.000012"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:58.336134" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:58.336205" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Test-7 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:58.336276" elapsed="0.000012"/>
</kw>
<doc>🏗️ Set up test environment for time configuration validation</doc>
<status status="FAIL" start="2025-10-07T22:29:58.320789" elapsed="0.015602">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<test id="s1-s6-t1" name="Critical - Connect to Target Server" line="18">
<doc>🔗 Establish direct connection to target machine via SSH</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="FAIL" start="2025-10-07T22:29:58.336476" elapsed="0.000449">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t2" name="Critical - Collect Time Configuration Data" line="31">
<doc>⏰ Execute time-related commands to gather timezone, chrony, and NTP configuration</doc>
<tag>critical</tag>
<tag>data_collection</tag>
<tag>ntp</tag>
<tag>time</tag>
<status status="FAIL" start="2025-10-07T22:29:58.337482" elapsed="0.000465">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t3" name="Critical - Validate Timezone Setting" line="49">
<doc>🌎 Validate timezone is set to Pacific/Los Angeles (America/Los_Angeles)</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>timezone</tag>
<status status="FAIL" start="2025-10-07T22:29:58.338404" elapsed="0.000374">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t4" name="Critical - Validate Chrony Service Status" line="62">
<doc>📡 Validate chrony service is active and running</doc>
<tag>chrony</tag>
<tag>critical</tag>
<tag>ntp</tag>
<tag>service</tag>
<status status="FAIL" start="2025-10-07T22:29:58.339230" elapsed="0.000324">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t5" name="Critical - Validate NTP Server Configuration" line="74">
<doc>🕐 Validate NTP server is configured to use ntpx.domain.com</doc>
<tag>configuration</tag>
<tag>critical</tag>
<tag>ntp</tag>
<tag>server</tag>
<status status="FAIL" start="2025-10-07T22:29:58.339914" elapsed="0.000341">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t6" name="Critical - Validate Time Synchronization Status" line="87">
<doc>🔄 Validate time synchronization is working and clock is synchronized</doc>
<tag>critical</tag>
<tag>ntp</tag>
<tag>synchronization</tag>
<tag>time</tag>
<status status="FAIL" start="2025-10-07T22:29:58.340620" elapsed="0.000326">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t7" name="Normal - Comprehensive Time Configuration Validation" line="100">
<doc>📊 Perform comprehensive validation of all time configuration settings</doc>
<tag>compliance</tag>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:29:58.341350" elapsed="0.000381">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t8" name="Normal - Hardware Clock Verification" line="116">
<doc>🕰️ Verify hardware clock and its synchronization with system clock</doc>
<tag>clock</tag>
<tag>hardware</tag>
<tag>normal</tag>
<tag>verification</tag>
<status status="FAIL" start="2025-10-07T22:29:58.342098" elapsed="0.000402">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t9" name="Normal - NTP Source Analysis" line="133">
<doc>📊 Analyze NTP source details and server reachability</doc>
<tag>analysis</tag>
<tag>normal</tag>
<tag>ntp</tag>
<tag>sources</tag>
<status status="FAIL" start="2025-10-07T22:29:58.342989" elapsed="0.000422">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t10" name="Normal - Clock Drift Monitoring" line="165">
<doc>📉 Monitor clock drift and synchronization accuracy</doc>
<tag>accuracy</tag>
<tag>drift</tag>
<tag>monitoring</tag>
<tag>normal</tag>
<status status="FAIL" start="2025-10-07T22:29:58.343818" elapsed="0.000299">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<kw name="Generate Time Configuration Executive Summary" owner="time_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:58.345382" level="INFO">📊 Generating Test-7 Time Configuration Executive Summary...</msg>
<arg>📊 Generating Test-7 Time Configuration Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:58.345241" elapsed="0.000257"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T22:29:58.345784" level="INFO">${timestamp} = 2025-10-07 22:29:58</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T22:29:58.345601" elapsed="0.000204"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:58.345977" level="INFO">${summary_file} = results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T22:29:58.345886" elapsed="0.000110"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:58.347072" level="INFO">${summary_content} = None</msg>
<msg time="2025-10-07T22:29:58.347098" level="FAIL">Variable '${TARGET_IP}' not found.</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>⏰ TEST-7: TIME CONFIGURATION VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${timestamp}</arg>
<arg>🎯 Target System: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>📋 Test Suite: Test-7 Time Configuration Validation</arg>
<arg>========================================</arg>
<arg>📋 EXPECTED CONFIGURATION</arg>
<arg>========================================</arg>
<arg>🌎 Timezone: Pacific/Los Angeles (America/Los_Angeles)</arg>
<arg>🕐 NTP Server: ntpx.domain.com</arg>
<arg>📡 Service: Chrony (active and running)</arg>
<arg>🔄 Synchronization: Enabled</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 Time configuration data: results/test7_time_configuration_validation/data/</arg>
<arg>📊 Robot Framework reports: results/test7_time_configuration_validation/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>📋 Time configuration validated</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="FAIL" start="2025-10-07T22:29:58.346068" elapsed="0.001054">Variable '${TARGET_IP}' not found.</status>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T22:29:58.347943" level="FAIL">TypeError: write() argument must be str, not None</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="FAIL" start="2025-10-07T22:29:58.347298" elapsed="0.000735">TypeError: write() argument must be str, not None</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:58.348305" level="INFO">📊 Executive summary generated: results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:58.348142" elapsed="0.000315"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:58.348641" level="INFO">✅ Test-7 Time Configuration Validation completed successfully!</msg>
<arg>✅ Test-7 Time Configuration Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:58.348552" elapsed="0.000179"/>
</kw>
<doc>📊 Generate executive summary for time configuration validation</doc>
<status status="FAIL" start="2025-10-07T22:29:58.345048" elapsed="0.003813">Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</kw>
<doc>⏰ Time Configuration Validation Test Suite - Test-7
🔍 Process: Find hostname in EDS → SSH to server → Collect time/NTP data → Validate timezone and NTP configuration
✅ Pass if timezone is Pacific/Los Angeles and NTP server is ntpx.domain.com with proper synchronization
📊 Validates: Timezone setting, Chrony service status, NTP server configuration, time synchronization</doc>
<status status="FAIL" start="2025-10-07T22:29:57.708764" elapsed="0.640175">Suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</suite>
<suite id="s1-s7" name="Ssh Key Authentication" source="C:\Users\write\project_2025\robot\robotframework\tests\test8_ssh_key_authentication\ssh_key_authentication.robot">
<kw name="Initialize SSH Key Test Environment" owner="ssh_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:59.248970" level="INFO">🚀 Initializing Test-8: SSH Key Authentication Validation Environment...</msg>
<arg>🚀 Initializing Test-8: SSH Key Authentication Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:59.248801" elapsed="0.000313"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T22:29:59.249421" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test8_ssh_key_authentication\data"&gt;C:\Users\write\project_2025\robot\robotframework\results\test8_ssh_key_authentication\data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T22:29:59.249245" elapsed="0.000236"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:59.249745" level="INFO">📋 Code Server: 192.168.1.100</msg>
<arg>📋 Code Server: ${CODE_SERVER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:59.249582" elapsed="0.000289"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:59.250113" level="INFO">📋 Code Server User: codeserver</msg>
<arg>📋 Code Server User: ${CODE_SERVER_USER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:59.249969" elapsed="0.000278"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:59.250523" level="INFO">🔗 Connecting to Code Server: 192.168.1.100...</msg>
<arg>🔗 Connecting to Code Server: ${CODE_SERVER_HOST}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:59.250377" elapsed="0.000286"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${CODE_SERVER_HOST}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-07T22:29:59.250789" elapsed="0.000196"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-07T22:29:59.251316" level="INFO">Logging into '192.168.1.100:22' as 'codeserver'.</msg>
<msg time="2025-10-07T22:30:02.253606" level="FAIL">TimeoutError: timed out</msg>
<arg>${CODE_SERVER_USER}</arg>
<arg>${CODE_SERVER_PASS}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="FAIL" start="2025-10-07T22:29:59.251078" elapsed="3.005169">TimeoutError: timed out</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ SSH connection to Code Server established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:02.256416" elapsed="0.000022"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<var>${whoami}</var>
<arg>whoami</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:02.256517" elapsed="0.000013"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<var>${hostname}</var>
<arg>hostname</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:02.256595" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>👤 Connected as: ${whoami}@${hostname}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:02.256667" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Test-8 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:02.256741" elapsed="0.000012"/>
</kw>
<doc>🏗️ Set up test environment for SSH key authentication validation</doc>
<status status="FAIL" start="2025-10-07T22:29:59.248288" elapsed="3.008576">TimeoutError: timed out</status>
</kw>
<test id="s1-s7-t1" name="Critical - Connect to Code Server" line="18">
<doc>🔗 Establish SSH connection to Code Server (Linux jump box)</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="FAIL" start="2025-10-07T22:30:02.256951" elapsed="0.000555">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s7-t2" name="Critical - Verify SSH Private Key Exists" line="31">
<doc>🔑 Verify SSH private key exists on Code Server with correct permissions</doc>
<tag>critical</tag>
<tag>security</tag>
<tag>ssh_key</tag>
<status status="FAIL" start="2025-10-07T22:30:02.258217" elapsed="0.000484">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s7-t3" name="Critical - Validate SSH Private Key Permissions" line="44">
<doc>🔒 Validate SSH private key has secure permissions (600)</doc>
<tag>critical</tag>
<tag>permissions</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-07T22:30:02.259108" elapsed="0.000448">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s7-t4" name="Critical - Test Passwordless SSH Authentication" line="58">
<doc>🔐 Test passwordless SSH connection from Code Server to target machine</doc>
<tag>authentication</tag>
<tag>critical</tag>
<tag>passwordless</tag>
<status status="FAIL" start="2025-10-07T22:30:02.259960" elapsed="0.000366">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s7-t5" name="Critical - Validate Authorized Keys File" line="73">
<doc>📝 Verify authorized_keys file exists on target with correct permissions</doc>
<tag>authorized_keys</tag>
<tag>critical</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-07T22:30:02.260677" elapsed="0.000369">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s7-t6" name="Critical - Validate Authorized Keys Permissions" line="86">
<doc>🔒 Validate authorized_keys file has secure permissions (600)</doc>
<tag>critical</tag>
<tag>permissions</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-07T22:30:02.261421" elapsed="0.000411">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s7-t7" name="Critical - Verify Public Key in Authorized Keys" line="100">
<doc>🔑 Verify public key is present in authorized_keys file</doc>
<tag>critical</tag>
<tag>public_key</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:30:02.262223" elapsed="0.000367">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s7-t8" name="Normal - Validate SSH Directory Permissions" line="117">
<doc>🔒 Ensure .ssh directory has correct permissions (700) on both machines</doc>
<tag>normal</tag>
<tag>permissions</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-07T22:30:02.263035" elapsed="0.000328">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s7-t9" name="Normal - Validate SSH Key Type and Strength" line="135">
<doc>🔐 Validate SSH key type and cryptographic strength</doc>
<tag>crypto</tag>
<tag>normal</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-07T22:30:02.263773" elapsed="0.000304">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s7-t10" name="Normal - Validate SSH Configuration Security" line="161">
<doc>🛡️ Validate SSH server configuration on target machine</doc>
<tag>configuration</tag>
<tag>normal</tag>
<tag>security</tag>
<status status="FAIL" start="2025-10-07T22:30:02.264528" elapsed="0.000402">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s7-t11" name="Normal - Comprehensive SSH Authentication Chain Validation" line="173">
<doc>🔗 Validate complete authentication chain from Code Server to target</doc>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:30:02.265515" elapsed="0.000406">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<kw name="Generate SSH Key Authentication Executive Summary" owner="ssh_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:02.267174" level="INFO">📊 Generating Test-8 SSH Key Authentication Executive Summary...</msg>
<arg>📊 Generating Test-8 SSH Key Authentication Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:02.267028" elapsed="0.000306"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T22:30:02.267684" level="INFO">${timestamp} = 2025-10-07 22:30:02</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T22:30:02.267452" elapsed="0.000256"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:02.267881" level="INFO">${summary_file} = results/test8_ssh_key_authentication/Test8_SSH_Key_Authentication_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test8_ssh_key_authentication/Test8_SSH_Key_Authentication_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T22:30:02.267788" elapsed="0.000111"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:30:02.268317" level="INFO">${summary_content} = ========================================
🔐 TEST-8: SSH KEY AUTHENTICATION VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:30:02
🎯 Code...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>🔐 TEST-8: SSH KEY AUTHENTICATION VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${timestamp}</arg>
<arg>🎯 Code Server (Jump Box): ${CODE_SERVER_HOST}</arg>
<arg>🎯 Target System: ${TARGET_HOST}</arg>
<arg>📋 Test Suite: Test-8 SSH Key Authentication Validation</arg>
<arg>========================================</arg>
<arg>📋 TEST OBJECTIVES</arg>
<arg>========================================</arg>
<arg>1. Connect to Code Server (Linux jump box)</arg>
<arg>2. Test passwordless SSH key authentication</arg>
<arg>3. Validate authorized_keys configuration</arg>
<arg>4. Verify SSH security permissions</arg>
<arg>5. Confirm authentication chain integrity</arg>
<arg>========================================</arg>
<arg>📋 EXPECTED CONFIGURATION</arg>
<arg>========================================</arg>
<arg>🔑 SSH Private Key: ${SSH_KEY_PATH}</arg>
<arg>🔒 Private Key Permissions: 600</arg>
<arg>📂 .ssh Directory Permissions: 700</arg>
<arg>📝 authorized_keys Permissions: 600</arg>
<arg>🔐 Authentication Method: Key-based (passwordless)</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 Authentication chain data: results/test8_ssh_key_authentication/data/</arg>
<arg>📊 Robot Framework reports: results/test8_ssh_key_authentication/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>🔐 SSH key authentication validated</arg>
<arg>🔒 Security permissions verified</arg>
<arg>🔗 Authentication chain confirmed</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:30:02.267969" elapsed="0.000374"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T22:30:02.269270" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test8_ssh_key_authentication\Test8_SSH_Key_Authentication_Executive_Summary.txt"&gt;C:\Users\write\project_2025\robot\robotframework\results\test8_ssh_key_authentication\Test8_SSH_Key_Authentication_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-07T22:30:02.268518" elapsed="0.000805"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:02.269534" level="INFO">📊 Executive summary generated: results/test8_ssh_key_authentication/Test8_SSH_Key_Authentication_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:02.269410" elapsed="0.000247"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:02.269835" level="INFO">✅ Test-8 SSH Key Authentication Validation completed successfully!</msg>
<arg>✅ Test-8 SSH Key Authentication Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:02.269749" elapsed="0.000754"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-07T22:30:02.270628" elapsed="0.000106"/>
</kw>
<doc>📊 Generate executive summary for SSH key authentication validation</doc>
<status status="PASS" start="2025-10-07T22:30:02.266806" elapsed="0.003986"/>
</kw>
<doc>🔐 SSH Key Authentication Validation Test Suite - Test-8
🔍 Process: Connect to Code Server → Test SSH key authentication → Validate authorized_keys configuration
✅ Pass if SSH key authentication works passwordlessly from Code Server to target machine
📊 Validates: SSH key authentication, authorized_keys permissions, SSH configuration</doc>
<status status="FAIL" start="2025-10-07T22:29:59.093458" elapsed="3.177367">Suite setup failed:
TimeoutError: timed out</status>
</suite>
<suite id="s1-s8" name="Datastore Configuration" source="C:\Users\write\project_2025\robot\robotframework\tests\test9_datastore_configuration\datastore_configuration.robot">
<kw name="Initialize Datastore Configuration Test Environment" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.144969" level="INFO">🚀 Initializing Datastore Configuration Test Environment...</msg>
<arg>🚀 Initializing Datastore Configuration Test Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.144816" elapsed="0.000322"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T22:30:03.145487" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\screenshots"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\screenshots&lt;/a&gt;' already exists.</msg>
<arg>${SCREENSHOT_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T22:30:03.145299" elapsed="0.000243"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.146398" level="INFO">${VCENTER_CONN} = None</msg>
<arg>${VCENTER_CONN}</arg>
<arg>${None}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:30:03.145662" elapsed="0.000769"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.147425" level="INFO">${TEST_START_TIME} = </msg>
<arg>${TEST_START_TIME}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:30:03.146513" elapsed="0.000941"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T22:30:03.147693" level="INFO">${start_time} = 2025-10-07 22:30:03</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T22:30:03.147536" elapsed="0.000176"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.147914" level="INFO">${TEST_START_TIME} = 2025-10-07 22:30:03</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:30:03.147795" elapsed="0.000145"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.148121" level="INFO">✅ Test environment initialized at 2025-10-07 22:30:03</msg>
<arg>✅ Test environment initialized at ${TEST_START_TIME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.148012" elapsed="0.000268"/>
</kw>
<doc>Initialize test environment and create necessary directories</doc>
<status status="PASS" start="2025-10-07T22:30:03.144201" elapsed="0.004156"/>
</kw>
<test id="s1-s8-t1" name="Critical - Connect to vCenter" line="18">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.149347" level="INFO">🏁 Starting: Critical - Connect to vCenter</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.149235" elapsed="0.000224"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.148996" elapsed="0.000534"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.149806" level="INFO">🔍 Establishing connection to vCenter...</msg>
<arg>🔍 Establishing connection to vCenter...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.149721" elapsed="0.000205"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.150257" level="INFO">📋 vCenter Server: vcenter.example.com</msg>
<arg>📋 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.150095" elapsed="0.000293"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.150696" level="INFO">📋 Target Host: esxi-host-01.example.com</msg>
<arg>📋 Target Host: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.150574" elapsed="0.000219"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.151077" level="INFO">📋 Cluster Environment: Production-Cluster</msg>
<arg>📋 Cluster Environment: ${CLUSTER_NAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.150947" elapsed="0.000229"/>
</kw>
<kw name="Connect To vCenter" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.151676" level="INFO">🔗 Connecting to vCenter server: vcenter.example.com</msg>
<arg>🔗 Connecting to vCenter server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.151567" elapsed="0.000240"/>
</kw>
<kw name="Vcenter Connect" owner="VCenterLibrary">
<msg time="2025-10-07T22:30:03.152080" level="INFO">${connection} = {'server': 'vcenter.example.com', 'username': 'administrator@vsphere.local', 'connected': True}</msg>
<var>${connection}</var>
<arg>${VCENTER_SERVER}</arg>
<arg>${VCENTER_USERNAME}</arg>
<arg>${VCENTER_PASSWORD}</arg>
<doc>Establish connection to vCenter server</doc>
<status status="PASS" start="2025-10-07T22:30:03.151910" elapsed="0.000189"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.152331" level="INFO">${VCENTER_CONN} = {'server': 'vcenter.example.com', 'username': 'administrator@vsphere.local', 'connected': True}</msg>
<arg>${VCENTER_CONN}</arg>
<arg>${connection}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:30:03.152185" elapsed="0.000174"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.152531" level="INFO">✅ Connected to vCenter: vcenter.example.com</msg>
<arg>✅ Connected to vCenter: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.152429" elapsed="0.000216"/>
</kw>
<return>
<value>${connection}</value>
<status status="PASS" start="2025-10-07T22:30:03.152711" elapsed="0.000060"/>
</return>
<doc>Establish connection to vCenter server</doc>
<status status="PASS" start="2025-10-07T22:30:03.151391" elapsed="0.001499"/>
</kw>
<kw name="Verify vCenter Connection" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.153368" level="INFO">🔍 Verifying vCenter connection status...</msg>
<arg>🔍 Verifying vCenter connection status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.153278" elapsed="0.000203"/>
</kw>
<kw name="Vcenter Verify Connection" owner="VCenterLibrary">
<msg time="2025-10-07T22:30:03.153776" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>${VCENTER_CONN}</arg>
<doc>Verify vCenter connection is active</doc>
<status status="PASS" start="2025-10-07T22:30:03.153615" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.154058" level="INFO">✅ vCenter connection verified: True</msg>
<arg>✅ vCenter connection verified: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.153911" elapsed="0.000443"/>
</kw>
<return>
<value>${status}</value>
<status status="PASS" start="2025-10-07T22:30:03.154409" elapsed="0.000037"/>
</return>
<msg time="2025-10-07T22:30:03.154570" level="INFO">${connection_status} = True</msg>
<var>${connection_status}</var>
<doc>Verify vCenter connection is active</doc>
<status status="PASS" start="2025-10-07T22:30:03.153096" elapsed="0.001496"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>msg=Failed to establish vCenter connection</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:30:03.154739" elapsed="0.000138"/>
</kw>
<kw name="Locate Target Host In Cluster" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.155402" level="INFO">🔍 Locating target host esxi-host-01.example.com in cluster Production-Cluster...</msg>
<arg>🔍 Locating target host ${VCENTER_HOST} in cluster ${CLUSTER_NAME}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.155268" elapsed="0.000250"/>
</kw>
<kw name="Vcenter Find Host In Cluster" owner="VCenterLibrary">
<msg time="2025-10-07T22:30:03.155803" level="INFO">${found} = True</msg>
<var>${found}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${CLUSTER_NAME}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Locate ESXi host within a cluster</doc>
<status status="PASS" start="2025-10-07T22:30:03.155632" elapsed="0.000193"/>
</kw>
<if>
<branch type="IF" condition="${found}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.156120" level="INFO">✅ Target host located: esxi-host-01.example.com</msg>
<arg>✅ Target host located: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.156009" elapsed="0.000217"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.155904" elapsed="0.000356"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Target host not found: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.156361" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.156284" elapsed="0.000117"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.155884" elapsed="0.000533"/>
</if>
<return>
<value>${found}</value>
<status status="PASS" start="2025-10-07T22:30:03.156445" elapsed="0.000021"/>
</return>
<msg time="2025-10-07T22:30:03.156552" level="INFO">${host_found} = True</msg>
<var>${host_found}</var>
<doc>Locate target ESXi host within the cluster</doc>
<status status="PASS" start="2025-10-07T22:30:03.155109" elapsed="0.001460"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${host_found}</arg>
<arg>msg=Target host ${VCENTER_HOST} not found in cluster ${CLUSTER_NAME}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:30:03.156778" elapsed="0.000180"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.157159" level="INFO">✅ vCenter connection established and target host located</msg>
<arg>✅ vCenter connection established and target host located</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.157081" elapsed="0.000188"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.158056" level="INFO">✅ Completed: Critical - Connect to vCenter - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.157936" elapsed="0.000221"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.157788" elapsed="0.000404"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.158300" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.158223" elapsed="0.000114"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.157770" elapsed="0.000583"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.157558" elapsed="0.000830"/>
</kw>
<doc>🔗 Establish connection to VMware vCenter and locate target host</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>vcenter</tag>
<status status="PASS" start="2025-10-07T22:30:03.148454" elapsed="0.010030"/>
</test>
<test id="s1-s8-t2" name="Critical - Collect VM Assignments to Datastores" line="40">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.159846" level="INFO">🏁 Starting: Critical - Collect VM Assignments to Datastores</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.159714" elapsed="0.000271"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.159466" elapsed="0.000569"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.160264" level="INFO">🔍 Collecting VM assignments to datastores...</msg>
<arg>🔍 Collecting VM assignments to datastores...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.160179" elapsed="0.000183"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.160622" level="INFO">📋 Target Host: esxi-host-01.example.com</msg>
<arg>📋 Target Host: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.160510" elapsed="0.000360"/>
</kw>
<kw name="Collect VM Datastore Assignments" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.161344" level="INFO">📊 Collecting VM datastore assignments for host: esxi-host-01.example.com...</msg>
<arg>📊 Collecting VM datastore assignments for host: ${VCENTER_HOST}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.161240" elapsed="0.000226"/>
</kw>
<kw name="Vcenter Get Vm Datastore Assignments" owner="VCenterLibrary">
<msg time="2025-10-07T22:30:03.161751" level="INFO">${assignments} = [{'vm_name': 'web-server-01', 'datastore': 'datastore-ssd-01', 'app_type': 'web'}, {'vm_name': 'database-server-01', 'datastore': 'datastore-nvme-01', 'app_type': 'database'}]</msg>
<var>${assignments}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get VM to datastore assignments for a host</doc>
<status status="PASS" start="2025-10-07T22:30:03.161580" elapsed="0.000197"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.161962" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T22:30:03.162015" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${assignments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.161879" elapsed="0.000152"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.162207" level="INFO">📊 Collected 2 VM assignments</msg>
<arg>📊 Collected ${count} VM assignments</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.162105" elapsed="0.000312"/>
</kw>
<return>
<value>${assignments}</value>
<status status="PASS" start="2025-10-07T22:30:03.162474" elapsed="0.000037"/>
</return>
<msg time="2025-10-07T22:30:03.162641" level="INFO">${vm_assignments} = [{'vm_name': 'web-server-01', 'datastore': 'datastore-ssd-01', 'app_type': 'web'}, {'vm_name': 'database-server-01', 'datastore': 'datastore-nvme-01', 'app_type': 'database'}]</msg>
<var>${vm_assignments}</var>
<doc>Collect all VM to datastore assignments for the target host</doc>
<status status="PASS" start="2025-10-07T22:30:03.161079" elapsed="0.001588"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.163036" level="INFO">${VM_ASSIGNMENTS} = [{'vm_name': 'web-server-01', 'datastore': 'datastore-ssd-01', 'app_type': 'web'}, {'vm_name': 'database-server-01', 'datastore': 'datastore-nvme-01', 'app_type': 'database'}]</msg>
<arg>${VM_ASSIGNMENTS}</arg>
<arg>${vm_assignments}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:30:03.162836" elapsed="0.000242"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.163423" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T22:30:03.163509" level="INFO">${vm_count} = 2</msg>
<var>${vm_count}</var>
<arg>${vm_assignments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.163266" elapsed="0.000266"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${vm_count} &gt; 0</arg>
<arg>msg=No VMs found on target host</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:30:03.163737" elapsed="0.000248"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.164267" level="INFO">📊 VM assignments collected: 2 VMs found</msg>
<arg>📊 VM assignments collected: ${vm_count} VMs found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.164144" elapsed="0.000230"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.164615" level="INFO">✅ VM datastore assignments collection complete</msg>
<arg>✅ VM datastore assignments collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.164529" elapsed="0.000194"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.165573" level="INFO">✅ Completed: Critical - Collect VM Assignments to Datastores - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.165452" elapsed="0.000239"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.165311" elapsed="0.000425"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.165868" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.165776" elapsed="0.000141"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.165293" elapsed="0.000643"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.165085" elapsed="0.000895"/>
</kw>
<doc>📊 Gather all VM to datastore assignments for the target host</doc>
<tag>collection</tag>
<tag>critical</tag>
<tag>datastore</tag>
<tag>vm_assignments</tag>
<status status="PASS" start="2025-10-07T22:30:03.158849" elapsed="0.007246"/>
</test>
<test id="s1-s8-t3" name="Critical - Collect Available Datastore Capacity" line="57">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.167232" level="INFO">🏁 Starting: Critical - Collect Available Datastore Capacity</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.167127" elapsed="0.000208"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.166940" elapsed="0.000451"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.167618" level="INFO">🔍 Collecting datastore capacity information...</msg>
<arg>🔍 Collecting datastore capacity information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.167535" elapsed="0.000178"/>
</kw>
<kw name="Collect Datastore Capacity" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.168219" level="INFO">📊 Collecting datastore capacity information...</msg>
<arg>📊 Collecting datastore capacity information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.168122" elapsed="0.000192"/>
</kw>
<kw name="Vcenter Get Datastore Capacity" owner="VCenterLibrary">
<msg time="2025-10-07T22:30:03.168586" level="INFO">${capacity} = [{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}, {'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}]</msg>
<var>${capacity}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get capacity information for datastores on a host</doc>
<status status="PASS" start="2025-10-07T22:30:03.168415" elapsed="0.000193"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.168786" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T22:30:03.168844" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${capacity}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.168697" elapsed="0.000166"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.169041" level="INFO">📊 Collected capacity data for 2 datastores</msg>
<arg>📊 Collected capacity data for ${count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.168940" elapsed="0.000202"/>
</kw>
<return>
<value>${capacity}</value>
<status status="PASS" start="2025-10-07T22:30:03.169202" elapsed="0.000035"/>
</return>
<msg time="2025-10-07T22:30:03.169355" level="INFO">${capacity_data} = [{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}, {'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}]</msg>
<var>${capacity_data}</var>
<doc>Collect capacity information for all datastores on target host</doc>
<status status="PASS" start="2025-10-07T22:30:03.167920" elapsed="0.001458"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.169668" level="INFO">${CAPACITY_DATA} = [{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}, {'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}]</msg>
<arg>${CAPACITY_DATA}</arg>
<arg>${capacity_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:30:03.169530" elapsed="0.000180"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.169917" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T22:30:03.170029" level="INFO">${datastore_count} = 2</msg>
<var>${datastore_count}</var>
<arg>${capacity_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.169841" elapsed="0.000204"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${datastore_count} &gt; 0</arg>
<arg>msg=No datastores found on target host</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:30:03.170173" elapsed="0.000148"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.170893" level="INFO">📊 Capacity data collected for 2 datastores</msg>
<arg>📊 Capacity data collected for ${datastore_count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.170450" elapsed="0.000549"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.172824" level="INFO">📊 Datastore: datastore-ssd-01 - Total: 1000GB, Free: 300GB, Used: 70%</msg>
<arg>📊 Datastore: ${ds['name']} - Total: ${ds['total_gb']}GB, Free: ${ds['free_gb']}GB, Used: ${ds['used_percent']}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.171318" elapsed="0.001630"/>
</kw>
<var name="${ds}">{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}</var>
<status status="PASS" start="2025-10-07T22:30:03.171253" elapsed="0.001740"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.174823" level="INFO">📊 Datastore: datastore-nvme-01 - Total: 2000GB, Free: 800GB, Used: 60%</msg>
<arg>📊 Datastore: ${ds['name']} - Total: ${ds['total_gb']}GB, Free: ${ds['free_gb']}GB, Used: ${ds['used_percent']}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.173170" elapsed="0.001748"/>
</kw>
<var name="${ds}">{'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}</var>
<status status="PASS" start="2025-10-07T22:30:03.173089" elapsed="0.001862"/>
</iter>
<var>${ds}</var>
<value>@{capacity_data}</value>
<status status="PASS" start="2025-10-07T22:30:03.171122" elapsed="0.003856"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.175280" level="INFO">✅ Datastore capacity collection complete</msg>
<arg>✅ Datastore capacity collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.175157" elapsed="0.000244"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.176329" level="INFO">✅ Completed: Critical - Collect Available Datastore Capacity - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.176206" elapsed="0.000233"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.176074" elapsed="0.000400"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.176570" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.176495" elapsed="0.000114"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.176058" elapsed="0.000566"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.175814" elapsed="0.000848"/>
</kw>
<doc>💾 Gather available capacity for all datastores on target host</doc>
<tag>capacity</tag>
<tag>collection</tag>
<tag>critical</tag>
<tag>datastore</tag>
<status status="PASS" start="2025-10-07T22:30:03.166472" elapsed="0.010277"/>
</test>
<test id="s1-s8-t4" name="Critical - Collect Performance Tier Information" line="77">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.177893" level="INFO">🏁 Starting: Critical - Collect Performance Tier Information</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.177764" elapsed="0.000282"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.177540" elapsed="0.000574"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.178418" level="INFO">🔍 Collecting datastore performance tier information...</msg>
<arg>🔍 Collecting datastore performance tier information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.178309" elapsed="0.000244"/>
</kw>
<kw name="Collect Datastore Performance Tiers" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.179005" level="INFO">📊 Collecting datastore performance tier information...</msg>
<arg>📊 Collecting datastore performance tier information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.178926" elapsed="0.000184"/>
</kw>
<kw name="Vcenter Get Datastore Performance Tiers" owner="VCenterLibrary">
<msg time="2025-10-07T22:30:03.179465" level="INFO">${tiers} = [{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}, {'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}]</msg>
<var>${tiers}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get performance tier classification for datastores</doc>
<status status="PASS" start="2025-10-07T22:30:03.179240" elapsed="0.000259"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.179759" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T22:30:03.179838" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${tiers}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.179632" elapsed="0.000234"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.180120" level="INFO">📊 Collected performance tier data for 2 datastores</msg>
<arg>📊 Collected performance tier data for ${count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.179992" elapsed="0.000261"/>
</kw>
<return>
<value>${tiers}</value>
<status status="PASS" start="2025-10-07T22:30:03.180324" elapsed="0.000045"/>
</return>
<msg time="2025-10-07T22:30:03.180535" level="INFO">${performance_tiers} = [{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}, {'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}]</msg>
<var>${performance_tiers}</var>
<doc>Collect performance tier classification for datastores</doc>
<status status="PASS" start="2025-10-07T22:30:03.178767" elapsed="0.001797"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.180904" level="INFO">${PERFORMANCE_TIERS} = [{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}, {'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}]</msg>
<arg>${PERFORMANCE_TIERS}</arg>
<arg>${performance_tiers}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:30:03.180758" elapsed="0.000175"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.181352" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T22:30:03.181413" level="INFO">${tier_count} = 2</msg>
<var>${tier_count}</var>
<arg>${performance_tiers}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.181264" elapsed="0.000166"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${tier_count} &gt; 0</arg>
<arg>msg=No performance tier information available</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:30:03.181566" elapsed="0.000180"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.181988" level="INFO">📊 Performance tier data collected for 2 datastores</msg>
<arg>📊 Performance tier data collected for ${tier_count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.181874" elapsed="0.000224"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.183726" level="INFO">📊 Datastore: datastore-ssd-01 - Tier: STANDARD_PERFORMANCE - Type: SSD</msg>
<arg>📊 Datastore: ${tier['name']} - Tier: ${tier['performance_tier']} - Type: ${tier['storage_type']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.182421" elapsed="0.001430"/>
</kw>
<var name="${tier}">{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}</var>
<status status="PASS" start="2025-10-07T22:30:03.182357" elapsed="0.001542"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.185420" level="INFO">📊 Datastore: datastore-nvme-01 - Tier: HIGH_PERFORMANCE - Type: NVMe</msg>
<arg>📊 Datastore: ${tier['name']} - Tier: ${tier['performance_tier']} - Type: ${tier['storage_type']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.184069" elapsed="0.001459"/>
</kw>
<var name="${tier}">{'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}</var>
<status status="PASS" start="2025-10-07T22:30:03.183989" elapsed="0.001576"/>
</iter>
<var>${tier}</var>
<value>@{performance_tiers}</value>
<status status="PASS" start="2025-10-07T22:30:03.182224" elapsed="0.003368"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.185832" level="INFO">✅ Performance tier collection complete</msg>
<arg>✅ Performance tier collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.185746" elapsed="0.000196"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.187067" level="INFO">✅ Completed: Critical - Collect Performance Tier Information - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.186923" elapsed="0.000269"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.186732" elapsed="0.000503"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.187358" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.187265" elapsed="0.000144"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.186709" elapsed="0.000720"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.186406" elapsed="0.001067"/>
</kw>
<doc>⚡ Gather performance tier classification for all datastores</doc>
<tag>critical</tag>
<tag>datastore</tag>
<tag>performance</tag>
<tag>tiers</tag>
<status status="PASS" start="2025-10-07T22:30:03.177092" elapsed="0.010479"/>
</test>
<test id="s1-s8-t5" name="Critical - Collect Subscription Level Information" line="97">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.188708" level="INFO">🏁 Starting: Critical - Collect Subscription Level Information</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.188585" elapsed="0.000241"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.188362" elapsed="0.000528"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.189187" level="INFO">🔍 Collecting datastore subscription level information...</msg>
<arg>🔍 Collecting datastore subscription level information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.189086" elapsed="0.000203"/>
</kw>
<kw name="Collect Datastore Subscription Levels" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.189718" level="INFO">📊 Collecting datastore subscription level information...</msg>
<arg>📊 Collecting datastore subscription level information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.189638" elapsed="0.000180"/>
</kw>
<kw name="Vcenter Get Datastore Subscription Levels" owner="VCenterLibrary">
<msg time="2025-10-07T22:30:03.190052" level="INFO">${subscription} = [{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}, {'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}]</msg>
<var>${subscription}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get subscription levels and oversubscription ratios for datastores</doc>
<status status="PASS" start="2025-10-07T22:30:03.189920" elapsed="0.000151"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.190221" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T22:30:03.190266" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${subscription}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.190150" elapsed="0.000131"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.190479" level="INFO">📊 Collected subscription data for 2 datastores</msg>
<arg>📊 Collected subscription data for ${count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.190365" elapsed="0.000208"/>
</kw>
<return>
<value>${subscription}</value>
<status status="PASS" start="2025-10-07T22:30:03.190613" elapsed="0.000029"/>
</return>
<msg time="2025-10-07T22:30:03.190735" level="INFO">${subscription_data} = [{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}, {'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}]</msg>
<var>${subscription_data}</var>
<doc>Collect subscription levels and oversubscription ratios</doc>
<status status="PASS" start="2025-10-07T22:30:03.189482" elapsed="0.001270"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.191045" level="INFO">${SUBSCRIPTION_DATA} = [{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}, {'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}]</msg>
<arg>${SUBSCRIPTION_DATA}</arg>
<arg>${subscription_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:30:03.190915" elapsed="0.000219"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.191344" level="INFO">Length is 2.</msg>
<msg time="2025-10-07T22:30:03.191391" level="INFO">${sub_count} = 2</msg>
<var>${sub_count}</var>
<arg>${subscription_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.191269" elapsed="0.000137"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${sub_count} &gt; 0</arg>
<arg>msg=No subscription level information available</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:30:03.191565" elapsed="0.000194"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.192034" level="INFO">📊 Subscription data collected for 2 datastores</msg>
<arg>📊 Subscription data collected for ${sub_count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.191925" elapsed="0.000211"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.193559" level="INFO">📊 Datastore: datastore-ssd-01 - Provisioned: 1500GB, Ratio: 1.5:1</msg>
<arg>📊 Datastore: ${sub['name']} - Provisioned: ${sub['provisioned_gb']}GB, Ratio: ${sub['subscription_ratio']}:1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.192432" elapsed="0.001235"/>
</kw>
<var name="${sub}">{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}</var>
<status status="PASS" start="2025-10-07T22:30:03.192368" elapsed="0.001343"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.195190" level="INFO">📊 Datastore: datastore-nvme-01 - Provisioned: 3000GB, Ratio: 1.5:1</msg>
<arg>📊 Datastore: ${sub['name']} - Provisioned: ${sub['provisioned_gb']}GB, Ratio: ${sub['subscription_ratio']}:1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.193872" elapsed="0.001442"/>
</kw>
<var name="${sub}">{'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}</var>
<status status="PASS" start="2025-10-07T22:30:03.193796" elapsed="0.001557"/>
</iter>
<var>${sub}</var>
<value>@{subscription_data}</value>
<status status="PASS" start="2025-10-07T22:30:03.192255" elapsed="0.003128"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.195701" level="INFO">✅ Subscription level collection complete</msg>
<arg>✅ Subscription level collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.195591" elapsed="0.000224"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.196945" level="INFO">✅ Completed: Critical - Collect Subscription Level Information - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.196786" elapsed="0.000307"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.196559" elapsed="0.000588"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.197287" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.197181" elapsed="0.000156"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.196525" elapsed="0.000832"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.196243" elapsed="0.001167"/>
</kw>
<doc>📈 Gather subscription levels and oversubscription ratios</doc>
<tag>capacity_planning</tag>
<tag>critical</tag>
<tag>datastore</tag>
<tag>subscription</tag>
<status status="PASS" start="2025-10-07T22:30:03.187896" elapsed="0.009636"/>
</test>
<test id="s1-s8-t6" name="Critical - Capture Host Configuration Screenshot" line="117">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.198847" level="INFO">🏁 Starting: Critical - Capture Host Configuration Screenshot</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.198692" elapsed="0.000272"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.198441" elapsed="0.000578"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.199301" level="INFO">🔍 Capturing host configuration screenshot...</msg>
<arg>🔍 Capturing host configuration screenshot...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.199196" elapsed="0.000209"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.199648" level="INFO">📋 Screenshot will include: Datastores, VM assignments, Capacity, Performance status</msg>
<arg>📋 Screenshot will include: Datastores, VM assignments, Capacity, Performance status</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.199564" elapsed="0.000187"/>
</kw>
<kw name="Capture Host Configuration Screenshot" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.200219" level="INFO">📸 Capturing host configuration screenshot...</msg>
<arg>📸 Capturing host configuration screenshot...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.200138" elapsed="0.000188"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T22:30:03.200574" level="INFO">${timestamp} = 20251007_223003</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T22:30:03.200421" elapsed="0.000171"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.200808" level="INFO">${screenshot_file} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251007_223003.PNG</msg>
<var>${screenshot_file}</var>
<arg>${SCREENSHOT_DIR}/host_config_${timestamp}.${SCREENSHOT_FORMAT}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T22:30:03.200672" elapsed="0.000153"/>
</kw>
<kw name="Vcenter Capture Host Screenshot" owner="VCenterLibrary">
<msg time="2025-10-07T22:30:03.201881" level="INFO">${path} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251007_223003.PNG</msg>
<var>${path}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<arg>${screenshot_file}</arg>
<doc>Capture screenshot of host configuration</doc>
<status status="PASS" start="2025-10-07T22:30:03.200897" elapsed="0.001006"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.202104" level="INFO">📸 Screenshot captured: C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251007_223003.PNG</msg>
<arg>📸 Screenshot captured: ${path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.201994" elapsed="0.000231"/>
</kw>
<return>
<value>${path}</value>
<status status="PASS" start="2025-10-07T22:30:03.202374" elapsed="0.000042"/>
</return>
<msg time="2025-10-07T22:30:03.202571" level="INFO">${screenshot_path} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251007_223003.PNG</msg>
<var>${screenshot_path}</var>
<doc>Capture screenshot of host configuration and status</doc>
<status status="PASS" start="2025-10-07T22:30:03.199979" elapsed="0.002618"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.202902" level="INFO">${SCREENSHOT_PATH} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251007_223003.PNG</msg>
<arg>${SCREENSHOT_PATH}</arg>
<arg>${screenshot_path}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:30:03.202769" elapsed="0.000161"/>
</kw>
<kw name="File Should Exist" owner="OperatingSystem">
<msg time="2025-10-07T22:30:03.203249" level="INFO" html="true">File '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\screenshots\host_config_20251007_223003.PNG"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\screenshots\host_config_20251007_223003.PNG&lt;/a&gt;' exists.</msg>
<arg>${screenshot_path}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<status status="PASS" start="2025-10-07T22:30:03.203089" elapsed="0.000203"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.203535" level="INFO">📸 Screenshot saved: C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251007_223003.PNG</msg>
<arg>📸 Screenshot saved: ${screenshot_path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.203421" elapsed="0.000227"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.203872" level="INFO">✅ Host configuration screenshot captured</msg>
<arg>✅ Host configuration screenshot captured</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.203784" elapsed="0.000178"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.204778" level="INFO">✅ Completed: Critical - Capture Host Configuration Screenshot - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.204649" elapsed="0.000239"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.204487" elapsed="0.000449"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.205041" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.204962" elapsed="0.000123"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.204468" elapsed="0.000633"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.204245" elapsed="0.000896"/>
</kw>
<doc>📸 Capture screenshot of host configuration and status parameters</doc>
<tag>critical</tag>
<tag>documentation</tag>
<tag>host_status</tag>
<tag>screenshot</tag>
<status status="PASS" start="2025-10-07T22:30:03.197932" elapsed="0.007400"/>
</test>
<test id="s1-s8-t7" name="Critical - Validate VM Datastore Placement" line="133">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.206291" level="INFO">🏁 Starting: Critical - Validate VM Datastore Placement</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.206190" elapsed="0.000195"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.205995" elapsed="0.000437"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.206716" level="INFO">🔍 Validating VM datastore placement against cluster standards...</msg>
<arg>🔍 Validating VM datastore placement against cluster standards...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.206608" elapsed="0.000213"/>
</kw>
<kw name="Validate VM Datastore Placement" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.207265" level="INFO">✅ Validating VM datastore placement...</msg>
<arg>✅ Validating VM datastore placement...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.207190" elapsed="0.000165"/>
</kw>
<kw name="Datastore Validator Validate Vm Placement" owner="DatastoreValidator">
<msg time="2025-10-07T22:30:03.207594" level="INFO">${results} = {'violations': [], 'total_vms': 2, 'cluster': 'Production-Cluster'}</msg>
<var>${results}</var>
<arg>${vm_assignments}</arg>
<arg>${CLUSTER_NAME}</arg>
<doc>Validate VM datastore placement against cluster standards</doc>
<status status="PASS" start="2025-10-07T22:30:03.207451" elapsed="0.000162"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:30:03.207805" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:30:03.207694" elapsed="0.000128"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.207988" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:30:03.208036" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.207916" elapsed="0.000136"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.208226" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.208125" elapsed="0.000199"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T22:30:03.208381" elapsed="0.000035"/>
</return>
<msg time="2025-10-07T22:30:03.208549" level="INFO">${placement_results} = {'violations': [], 'total_vms': 2, 'cluster': 'Production-Cluster'}</msg>
<var>${placement_results}</var>
<arg>${VM_ASSIGNMENTS}</arg>
<doc>Validate VM datastore assignments against cluster standards</doc>
<status status="PASS" start="2025-10-07T22:30:03.207009" elapsed="0.001562"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:30:03.208913" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${placement_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:30:03.208745" elapsed="0.000192"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.209208" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:30:03.209273" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.209108" elapsed="0.000239"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.209651" level="INFO">📊 Placement validation results: 0 violations found</msg>
<arg>📊 Placement validation results: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.209515" elapsed="0.000265"/>
</kw>
<if>
<branch type="IF" condition="${violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.210167" elapsed="0.000014"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T22:30:03.210102" elapsed="0.000107"/>
</iter>
<var>${violation}</var>
<value>@{violations}</value>
<status status="NOT RUN" start="2025-10-07T22:30:03.210054" elapsed="0.000175"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>VM datastore placement has ${violation_count} violations</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.210295" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.209938" elapsed="0.000391"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.209915" elapsed="0.000431"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.210559" level="INFO">✅ VM datastore placement validated: All VMs comply with cluster standards</msg>
<arg>✅ VM datastore placement validated: All VMs comply with cluster standards</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.210473" elapsed="0.000331"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.211610" level="INFO">✅ Completed: Critical - Validate VM Datastore Placement - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.211485" elapsed="0.000234"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.211340" elapsed="0.000415"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.211856" elapsed="0.000021"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.211776" elapsed="0.000129"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.211325" elapsed="0.000596"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.211122" elapsed="0.000838"/>
</kw>
<doc>✅ Compare VM datastore assignments against cluster standards</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>validation</tag>
<tag>vm_placement</tag>
<status status="PASS" start="2025-10-07T22:30:03.205641" elapsed="0.006490"/>
</test>
<test id="s1-s8-t8" name="Critical - Validate Available Capacity" line="157">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.217789" level="INFO">🏁 Starting: Critical - Validate Available Capacity</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.217565" elapsed="0.000466"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.213007" elapsed="0.005113"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.218418" level="INFO">🔍 Validating datastore available capacity...</msg>
<arg>🔍 Validating datastore available capacity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.218316" elapsed="0.000211"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.218795" level="INFO">📋 Minimum required free capacity: 20%</msg>
<arg>📋 Minimum required free capacity: ${MIN_FREE_CAPACITY_PERCENT}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.218677" elapsed="0.000237"/>
</kw>
<kw name="Validate Datastore Capacity" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.219433" level="INFO">✅ Validating datastore capacity...</msg>
<arg>✅ Validating datastore capacity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.219357" elapsed="0.000179"/>
</kw>
<kw name="Datastore Validator Validate Capacity" owner="DatastoreValidator">
<msg time="2025-10-07T22:30:03.219806" level="FAIL">TypeError: '&lt;' not supported between instances of 'float' and 'str'</msg>
<var>${results}</var>
<arg>${capacity_data}</arg>
<arg>${MIN_FREE_CAPACITY_PERCENT}</arg>
<doc>Validate datastores have sufficient available capacity</doc>
<status status="FAIL" start="2025-10-07T22:30:03.219626" elapsed="0.000952">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${warnings}</var>
<arg>${results}</arg>
<arg>warnings</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.220690" elapsed="0.000015"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${warning_count}</var>
<arg>${warnings}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.220782" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${warning_count} warnings found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.220868" elapsed="0.000011"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T22:30:03.220915" elapsed="0.000015"/>
</return>
<var>${capacity_results}</var>
<arg>${CAPACITY_DATA}</arg>
<doc>Validate datastores have sufficient available capacity</doc>
<status status="FAIL" start="2025-10-07T22:30:03.219160" elapsed="0.001870">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${warnings}</var>
<arg>${capacity_results}</arg>
<arg>warnings</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.221228" elapsed="0.000028"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${warning_count}</var>
<arg>${warnings}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.221407" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Capacity validation results: ${warning_count} warnings found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.221547" elapsed="0.000015"/>
</kw>
<if>
<branch type="IF" condition="${warning_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Warning: Datastore ${warning['name']} - Free: ${warning['free_percent']}% (Below threshold: ${MIN_FREE_CAPACITY_PERCENT}%)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.221877" elapsed="0.000013"/>
</kw>
<var name="${warning}"/>
<status status="NOT RUN" start="2025-10-07T22:30:03.221814" elapsed="0.000103"/>
</iter>
<var>${warning}</var>
<value>@{warnings}</value>
<status status="NOT RUN" start="2025-10-07T22:30:03.221716" elapsed="0.000221"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Datastore capacity validation failed: ${warning_count} datastores below minimum threshold</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.222001" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.221672" elapsed="0.000361"/>
</branch>
<status status="NOT RUN" start="2025-10-07T22:30:03.221653" elapsed="0.000397"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Available capacity validated: All datastores meet minimum requirements</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.222161" elapsed="0.000014"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.222868" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.222737" elapsed="0.000172"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.223126" level="INFO">❌ Completed: Critical - Validate Available Capacity - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.222996" elapsed="0.000257"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.222926" elapsed="0.000377"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.222724" elapsed="0.000606"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.222518" elapsed="0.000865"/>
</kw>
<doc>✅ Validate datastores have sufficient available capacity</doc>
<tag>capacity</tag>
<tag>critical</tag>
<tag>storage</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:30:03.212519" elapsed="0.010968">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</test>
<test id="s1-s8-t9" name="Critical - Validate Performance Tier Assignment" line="182">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.224889" level="INFO">🏁 Starting: Critical - Validate Performance Tier Assignment</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.224731" elapsed="0.000287"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.224457" elapsed="0.000638"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.225373" level="INFO">🔍 Validating performance tier assignments...</msg>
<arg>🔍 Validating performance tier assignments...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.225267" elapsed="0.000213"/>
</kw>
<kw name="Validate Performance Tier Assignment" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.226034" level="INFO">✅ Validating performance tier assignments...</msg>
<arg>✅ Validating performance tier assignments...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.225946" elapsed="0.000180"/>
</kw>
<kw name="Datastore Validator Validate Performance Tiers" owner="DatastoreValidator">
<msg time="2025-10-07T22:30:03.226420" level="INFO">${results} = {'mismatches': [], 'total_vms': 2}</msg>
<var>${results}</var>
<arg>${vm_assignments}</arg>
<arg>${performance_tiers}</arg>
<arg>${VM_APP_CATEGORIES}</arg>
<doc>Validate VMs are on appropriate performance tiers</doc>
<status status="PASS" start="2025-10-07T22:30:03.226237" elapsed="0.000204"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:30:03.226662" level="INFO">${mismatches} = []</msg>
<var>${mismatches}</var>
<arg>${results}</arg>
<arg>mismatches</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:30:03.226534" elapsed="0.000147"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.226850" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:30:03.226902" level="INFO">${mismatch_count} = 0</msg>
<var>${mismatch_count}</var>
<arg>${mismatches}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.226770" elapsed="0.000150"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.227103" level="INFO">📊 Validation complete: 0 mismatches found</msg>
<arg>📊 Validation complete: ${mismatch_count} mismatches found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.227001" elapsed="0.000197"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T22:30:03.227240" elapsed="0.000030"/>
</return>
<msg time="2025-10-07T22:30:03.227364" level="INFO">${tier_results} = {'mismatches': [], 'total_vms': 2}</msg>
<var>${tier_results}</var>
<arg>${VM_ASSIGNMENTS}</arg>
<arg>${PERFORMANCE_TIERS}</arg>
<doc>Validate VMs are on appropriate performance tiers</doc>
<status status="PASS" start="2025-10-07T22:30:03.225690" elapsed="0.001689"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:30:03.227828" level="INFO">${mismatches} = []</msg>
<var>${mismatches}</var>
<arg>${tier_results}</arg>
<arg>mismatches</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:30:03.227622" elapsed="0.000238"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.228147" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:30:03.228220" level="INFO">${mismatch_count} = 0</msg>
<var>${mismatch_count}</var>
<arg>${mismatches}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.228048" elapsed="0.000194"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.228582" level="INFO">📊 Performance tier validation results: 0 mismatches found</msg>
<arg>📊 Performance tier validation results: ${mismatch_count} mismatches found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.228417" elapsed="0.000278"/>
</kw>
<if>
<branch type="IF" condition="${mismatch_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Mismatch: VM ${mismatch['vm_name']} - Current tier: ${mismatch['current_tier']}, Required: ${mismatch['required_tier']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.229245" elapsed="0.000025"/>
</kw>
<var name="${mismatch}"/>
<status status="NOT RUN" start="2025-10-07T22:30:03.229133" elapsed="0.000186"/>
</iter>
<var>${mismatch}</var>
<value>@{mismatches}</value>
<status status="NOT RUN" start="2025-10-07T22:30:03.229055" elapsed="0.000390"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Performance tier validation failed: ${mismatch_count} VMs on incorrect storage tier</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.229571" elapsed="0.000024"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.228858" elapsed="0.000777"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.228831" elapsed="0.000849"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.230206" level="INFO">✅ Performance tier validated: All VMs on appropriate storage tiers</msg>
<arg>✅ Performance tier validated: All VMs on appropriate storage tiers</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.229950" elapsed="0.000482"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.231748" level="INFO">✅ Completed: Critical - Validate Performance Tier Assignment - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.231547" elapsed="0.000368"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.231295" elapsed="0.000670"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.232072" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.231992" elapsed="0.000121"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.231269" elapsed="0.000859"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.230927" elapsed="0.001241"/>
</kw>
<doc>✅ Validate VMs are assigned to appropriate performance tiers</doc>
<tag>application_requirements</tag>
<tag>critical</tag>
<tag>performance</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-07T22:30:03.223924" elapsed="0.008395"/>
</test>
<test id="s1-s8-t10" name="Critical - Validate Subscription Ratios" line="206">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.233658" level="INFO">🏁 Starting: Critical - Validate Subscription Ratios</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.233536" elapsed="0.000232"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.233323" elapsed="0.000502"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.234192" level="INFO">🔍 Validating datastore subscription ratios...</msg>
<arg>🔍 Validating datastore subscription ratios...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.234030" elapsed="0.000285"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.234612" level="INFO">📋 Maximum allowed subscription ratio: 2.0:1</msg>
<arg>📋 Maximum allowed subscription ratio: ${MAX_SUBSCRIPTION_RATIO}:1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.234479" elapsed="0.000243"/>
</kw>
<kw name="Validate Subscription Ratios" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.235242" level="INFO">✅ Validating subscription ratios...</msg>
<arg>✅ Validating subscription ratios...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.235152" elapsed="0.000177"/>
</kw>
<kw name="Datastore Validator Validate Subscription" owner="DatastoreValidator">
<msg time="2025-10-07T22:30:03.235574" level="FAIL">TypeError: '&gt;' not supported between instances of 'float' and 'str'</msg>
<var>${results}</var>
<arg>${subscription_data}</arg>
<arg>${MAX_SUBSCRIPTION_RATIO}</arg>
<doc>Validate datastore subscription ratios</doc>
<status status="FAIL" start="2025-10-07T22:30:03.235421" elapsed="0.000532">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${oversubscribed}</var>
<arg>${results}</arg>
<arg>oversubscribed</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.236058" elapsed="0.000015"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${oversub_count}</var>
<arg>${oversubscribed}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.236155" elapsed="0.000014"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${oversub_count} oversubscribed datastores found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.236241" elapsed="0.000012"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T22:30:03.236290" elapsed="0.000013"/>
</return>
<var>${sub_results}</var>
<arg>${SUBSCRIPTION_DATA}</arg>
<doc>Validate datastore subscription ratios</doc>
<status status="FAIL" start="2025-10-07T22:30:03.234931" elapsed="0.001445">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${oversubscribed}</var>
<arg>${sub_results}</arg>
<arg>oversubscribed</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.236590" elapsed="0.000023"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${oversub_count}</var>
<arg>${oversubscribed}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.236787" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Subscription validation results: ${oversub_count} oversubscribed datastores found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.236942" elapsed="0.000016"/>
</kw>
<if>
<branch type="IF" condition="${oversub_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Oversubscribed: Datastore ${oversub['name']} - Ratio: ${oversub['ratio']}:1 (Max: ${MAX_SUBSCRIPTION_RATIO}:1)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.237211" elapsed="0.000015"/>
</kw>
<var name="${oversub}"/>
<status status="NOT RUN" start="2025-10-07T22:30:03.237151" elapsed="0.000104"/>
</iter>
<var>${oversub}</var>
<value>@{oversubscribed}</value>
<status status="NOT RUN" start="2025-10-07T22:30:03.237107" elapsed="0.000169"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Subscription validation failed: ${oversub_count} datastores exceed maximum ratio</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.237341" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.237067" elapsed="0.000324"/>
</branch>
<status status="NOT RUN" start="2025-10-07T22:30:03.237049" elapsed="0.000413"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Subscription ratios validated: All datastores within acceptable limits</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.237588" elapsed="0.000015"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.238256" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.238128" elapsed="0.000168"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.238492" level="INFO">❌ Completed: Critical - Validate Subscription Ratios - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.238373" elapsed="0.000240"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.238313" elapsed="0.000343"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.238115" elapsed="0.000562"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.237920" elapsed="0.000801"/>
</kw>
<doc>✅ Validate datastore subscription ratios meet cluster standards</doc>
<tag>capacity_planning</tag>
<tag>critical</tag>
<tag>subscription</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:30:03.232692" elapsed="0.006127">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</test>
<test id="s1-s8-t11" name="Normal - Comprehensive Datastore Configuration Validation" line="231">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.240207" level="INFO">🏁 Starting: Normal - Comprehensive Datastore Configuration Validation</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.240081" elapsed="0.000240"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.239867" elapsed="0.000505"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.240607" level="INFO">🔍 Performing comprehensive datastore configuration validation...</msg>
<arg>🔍 Performing comprehensive datastore configuration validation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.240522" elapsed="0.000175"/>
</kw>
<kw name="Validate Complete Datastore Configuration" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.241192" level="INFO">🔍 Performing comprehensive datastore configuration validation...</msg>
<arg>🔍 Performing comprehensive datastore configuration validation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.241116" elapsed="0.000166"/>
</kw>
<kw name="Validate VM Datastore Placement" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.241696" level="INFO">✅ Validating VM datastore placement...</msg>
<arg>✅ Validating VM datastore placement...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.241618" elapsed="0.000166"/>
</kw>
<kw name="Datastore Validator Validate Vm Placement" owner="DatastoreValidator">
<msg time="2025-10-07T22:30:03.242006" level="INFO">${results} = {'violations': [], 'total_vms': 2, 'cluster': 'Production-Cluster'}</msg>
<var>${results}</var>
<arg>${vm_assignments}</arg>
<arg>${CLUSTER_NAME}</arg>
<doc>Validate VM datastore placement against cluster standards</doc>
<status status="PASS" start="2025-10-07T22:30:03.241874" elapsed="0.000149"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:30:03.242207" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:30:03.242100" elapsed="0.000123"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.242367" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:30:03.242414" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:30:03.242300" elapsed="0.000129"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.242601" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.242501" elapsed="0.000182"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T22:30:03.242724" elapsed="0.000029"/>
</return>
<msg time="2025-10-07T22:30:03.242845" level="INFO">${vm_placement} = {'violations': [], 'total_vms': 2, 'cluster': 'Production-Cluster'}</msg>
<var>${vm_placement}</var>
<arg>${VM_ASSIGNMENTS}</arg>
<doc>Validate VM datastore assignments against cluster standards</doc>
<status status="PASS" start="2025-10-07T22:30:03.241425" elapsed="0.001438"/>
</kw>
<kw name="Validate Datastore Capacity" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.243227" level="INFO">✅ Validating datastore capacity...</msg>
<arg>✅ Validating datastore capacity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.243157" elapsed="0.000157"/>
</kw>
<kw name="Datastore Validator Validate Capacity" owner="DatastoreValidator">
<msg time="2025-10-07T22:30:03.243519" level="FAIL">TypeError: '&lt;' not supported between instances of 'float' and 'str'</msg>
<var>${results}</var>
<arg>${capacity_data}</arg>
<arg>${MIN_FREE_CAPACITY_PERCENT}</arg>
<doc>Validate datastores have sufficient available capacity</doc>
<status status="FAIL" start="2025-10-07T22:30:03.243394" elapsed="0.000396">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${warnings}</var>
<arg>${results}</arg>
<arg>warnings</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.243883" elapsed="0.000014"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${warning_count}</var>
<arg>${warnings}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.243966" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${warning_count} warnings found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.244044" elapsed="0.000012"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T22:30:03.244085" elapsed="0.000011"/>
</return>
<var>${capacity}</var>
<arg>${CAPACITY_DATA}</arg>
<doc>Validate datastores have sufficient available capacity</doc>
<status status="FAIL" start="2025-10-07T22:30:03.242978" elapsed="0.001182">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Validate Performance Tier Assignment" owner="datastore_keywords">
<var>${performance}</var>
<arg>${VM_ASSIGNMENTS}</arg>
<arg>${PERFORMANCE_TIERS}</arg>
<doc>Validate VMs are on appropriate performance tiers</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.244336" elapsed="0.000018"/>
</kw>
<kw name="Validate Subscription Ratios" owner="datastore_keywords">
<var>${subscription}</var>
<arg>${SUBSCRIPTION_DATA}</arg>
<doc>Validate datastore subscription ratios</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.244452" elapsed="0.000015"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${total_violations}</var>
<arg>${vm_placement}['violations'].__len__() + ${capacity}['warnings'].__len__() + ${performance}['mismatches'].__len__() + ${subscription}['oversubscribed'].__len__()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.244536" elapsed="0.000012"/>
</kw>
<if>
<branch type="IF" condition="${total_violations} &gt; 0">
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Comprehensive validation found ${total_violations} total issues</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.244672" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.244604" elapsed="0.000103"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>✅ Comprehensive validation: All checks passed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.244781" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.244724" elapsed="0.000091"/>
</branch>
<status status="NOT RUN" start="2025-10-07T22:30:03.244587" elapsed="0.000242"/>
</if>
<return>
<value>${total_violations}</value>
<status status="NOT RUN" start="2025-10-07T22:30:03.244851" elapsed="0.000009"/>
</return>
<doc>Perform comprehensive datastore configuration validation</doc>
<status status="FAIL" start="2025-10-07T22:30:03.240963" elapsed="0.003952">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Comprehensive validation summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.245095" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - vCenter connection: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.245292" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - VM datastore assignments: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.245443" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Available capacity: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.245572" elapsed="0.000014"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Performance tier placement: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.245698" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Subscription ratios: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.245827" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Configuration screenshot: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.246008" elapsed="0.000014"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Comprehensive datastore configuration validation: PASSED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.246131" elapsed="0.000013"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:30:03.246788" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:30:03.246633" elapsed="0.000194"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.247068" level="INFO">❌ Completed: Normal - Comprehensive Datastore Configuration Validation - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.246905" elapsed="0.000357"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.246846" elapsed="0.000482"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.246619" elapsed="0.000753"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:30:03.246398" elapsed="0.001048"/>
</kw>
<doc>🔗 Perform comprehensive validation of all datastore configuration aspects</doc>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:30:03.239352" elapsed="0.008230">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</test>
<kw name="Generate Datastore Configuration Executive Summary" owner="datastore_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.248916" level="INFO">📊 Generating Datastore Configuration Executive Summary...</msg>
<arg>📊 Generating Datastore Configuration Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.248783" elapsed="0.000252"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T22:30:03.249786" level="INFO">${end_time} = 2025-10-07 22:30:03</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T22:30:03.249132" elapsed="0.000674"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.250628" level="INFO">${TEST_END_TIME} = 2025-10-07 22:30:03</msg>
<arg>${TEST_END_TIME}</arg>
<arg>${end_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:30:03.249891" elapsed="0.000767"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.250846" level="INFO">${summary_file} = C:\Users\write\project_2025\robot\robotframework/test_results/test9_datastore_executive_summary.html</msg>
<var>${summary_file}</var>
<arg>${EXECDIR}/test_results/test9_datastore_executive_summary.html</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T22:30:03.250734" elapsed="0.000129"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T22:30:03.251537" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;html&gt;&lt;head&gt;&lt;title&gt;Datastore Configuration Test Summary&lt;/title&gt;&lt;/head&gt;&lt;body&gt;</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-07T22:30:03.250934" elapsed="0.000650"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T22:30:03.252141" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;h1&gt;🎯 Datastore Configuration Validation - Executive Summary&lt;/h1&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T22:30:03.251755" elapsed="0.000432"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T22:30:03.252620" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Test Period:&lt;/strong&gt; ${TEST_START_TIME} to ${TEST_END_TIME}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T22:30:03.252270" elapsed="0.000394"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T22:30:03.253084" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;vCenter Server:&lt;/strong&gt; ${VCENTER_SERVER}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T22:30:03.252742" elapsed="0.000386"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T22:30:03.253534" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Target Host:&lt;/strong&gt; ${VCENTER_HOST}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T22:30:03.253206" elapsed="0.000371"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T22:30:03.253975" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Cluster:&lt;/strong&gt; ${CLUSTER_NAME}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T22:30:03.253655" elapsed="0.000363"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T22:30:03.254416" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Screenshot:&lt;/strong&gt; ${SCREENSHOT_PATH}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T22:30:03.254096" elapsed="0.000362"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-07T22:30:03.254847" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;/body&gt;&lt;/html&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-07T22:30:03.254535" elapsed="0.000354"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.255086" level="INFO">✅ Executive summary generated: C:\Users\write\project_2025\robot\robotframework/test_results/test9_datastore_executive_summary.html</msg>
<arg>✅ Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.254969" elapsed="0.000259"/>
</kw>
<if>
<branch type="IF" condition="${VCENTER_CONN}">
<kw name="Vcenter Disconnect" owner="VCenterLibrary">
<arg>${VCENTER_CONN}</arg>
<doc>Disconnect from vCenter server</doc>
<status status="PASS" start="2025-10-07T22:30:03.255470" elapsed="0.000124"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:30:03.255796" level="INFO">🔌 Disconnected from vCenter</msg>
<arg>🔌 Disconnected from vCenter</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:30:03.255693" elapsed="0.000227"/>
</kw>
<status status="PASS" start="2025-10-07T22:30:03.255328" elapsed="0.000638"/>
</branch>
<status status="PASS" start="2025-10-07T22:30:03.255304" elapsed="0.000693"/>
</if>
<doc>Generate executive summary report for datastore configuration test</doc>
<status status="PASS" start="2025-10-07T22:30:03.248609" elapsed="0.007442"/>
</kw>
<doc>💾 Datastore Configuration Validation Test Suite - Test-9
🔍 Process: Connect to vCenter → Collect Datastore Information → Validate Datastore Configuration
✅ Pass if datastore configuration meets cluster standards and application requirements
📊 Validates: VM assignments, available capacity, performance tiers, subscription levels</doc>
<status status="FAIL" start="2025-10-07T22:30:02.991003" elapsed="0.265082"/>
</suite>
<status status="FAIL" elapsed="11.249645"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="63" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">accuracy</stat>
<stat pass="0" fail="1" skip="0">adapters</stat>
<stat pass="0" fail="1" skip="0">agent</stat>
<stat pass="0" fail="4" skip="0">analysis</stat>
<stat pass="0" fail="1" skip="0">api</stat>
<stat pass="5" fail="0" skip="0">api_collection</stat>
<stat pass="1" fail="0" skip="0">application_requirements</stat>
<stat pass="0" fail="1" skip="0">authentication</stat>
<stat pass="0" fail="1" skip="0">authorized_keys</stat>
<stat pass="0" fail="1" skip="0">av_detection</stat>
<stat pass="1" fail="0" skip="0">backup_jobs</stat>
<stat pass="1" fail="0" skip="0">backup_policy</stat>
<stat pass="0" fail="1" skip="0">backup_recency</stat>
<stat pass="1" fail="0" skip="0">backup_schedule</stat>
<stat pass="1" fail="0" skip="0">backup_timestamp</stat>
<stat pass="1" fail="2" skip="0">capacity</stat>
<stat pass="1" fail="1" skip="0">capacity_planning</stat>
<stat pass="0" fail="1" skip="0">chrony</stat>
<stat pass="0" fail="3" skip="0">cip_007</stat>
<stat pass="0" fail="1" skip="0">clock</stat>
<stat pass="0" fail="1" skip="0">cluster</stat>
<stat pass="2" fail="1" skip="0">collection</stat>
<stat pass="2" fail="16" skip="0">compliance</stat>
<stat pass="0" fail="4" skip="0">comprehensive</stat>
<stat pass="0" fail="4" skip="0">configuration</stat>
<stat pass="2" fail="4" skip="0">connection</stat>
<stat pass="0" fail="1" skip="0">console</stat>
<stat pass="0" fail="2" skip="0">cpu</stat>
<stat pass="18" fail="43" skip="0">critical</stat>
<stat pass="0" fail="1" skip="0">crypto</stat>
<stat pass="0" fail="1" skip="0">data_collection</stat>
<stat pass="4" fail="0" skip="0">datastore</stat>
<stat pass="0" fail="2" skip="0">disk</stat>
<stat pass="0" fail="1" skip="0">dns</stat>
<stat pass="1" fail="1" skip="0">documentation</stat>
<stat pass="2" fail="0" skip="0">dr</stat>
<stat pass="0" fail="1" skip="0">drift</stat>
<stat pass="0" fail="1" skip="0">exclusions</stat>
<stat pass="0" fail="1" skip="0">filesystem</stat>
<stat pass="0" fail="1" skip="0">gateway</stat>
<stat pass="0" fail="6" skip="0">hardware</stat>
<stat pass="0" fail="2" skip="0">hostname</stat>
<stat pass="1" fail="0" skip="0">host_status</stat>
<stat pass="0" fail="1" skip="0">information</stat>
<stat pass="2" fail="4" skip="0">infrastructure</stat>
<stat pass="0" fail="1" skip="0">installation</stat>
<stat pass="0" fail="1" skip="0">ip</stat>
<stat pass="1" fail="0" skip="0">job_status</stat>
<stat pass="1" fail="0" skip="0">job_success</stat>
<stat pass="0" fail="1" skip="0">lvm</stat>
<stat pass="0" fail="2" skip="0">memory</stat>
<stat pass="0" fail="1" skip="0">monitoring</stat>
<stat pass="0" fail="1" skip="0">network</stat>
<stat pass="0" fail="3" skip="0">networking</stat>
<stat pass="0" fail="20" skip="0">normal</stat>
<stat pass="0" fail="6" skip="0">ntp</stat>
<stat pass="1" fail="0" skip="0">offsite_compliance</stat>
<stat pass="1" fail="0" skip="0">offsite_replication</stat>
<stat pass="0" fail="1" skip="0">os</stat>
<stat pass="0" fail="1" skip="0">os_detection</stat>
<stat pass="0" fail="1" skip="0">passwordless</stat>
<stat pass="2" fail="0" skip="0">performance</stat>
<stat pass="0" fail="3" skip="0">permissions</stat>
<stat pass="0" fail="1" skip="0">placement</stat>
<stat pass="0" fail="1" skip="0">platform</stat>
<stat pass="1" fail="0" skip="0">policy_compliance</stat>
<stat pass="0" fail="1" skip="0">properties</stat>
<stat pass="0" fail="1" skip="0">protection</stat>
<stat pass="0" fail="1" skip="0">public_key</stat>
<stat pass="0" fail="1" skip="0">real_time</stat>
<stat pass="1" fail="0" skip="0">recency</stat>
<stat pass="0" fail="1" skip="0">reporting</stat>
<stat pass="1" fail="0" skip="0">retention</stat>
<stat pass="0" fail="1" skip="0">retention_compliance</stat>
<stat pass="0" fail="1" skip="0">review</stat>
<stat pass="1" fail="0" skip="0">rpo</stat>
<stat pass="0" fail="1" skip="0">rpo_compliance</stat>
<stat pass="0" fail="1" skip="0">running</stat>
<stat pass="0" fail="1" skip="0">scheduled_scan</stat>
<stat pass="1" fail="0" skip="0">screenshot</stat>
<stat pass="0" fail="1" skip="0">screenshots</stat>
<stat pass="0" fail="7" skip="0">security</stat>
<stat pass="0" fail="1" skip="0">server</stat>
<stat pass="0" fail="2" skip="0">service</stat>
<stat pass="0" fail="1" skip="0">signatures</stat>
<stat pass="0" fail="1" skip="0">sources</stat>
<stat pass="0" fail="3" skip="0">ssh</stat>
<stat pass="0" fail="1" skip="0">ssh_key</stat>
<stat pass="0" fail="1" skip="0">status</stat>
<stat pass="0" fail="6" skip="0">storage</stat>
<stat pass="0" fail="1" skip="0">subnet</stat>
<stat pass="1" fail="1" skip="0">subscription</stat>
<stat pass="0" fail="1" skip="0">synchronization</stat>
<stat pass="0" fail="1" skip="0">system</stat>
<stat pass="1" fail="0" skip="0">tiers</stat>
<stat pass="0" fail="3" skip="0">time</stat>
<stat pass="0" fail="1" skip="0">timezone</stat>
<stat pass="0" fail="1" skip="0">updates</stat>
<stat pass="5" fail="11" skip="0">validation</stat>
<stat pass="1" fail="1" skip="0">vcenter</stat>
<stat pass="1" fail="0" skip="0">vcenter_api</stat>
<stat pass="0" fail="1" skip="0">verification</stat>
<stat pass="0" fail="1" skip="0">version</stat>
<stat pass="1" fail="0" skip="0">vm_assignments</stat>
<stat pass="1" fail="0" skip="0">vm_placement</stat>
<stat pass="0" fail="1" skip="0">volumes</stat>
</tag>
<suite>
<stat name="Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration" id="s1" pass="18" fail="63" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration</stat>
<stat name="Backup Validation" id="s1-s1" pass="10" fail="4" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Backup Validation</stat>
<stat name="Av Agent Validation" id="s1-s2" pass="0" fail="13" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Av Agent Validation</stat>
<stat name="Network Validation" id="s1-s3" pass="0" fail="6" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Network Validation</stat>
<stat name="Vm Validation" id="s1-s4" pass="0" fail="8" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Vm Validation</stat>
<stat name="Disk Space Validation" id="s1-s5" pass="0" fail="8" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Disk Space Validation</stat>
<stat name="Time Configuration Validation" id="s1-s6" pass="0" fail="10" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Time Configuration Validation</stat>
<stat name="Ssh Key Authentication" id="s1-s7" pass="0" fail="11" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Ssh Key Authentication</stat>
<stat name="Datastore Configuration" id="s1-s8" pass="8" fail="3" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Datastore Configuration</stat>
</suite>
</statistics>
<errors>
<msg time="2025-10-07T22:29:54.123170" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T22:29:55.487099" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T22:29:56.956627" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-07T22:29:58.334271" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
</errors>
</robot>
