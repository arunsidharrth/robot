<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.3.2 (Python 3.13.8 on win32)" generated="2025-10-08T22:30:04.405945" rpa="false" schemaversion="5">
<suite id="s1" name="Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration">
<suite id="s1-s1" name="Backup Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test15_backup_validation\backup_validation.robot">
<kw name="Initialize Backup Validation Test Environment" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.069591" level="INFO">🚀 Initializing Backup Validation Test Environment...</msg>
<arg>🚀 Initializing Backup Validation Test Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.069433" elapsed="0.000308"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.070746" level="INFO">${VCENTER_API_CONN} = None</msg>
<arg>${VCENTER_API_CONN}</arg>
<arg>${None}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:29:47.069894" elapsed="0.000893"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.071925" level="INFO">${TEST_START_TIME} = </msg>
<arg>${TEST_START_TIME}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:29:47.070876" elapsed="0.001081"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:29:47.072220" level="INFO">${start_time} = 2025-10-08 22:29:47</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:29:47.072038" elapsed="0.000204"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.072461" level="INFO">${TEST_START_TIME} = 2025-10-08 22:29:47</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:29:47.072335" elapsed="0.000154"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-08T22:29:47.072695" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation"&gt;C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation&lt;/a&gt;' already exists.</msg>
<arg>results/test15_backup_validation</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-08T22:29:47.072559" elapsed="0.000177"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.075174" level="INFO">✅ Test environment initialized at 2025-10-08 22:29:47</msg>
<arg>✅ Test environment initialized at ${TEST_START_TIME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.072813" elapsed="0.002513"/>
</kw>
<doc>Initialize test environment for backup validation</doc>
<status status="PASS" start="2025-10-08T22:29:47.068876" elapsed="0.006543"/>
</kw>
<test id="s1-s1-t1" name="Critical - Connect to vCenter API" line="18">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.076654" level="INFO">🏁 Starting: Critical - Connect to vCenter API</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.076504" elapsed="0.000291"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-08T22:29:47.076207" elapsed="0.000651"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.077227" level="INFO">🔍 Establishing API connection to vCenter...</msg>
<arg>🔍 Establishing API connection to vCenter...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.077084" elapsed="0.000293"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.077692" level="INFO">📋 vCenter Server: allxdvitap01</msg>
<arg>📋 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.077558" elapsed="0.000224"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.078094" level="INFO">📋 API Endpoint: https://allxdvitap01/api</msg>
<arg>📋 API Endpoint: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.077964" elapsed="0.000254"/>
</kw>
<kw name="Connect To vCenter API" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.078825" level="INFO">🔗 Connecting to vCenter API: https://allxdvitap01/api</msg>
<arg>🔗 Connecting to vCenter API: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.078677" elapsed="0.000273"/>
</kw>
<kw name="Vcenter Api Connect" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.079343" level="INFO">${connection} = {'endpoint': 'https://allxdvitap01/api', 'username': 'administrator@vsphere.local', 'authenticated': True, 'timeout': 30, 'verify_ssl': True, 'session_token': 'mock-session-token-12345'}</msg>
<var>${connection}</var>
<arg>${VCENTER_API_ENDPOINT}</arg>
<arg>${VCENTER_USERNAME}</arg>
<arg>${VCENTER_PASSWORD}</arg>
<arg>${API_TIMEOUT}</arg>
<arg>${API_VERIFY_SSL}</arg>
<doc>Establish connection to vCenter REST API</doc>
<status status="PASS" start="2025-10-08T22:29:47.079050" elapsed="0.000315"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.079607" level="INFO">${VCENTER_API_CONN} = {'endpoint': 'https://allxdvitap01/api', 'username': 'administrator@vsphere.local', 'authenticated': True, 'timeout': 30, 'verify_ssl': True, 'session_token': 'mock-session-token-12345'}</msg>
<arg>${VCENTER_API_CONN}</arg>
<arg>${connection}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:29:47.079459" elapsed="0.000178"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.079839" level="INFO">✅ Connected to vCenter API: https://allxdvitap01/api</msg>
<arg>✅ Connected to vCenter API: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.079716" elapsed="0.000232"/>
</kw>
<return>
<value>${connection}</value>
<status status="PASS" start="2025-10-08T22:29:47.080004" elapsed="0.000060"/>
</return>
<doc>Establish connection to vCenter REST API</doc>
<status status="PASS" start="2025-10-08T22:29:47.078462" elapsed="0.001692"/>
</kw>
<kw name="Verify vCenter API Connection" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.080615" level="INFO">🔍 Verifying vCenter API connection status...</msg>
<arg>🔍 Verifying vCenter API connection status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.080525" elapsed="0.000202"/>
</kw>
<kw name="Vcenter Api Verify Connection" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.080959" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>${VCENTER_API_CONN}</arg>
<doc>Verify vCenter API connection is active</doc>
<status status="PASS" start="2025-10-08T22:29:47.080825" elapsed="0.000154"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.081193" level="INFO">✅ vCenter API connection verified: True</msg>
<arg>✅ vCenter API connection verified: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.081067" elapsed="0.000284"/>
</kw>
<return>
<value>${status}</value>
<status status="PASS" start="2025-10-08T22:29:47.081625" elapsed="0.000048"/>
</return>
<msg time="2025-10-08T22:29:47.081798" level="INFO">${connection_status} = True</msg>
<var>${connection_status}</var>
<doc>Verify vCenter API connection is active</doc>
<status status="PASS" start="2025-10-08T22:29:47.080349" elapsed="0.001470"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>msg=Failed to establish vCenter API connection</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.081985" elapsed="0.000152"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.082380" level="INFO">✅ vCenter API connection established to query VM backup policy configuration and status</msg>
<arg>✅ vCenter API connection established to query VM backup policy configuration and status</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.082286" elapsed="0.000209"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.083591" level="INFO">✅ Completed: Critical - Connect to vCenter API - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.083436" elapsed="0.000308"/>
</kw>
<status status="PASS" start="2025-10-08T22:29:47.083233" elapsed="0.000567"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.083969" elapsed="0.000020"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.083852" elapsed="0.000172"/>
</branch>
<status status="PASS" start="2025-10-08T22:29:47.083203" elapsed="0.000845"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-08T22:29:47.082910" elapsed="0.001194"/>
</kw>
<doc>🔗 Establish API connection to VMware vCenter to query VM backup policy configuration and status</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>vcenter_api</tag>
<status status="PASS" start="2025-10-08T22:29:47.075511" elapsed="0.008795"/>
</test>
<test id="s1-s1-t2" name="Critical - Collect Backup Configuration via API" line="35">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.085688" level="INFO">🏁 Starting: Critical - Collect Backup Configuration via API</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.085561" elapsed="0.000272"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-08T22:29:47.085341" elapsed="0.000566"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.086231" level="INFO">🔍 Collecting backup configuration via API...</msg>
<arg>🔍 Collecting backup configuration via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.086106" elapsed="0.000240"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.086677" level="INFO">📋 Target VMs: ['production-db-01', 'production-web-01', 'production-app-01', 'file-server-01']</msg>
<arg>📋 Target VMs: ${TARGET_VMS}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.086525" elapsed="0.000284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.087081" level="INFO">📊 Retrieving VM backup policy details...</msg>
<arg>📊 Retrieving VM backup policy details...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.086984" elapsed="0.000212"/>
</kw>
<kw name="Collect Backup Policy Configuration" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.087709" level="INFO">📊 Collecting backup policy configuration via API...</msg>
<arg>📊 Collecting backup policy configuration via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.087619" elapsed="0.000211"/>
</kw>
<kw name="Vcenter Api Get Backup Policies" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.088103" level="INFO">${policies} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<var>${policies}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get backup policy configuration for VMs via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.087932" elapsed="0.000193"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.088296" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.088358" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${policies}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.088213" elapsed="0.000162"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.088608" level="INFO">📊 Collected backup policies for 4 VMs</msg>
<arg>📊 Collected backup policies for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.088455" elapsed="0.000260"/>
</kw>
<return>
<value>${policies}</value>
<status status="PASS" start="2025-10-08T22:29:47.088765" elapsed="0.000038"/>
</return>
<msg time="2025-10-08T22:29:47.088916" level="INFO">${policy_data} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<var>${policy_data}</var>
<doc>Collect VM backup policy configuration via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.087423" elapsed="0.001514"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.089420" level="INFO">${POLICY_DATA} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<arg>${POLICY_DATA}</arg>
<arg>${policy_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:47.089181" elapsed="0.000291"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.089773" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.089832" level="INFO">${vm_count} = 4</msg>
<var>${vm_count}</var>
<arg>${policy_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.089665" elapsed="0.000185"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${vm_count} &gt; 0</arg>
<arg>msg=No backup policies found for target VMs</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.090013" elapsed="0.000210"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.091710" level="INFO">📊 VM: production-db-01 - Policy: Critical-DB-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.090698" elapsed="0.001146"/>
</kw>
<var name="${policy}">{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-08T22:29:47.090623" elapsed="0.001258"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.093121" level="INFO">📊 VM: production-web-01 - Policy: High-Priority-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.092059" elapsed="0.001227"/>
</kw>
<var name="${policy}">{'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'policy_id': 'policy-002', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-08T22:29:47.091980" elapsed="0.001362"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.094591" level="INFO">📊 VM: production-app-01 - Policy: High-Priority-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.093567" elapsed="0.001168"/>
</kw>
<var name="${policy}">{'vm_name': 'production-app-01', 'policy_name': 'High-Priority-Policy', 'policy_id': 'policy-002', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-08T22:29:47.093457" elapsed="0.001331"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.096067" level="INFO">📊 VM: file-server-01 - Policy: Standard-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.094978" elapsed="0.001203"/>
</kw>
<var name="${policy}">{'vm_name': 'file-server-01', 'policy_name': 'Standard-Policy', 'policy_id': 'policy-003', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-08T22:29:47.094888" elapsed="0.001330"/>
</iter>
<var>${policy}</var>
<value>@{policy_data}</value>
<status status="PASS" start="2025-10-08T22:29:47.090469" elapsed="0.005777"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.096712" level="INFO">✅ Backup policy details collected for 4 VMs</msg>
<arg>✅ Backup policy details collected for ${vm_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.096537" elapsed="0.000287"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.097129" level="INFO">📊 Retrieving backup schedule settings...</msg>
<arg>📊 Retrieving backup schedule settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.097010" elapsed="0.000250"/>
</kw>
<kw name="Collect Backup Schedule Settings" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.097909" level="INFO">📊 Collecting backup schedule settings via API...</msg>
<arg>📊 Collecting backup schedule settings via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.097796" elapsed="0.000241"/>
</kw>
<kw name="Vcenter Api Get Backup Schedules" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.098356" level="INFO">${schedules} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-09 02:29:47'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<var>${schedules}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get backup schedule settings for VMs via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.098143" elapsed="0.000237"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.098551" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.098602" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${schedules}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.098469" elapsed="0.000149"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.098813" level="INFO">📊 Collected backup schedules for 4 VMs</msg>
<arg>📊 Collected backup schedules for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.098697" elapsed="0.000223"/>
</kw>
<return>
<value>${schedules}</value>
<status status="PASS" start="2025-10-08T22:29:47.098967" elapsed="0.000034"/>
</return>
<msg time="2025-10-08T22:29:47.099116" level="INFO">${schedule_data} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-09 02:29:47'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<var>${schedule_data}</var>
<doc>Collect backup schedule settings via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.097561" elapsed="0.001575"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.099543" level="INFO">${SCHEDULE_DATA} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-09 02:29:47'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<arg>${SCHEDULE_DATA}</arg>
<arg>${schedule_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:47.099332" elapsed="0.000255"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.099838" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.099894" level="INFO">${schedule_count} = 4</msg>
<var>${schedule_count}</var>
<arg>${schedule_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.099748" elapsed="0.000163"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${schedule_count} &gt; 0</arg>
<arg>msg=No backup schedules found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.100058" elapsed="0.000173"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.101883" level="INFO">📊 VM: production-db-01 - Frequency: Every 4 hours, RPO: 4h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.100544" elapsed="0.001454"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-09 02:29:47'}</var>
<status status="PASS" start="2025-10-08T22:29:47.100472" elapsed="0.001568"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.103732" level="INFO">📊 VM: production-web-01 - Frequency: Every 12 hours, RPO: 12h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.102215" elapsed="0.001654"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'next_run': '2025-10-09 10:29:47'}</var>
<status status="PASS" start="2025-10-08T22:29:47.102127" elapsed="0.001783"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.105511" level="INFO">📊 VM: production-app-01 - Frequency: Every 12 hours, RPO: 12h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.104172" elapsed="0.001501"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-app-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'next_run': '2025-10-09 10:29:47'}</var>
<status status="PASS" start="2025-10-08T22:29:47.104078" elapsed="0.001640"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.107244" level="INFO">📊 VM: file-server-01 - Frequency: Daily, RPO: 24h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.105916" elapsed="0.001457"/>
</kw>
<var name="${schedule}">{'vm_name': 'file-server-01', 'frequency': 'Daily', 'rpo_hours': 24, 'next_run': '2025-10-09 22:29:47'}</var>
<status status="PASS" start="2025-10-08T22:29:47.105813" elapsed="0.001598"/>
</iter>
<var>${schedule}</var>
<value>@{schedule_data}</value>
<status status="PASS" start="2025-10-08T22:29:47.100346" elapsed="0.007093"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.107829" level="INFO">✅ Schedule settings collected for 4 VMs</msg>
<arg>✅ Schedule settings collected for ${schedule_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.107654" elapsed="0.000312"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.108383" level="INFO">📊 Retrieving recent backup job status...</msg>
<arg>📊 Retrieving recent backup job status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.108264" elapsed="0.000257"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.108834" level="INFO">📋 Looking back 7 days</msg>
<arg>📋 Looking back ${BACKUP_LOOKBACK_DAYS} days</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.108702" elapsed="0.000241"/>
</kw>
<kw name="Collect Recent Backup Job Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.109454" level="INFO">📊 Collecting recent backup job status via API...</msg>
<arg>📊 Collecting recent backup job status via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.109361" elapsed="0.000190"/>
</kw>
<kw name="Vcenter Api Get Recent Backup Jobs" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.109979" level="INFO">${jobs} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_mess...</msg>
<var>${jobs}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<arg>${BACKUP_LOOKBACK_DAYS}</arg>
<doc>Get recent backup job status for VMs via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.109658" elapsed="0.000347"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.110191" level="INFO">Length is 12.</msg>
<msg time="2025-10-08T22:29:47.110243" level="INFO">${count} = 12</msg>
<var>${count}</var>
<arg>${jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.110109" elapsed="0.000151"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.110455" level="INFO">📊 Collected 12 recent backup jobs</msg>
<arg>📊 Collected ${count} recent backup jobs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.110342" elapsed="0.000224"/>
</kw>
<return>
<value>${jobs}</value>
<status status="PASS" start="2025-10-08T22:29:47.110615" elapsed="0.000034"/>
</return>
<msg time="2025-10-08T22:29:47.110773" level="INFO">${job_status} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_mess...</msg>
<var>${job_status}</var>
<doc>Collect recent backup job status via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.109170" elapsed="0.001623"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.111223" level="INFO">${JOB_STATUS} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_mess...</msg>
<arg>${JOB_STATUS}</arg>
<arg>${job_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:47.110993" elapsed="0.000273"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.111549" level="INFO">Length is 12.</msg>
<msg time="2025-10-08T22:29:47.111618" level="INFO">${job_count} = 12</msg>
<var>${job_count}</var>
<arg>${job_status}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.111435" elapsed="0.000209"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${job_count} &gt; 0</arg>
<arg>msg=No recent backup jobs found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.111785" elapsed="0.000167"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.113657" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-08 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.112244" elapsed="0.001541"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_messa...</var>
<status status="PASS" start="2025-10-08T22:29:47.112174" elapsed="0.001661"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.115568" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-06 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.114022" elapsed="0.001673"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-1', 'status': 'Success', 'start_time': '2025-10-06 21:59:47', 'end_time': '2025-10-06 22:29:47', 'data_transferred_gb': 60, 'error_messa...</var>
<status status="PASS" start="2025-10-08T22:29:47.113932" elapsed="0.001814"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.117450" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-04 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.115923" elapsed="0.001634"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-2', 'status': 'Success', 'start_time': '2025-10-04 21:59:47', 'end_time': '2025-10-04 22:29:47', 'data_transferred_gb': 70, 'error_messa...</var>
<status status="PASS" start="2025-10-08T22:29:47.115841" elapsed="0.001870"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.119254" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-08 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.117861" elapsed="0.001536"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_mes...</var>
<status status="PASS" start="2025-10-08T22:29:47.117791" elapsed="0.001668"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.121290" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-06 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.119651" elapsed="0.001806"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-1', 'status': 'Success', 'start_time': '2025-10-06 21:59:47', 'end_time': '2025-10-06 22:29:47', 'data_transferred_gb': 60, 'error_mes...</var>
<status status="PASS" start="2025-10-08T22:29:47.119566" elapsed="0.001940"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.123143" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-04 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.121711" elapsed="0.001565"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-2', 'status': 'Success', 'start_time': '2025-10-04 21:59:47', 'end_time': '2025-10-04 22:29:47', 'data_transferred_gb': 70, 'error_mes...</var>
<status status="PASS" start="2025-10-08T22:29:47.121607" elapsed="0.001718"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.125115" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-08 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.123512" elapsed="0.001717"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_mes...</var>
<status status="PASS" start="2025-10-08T22:29:47.123423" elapsed="0.001843"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.126748" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-06 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.125404" elapsed="0.001487"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-1', 'status': 'Success', 'start_time': '2025-10-06 21:59:47', 'end_time': '2025-10-06 22:29:47', 'data_transferred_gb': 60, 'error_mes...</var>
<status status="PASS" start="2025-10-08T22:29:47.125338" elapsed="0.001604"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.128638" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-04 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.127134" elapsed="0.001642"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-2', 'status': 'Success', 'start_time': '2025-10-04 21:59:47', 'end_time': '2025-10-04 22:29:47', 'data_transferred_gb': 70, 'error_mes...</var>
<status status="PASS" start="2025-10-08T22:29:47.127045" elapsed="0.001783"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.130597" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-08 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.129024" elapsed="0.001714"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_message':...</var>
<status status="PASS" start="2025-10-08T22:29:47.128930" elapsed="0.001855"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.132529" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-06 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.130967" elapsed="0.001691"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-1', 'status': 'Success', 'start_time': '2025-10-06 21:59:47', 'end_time': '2025-10-06 22:29:47', 'data_transferred_gb': 60, 'error_message':...</var>
<status status="PASS" start="2025-10-08T22:29:47.130879" elapsed="0.001832"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.134686" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-04 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.132917" elapsed="0.001923"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-2', 'status': 'Success', 'start_time': '2025-10-04 21:59:47', 'end_time': '2025-10-04 22:29:47', 'data_transferred_gb': 70, 'error_message':...</var>
<status status="PASS" start="2025-10-08T22:29:47.132828" elapsed="0.002065"/>
</iter>
<var>${job}</var>
<value>@{job_status}</value>
<status status="PASS" start="2025-10-08T22:29:47.112059" elapsed="0.022870"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.135358" level="INFO">✅ Recent job status collected: 12 jobs</msg>
<arg>✅ Recent job status collected: ${job_count} jobs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.135183" elapsed="0.000346"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.136077" level="INFO">📊 Retrieving retention policy settings...</msg>
<arg>📊 Retrieving retention policy settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.135973" elapsed="0.000222"/>
</kw>
<kw name="Collect Retention Policy Settings" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.137489" level="INFO">📊 Collecting retention policy settings via API...</msg>
<arg>📊 Collecting retention policy settings via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.136683" elapsed="0.000947"/>
</kw>
<kw name="Vcenter Api Get Retention Policies" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.137926" level="INFO">${retention} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<var>${retention}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get retention policy settings for VMs via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.137745" elapsed="0.000205"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.138121" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.138175" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${retention}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.138038" elapsed="0.000155"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.138404" level="INFO">📊 Collected retention policies for 4 VMs</msg>
<arg>📊 Collected retention policies for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.138278" elapsed="0.000248"/>
</kw>
<return>
<value>${retention}</value>
<status status="PASS" start="2025-10-08T22:29:47.138584" elapsed="0.000037"/>
</return>
<msg time="2025-10-08T22:29:47.138750" level="INFO">${retention_data} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<var>${retention_data}</var>
<doc>Collect retention policy settings via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.136433" elapsed="0.002341"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.139133" level="INFO">${RETENTION_DATA} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<arg>${RETENTION_DATA}</arg>
<arg>${retention_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:47.138959" elapsed="0.000211"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.139409" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.139470" level="INFO">${retention_count} = 4</msg>
<var>${retention_count}</var>
<arg>${retention_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.139318" elapsed="0.000170"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${retention_count} &gt; 0</arg>
<arg>msg=No retention policies found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.139624" elapsed="0.000182"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.141379" level="INFO">📊 VM: production-db-01 - Daily: 14d, Weekly: 8w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.140116" elapsed="0.001402"/>
</kw>
<var name="${retention}">{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-08T22:29:47.140047" elapsed="0.001522"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.143007" level="INFO">📊 VM: production-web-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.141755" elapsed="0.001375"/>
</kw>
<var name="${retention}">{'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-08T22:29:47.141671" elapsed="0.001497"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.144498" level="INFO">📊 VM: production-app-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.143314" elapsed="0.001293"/>
</kw>
<var name="${retention}">{'vm_name': 'production-app-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-08T22:29:47.143245" elapsed="0.001400"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.146159" level="INFO">📊 VM: file-server-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.144801" elapsed="0.001466"/>
</kw>
<var name="${retention}">{'vm_name': 'file-server-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-08T22:29:47.144719" elapsed="0.001584"/>
</iter>
<var>${retention}</var>
<value>@{retention_data}</value>
<status status="PASS" start="2025-10-08T22:29:47.139921" elapsed="0.006409"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.146683" level="INFO">✅ Retention policies collected for 4 VMs</msg>
<arg>✅ Retention policies collected for ${retention_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.146518" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.147083" level="INFO">📊 Retrieving latest backup timestamps...</msg>
<arg>📊 Retrieving latest backup timestamps...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.146966" elapsed="0.000229"/>
</kw>
<kw name="Collect Latest Backup Timestamps" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.147920" level="INFO">📊 Collecting latest backup timestamps via API...</msg>
<arg>📊 Collecting latest backup timestamps via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.147807" elapsed="0.000238"/>
</kw>
<kw name="Vcenter Api Get Latest Backup Timestamps" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.148391" level="INFO">${timestamps} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-08 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<var>${timestamps}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get latest successful backup timestamps for VMs via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.148148" elapsed="0.000268"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.148717" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.148773" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${timestamps}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.148628" elapsed="0.000163"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.148998" level="INFO">📊 Collected latest backup timestamps for 4 VMs</msg>
<arg>📊 Collected latest backup timestamps for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.148881" elapsed="0.000264"/>
</kw>
<return>
<value>${timestamps}</value>
<status status="PASS" start="2025-10-08T22:29:47.149212" elapsed="0.000040"/>
</return>
<msg time="2025-10-08T22:29:47.149420" level="INFO">${timestamp_data} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-08 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<var>${timestamp_data}</var>
<doc>Collect latest successful backup timestamps via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.147566" elapsed="0.001882"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.149868" level="INFO">${TIMESTAMP_DATA} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-08 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<arg>${TIMESTAMP_DATA}</arg>
<arg>${timestamp_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:47.149672" elapsed="0.000231"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.150148" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.150205" level="INFO">${timestamp_count} = 4</msg>
<var>${timestamp_count}</var>
<arg>${timestamp_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.150059" elapsed="0.000165"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${timestamp_count} &gt; 0</arg>
<arg>msg=No backup timestamps found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.150363" elapsed="0.000169"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.151743" level="INFO">📊 VM: production-db-01 - Last Backup: 2025-10-08 19:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.150819" elapsed="0.001044"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-08 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-08T22:29:47.150753" elapsed="0.001157"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.153190" level="INFO">📊 VM: production-web-01 - Last Backup: 2025-10-08 14:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.152086" elapsed="0.001244"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-web-01', 'last_backup_time': '2025-10-08 14:29:47', 'backup_id': 'backup-production-web-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-08T22:29:47.152004" elapsed="0.001381"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.154604" level="INFO">📊 VM: production-app-01 - Last Backup: 2025-10-08 12:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.153579" elapsed="0.001142"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-app-01', 'last_backup_time': '2025-10-08 12:29:47', 'backup_id': 'backup-production-app-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-08T22:29:47.153490" elapsed="0.001275"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.156061" level="INFO">📊 VM: file-server-01 - Last Backup: 2025-10-08 07:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.154936" elapsed="0.001313"/>
</kw>
<var name="${timestamp}">{'vm_name': 'file-server-01', 'last_backup_time': '2025-10-08 07:29:47', 'backup_id': 'backup-file-server-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-08T22:29:47.154855" elapsed="0.001450"/>
</iter>
<var>${timestamp}</var>
<value>@{timestamp_data}</value>
<status status="PASS" start="2025-10-08T22:29:47.150635" elapsed="0.005709"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.156693" level="INFO">✅ Latest timestamps collected for 4 VMs</msg>
<arg>✅ Latest timestamps collected for ${timestamp_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.156547" elapsed="0.000256"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.157134" level="INFO">📊 Retrieving offsite replication status...</msg>
<arg>📊 Retrieving offsite replication status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.157007" elapsed="0.000244"/>
</kw>
<kw name="Collect Offsite Replication Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.157879" level="INFO">📊 Collecting offsite replication status via API...</msg>
<arg>📊 Collecting offsite replication status via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.157783" elapsed="0.000207"/>
</kw>
<kw name="Vcenter Api Get Offsite Replication Status" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.158303" level="INFO">${replication} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-08 16:29:47', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<var>${replication}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get offsite replication status for VMs via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.158094" elapsed="0.000232"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.158493" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.158545" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${replication}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.158412" elapsed="0.000150"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.158751" level="INFO">📊 Collected offsite replication status for 4 VMs</msg>
<arg>📊 Collected offsite replication status for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.158639" elapsed="0.000232"/>
</kw>
<return>
<value>${replication}</value>
<status status="PASS" start="2025-10-08T22:29:47.158938" elapsed="0.000042"/>
</return>
<msg time="2025-10-08T22:29:47.159216" level="INFO">${replication_data} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-08 16:29:47', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<var>${replication_data}</var>
<doc>Collect offsite replication status via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.157535" elapsed="0.001708"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.159684" level="INFO">${REPLICATION_DATA} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-08 16:29:47', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<arg>${REPLICATION_DATA}</arg>
<arg>${replication_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:47.159514" elapsed="0.000204"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.160031" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.160109" level="INFO">${replication_count} = 4</msg>
<var>${replication_count}</var>
<arg>${replication_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.159903" elapsed="0.000229"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${replication_count} &gt; 0</arg>
<arg>msg=No offsite replication data found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.160313" elapsed="0.000223"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.162222" level="INFO">📊 VM: production-db-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.160928" elapsed="0.001442"/>
</kw>
<var name="${replication}">{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-08 16:29:47', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-08T22:29:47.160823" elapsed="0.001599"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.163930" level="INFO">📊 VM: production-web-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.162619" elapsed="0.001440"/>
</kw>
<var name="${replication}">{'vm_name': 'production-web-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-08 16:29:47', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-08T22:29:47.162522" elapsed="0.001601"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.165641" level="INFO">📊 VM: production-app-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.164311" elapsed="0.001456"/>
</kw>
<var name="${replication}">{'vm_name': 'production-app-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-08 16:29:47', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-08T22:29:47.164225" elapsed="0.001593"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.167352" level="INFO">📊 VM: file-server-01 - Enabled: False, Target: None</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.165998" elapsed="0.001462"/>
</kw>
<var name="${replication}">{'vm_name': 'file-server-01', 'offsite_enabled': False, 'offsite_target': None, 'last_replication': None, 'replication_status': 'Disabled'}</var>
<status status="PASS" start="2025-10-08T22:29:47.165913" elapsed="0.001583"/>
</iter>
<var>${replication}</var>
<value>@{replication_data}</value>
<status status="PASS" start="2025-10-08T22:29:47.160667" elapsed="0.006853"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.167866" level="INFO">✅ Offsite replication status collected for 4 VMs</msg>
<arg>✅ Offsite replication status collected for ${replication_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.167704" elapsed="0.000268"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.168257" level="INFO">✅ All backup configuration data collected via API in text/JSON format</msg>
<arg>✅ All backup configuration data collected via API in text/JSON format</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.168143" elapsed="0.000223"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.169234" level="INFO">✅ Completed: Critical - Collect Backup Configuration via API - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.169058" elapsed="0.000342"/>
</kw>
<status status="PASS" start="2025-10-08T22:29:47.168918" elapsed="0.000540"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.169614" elapsed="0.000022"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.169508" elapsed="0.000171"/>
</branch>
<status status="PASS" start="2025-10-08T22:29:47.168898" elapsed="0.000803"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-08T22:29:47.168671" elapsed="0.001085"/>
</kw>
<doc>📊 Use vCenter REST API calls to retrieve VM backup policy details, schedule settings, recent job status, retention policies, and latest backup timestamps in text/JSON format</doc>
<tag>api</tag>
<tag>backup_collection</tag>
<tag>critical</tag>
<status status="PASS" start="2025-10-08T22:29:47.084714" elapsed="0.085198"/>
</test>
<test id="s1-s1-t3" name="Critical - Validate Backup Compliance" line="111">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.171618" level="INFO">🏁 Starting: Critical - Validate Backup Compliance</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.171457" elapsed="0.000303"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-08T22:29:47.171134" elapsed="0.000694"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.172120" level="INFO">🔍 Validating backup compliance against data criticality requirements and compliance standards...</msg>
<arg>🔍 Validating backup compliance against data criticality requirements and compliance standards...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.172016" elapsed="0.000317"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.172657" level="INFO">🔍 Validating backup policy application...</msg>
<arg>🔍 Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.172534" elapsed="0.000236"/>
</kw>
<kw name="Validate Backup Policy Applied" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.173410" level="INFO">✅ Validating backup policy application...</msg>
<arg>✅ Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.173300" elapsed="0.000240"/>
</kw>
<kw name="Backup Validator Validate Policies" owner="BackupValidator">
<msg time="2025-10-08T22:29:47.173837" level="INFO">${results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${results}</var>
<arg>${policy_data}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Validate all VMs have backup policies applied</doc>
<status status="PASS" start="2025-10-08T22:29:47.173656" elapsed="0.000201"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-08T22:29:47.174071" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-08T22:29:47.173952" elapsed="0.000138"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.174246" level="INFO">Length is 0.</msg>
<msg time="2025-10-08T22:29:47.174300" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.174172" elapsed="0.000146"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.174516" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.174401" elapsed="0.000214"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-08T22:29:47.174665" elapsed="0.000037"/>
</return>
<msg time="2025-10-08T22:29:47.174804" level="INFO">${policy_results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${policy_results}</var>
<arg>${POLICY_DATA}</arg>
<doc>Validate all VMs have appropriate backup policies applied</doc>
<status status="PASS" start="2025-10-08T22:29:47.173034" elapsed="0.001789"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-08T22:29:47.175205" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${policy_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-08T22:29:47.175029" elapsed="0.000202"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.175540" level="INFO">Length is 0.</msg>
<msg time="2025-10-08T22:29:47.175612" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.175415" elapsed="0.000219"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.175939" level="INFO">📊 Policy validation: 0 violations found</msg>
<arg>📊 Policy validation: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.175809" elapsed="0.000239"/>
</kw>
<if>
<branch type="IF" condition="${violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.176450" elapsed="0.000016"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-08T22:29:47.176384" elapsed="0.000112"/>
</iter>
<var>${violation}</var>
<value>@{violations}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.176331" elapsed="0.000188"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Backup policy validation failed: ${violation_count} VMs without proper policies</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.176591" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.176196" elapsed="0.000432"/>
</branch>
<status status="PASS" start="2025-10-08T22:29:47.176168" elapsed="0.000478"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.176876" level="INFO">✅ Applied policy validated</msg>
<arg>✅ Applied policy validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.176782" elapsed="0.000216"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.177380" level="INFO">🔍 Validating backup schedule alignment with RPO requirements...</msg>
<arg>🔍 Validating backup schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.177286" elapsed="0.000220"/>
</kw>
<kw name="Validate Schedule Alignment With RPO" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.178038" level="INFO">✅ Validating schedule alignment with RPO requirements...</msg>
<arg>✅ Validating schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.177942" elapsed="0.000213"/>
</kw>
<kw name="Backup Validator Validate Rpo Alignment" owner="BackupValidator">
<msg time="2025-10-08T22:29:47.178542" level="FAIL">TypeError: '&gt;' not supported between instances of 'int' and 'str'</msg>
<var>${results}</var>
<arg>${schedule_data}</arg>
<arg>${VM_CRITICALITY}</arg>
<arg>${RPO_REQUIREMENTS}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-08T22:29:47.178283" elapsed="0.001159">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.179554" elapsed="0.000017"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.179647" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${rpo_violation_count} RPO violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.179734" elapsed="0.000014"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.179783" elapsed="0.000013"/>
</return>
<var>${schedule_results}</var>
<arg>${SCHEDULE_DATA}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-08T22:29:47.177727" elapsed="0.002163">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${schedule_results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.180141" elapsed="0.000023"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.180331" elapsed="0.000021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 RPO validation: ${rpo_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.180503" elapsed="0.000021"/>
</kw>
<if>
<branch type="IF" condition="${rpo_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ RPO Violation: VM ${violation['vm_name']} - Current: ${violation['current_rpo']}h, Required: ${violation['required_rpo']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.180825" elapsed="0.000017"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-08T22:29:47.180748" elapsed="0.000127"/>
</iter>
<var>${violation}</var>
<value>@{rpo_violations}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.180695" elapsed="0.000201"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>RPO validation failed: ${rpo_violation_count} VMs exceed RPO requirements</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.180979" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.180649" elapsed="0.000367"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:29:47.180630" elapsed="0.000404"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Schedule alignment with RPO validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.181160" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔍 Validating retention settings compliance...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.181299" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Minimum daily retention: ${MIN_DAILY_RETENTION} days</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.181498" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Minimum weekly retention: ${MIN_WEEKLY_RETENTION} weeks</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.181638" elapsed="0.000016"/>
</kw>
<kw name="Validate Retention Settings Compliance" owner="backup_keywords">
<var>${retention_results}</var>
<arg>${RETENTION_DATA}</arg>
<doc>Validate retention settings meet compliance standards</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.181829" elapsed="0.000020"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${retention_violations}</var>
<arg>${retention_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.181974" elapsed="0.000015"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${retention_violation_count}</var>
<arg>${retention_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.182111" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Retention validation: ${retention_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.182253" elapsed="0.000016"/>
</kw>
<if>
<branch type="IF" condition="${retention_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Retention Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.182494" elapsed="0.000014"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-08T22:29:47.182437" elapsed="0.000098"/>
</iter>
<var>${violation}</var>
<value>@{retention_violations}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.182402" elapsed="0.000152"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Retention validation failed: ${retention_violation_count} VMs with insufficient retention</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.182621" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.182370" elapsed="0.000285"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:29:47.182355" elapsed="0.000317"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Retention settings validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.182788" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔍 Validating recent backup job completion status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.182981" elapsed="0.000016"/>
</kw>
<kw name="Validate Recent Job Completion Status" owner="backup_keywords">
<var>${job_results}</var>
<arg>${JOB_STATUS}</arg>
<doc>Validate recent backup jobs completed successfully</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.183158" elapsed="0.000018"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${failed_jobs}</var>
<arg>${job_results}</arg>
<arg>failed_jobs</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.183302" elapsed="0.000015"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${failed_count}</var>
<arg>${failed_jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.183438" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Job validation: ${failed_count} failed jobs found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.183576" elapsed="0.000015"/>
</kw>
<if>
<branch type="IF" condition="${failed_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Failed Job: VM ${failed['vm_name']} - Status: ${failed['status']}, Error: ${failed['error_message']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.183811" elapsed="0.000013"/>
</kw>
<var name="${failed}"/>
<status status="NOT RUN" start="2025-10-08T22:29:47.183754" elapsed="0.000096"/>
</iter>
<var>${failed}</var>
<value>@{failed_jobs}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.183720" elapsed="0.000148"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Job validation failed: ${failed_count} backup jobs failed</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.183928" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.183689" elapsed="0.000308"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:29:47.183675" elapsed="0.000342"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Job completion status validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.184134" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔍 Validating backup recency...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.184270" elapsed="0.000014"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Maximum backup age: ${MAX_BACKUP_AGE_HOURS} hours</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.184486" elapsed="0.000016"/>
</kw>
<kw name="Validate Backup Recency" owner="backup_keywords">
<var>${recency_results}</var>
<arg>${TIMESTAMP_DATA}</arg>
<doc>Validate backups are recent and within acceptable time windows</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.184668" elapsed="0.000019"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${stale_backups}</var>
<arg>${recency_results}</arg>
<arg>stale_backups</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.184816" elapsed="0.000015"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${stale_count}</var>
<arg>${stale_backups}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.184953" elapsed="0.000014"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Recency validation: ${stale_count} stale backups found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.185082" elapsed="0.000015"/>
</kw>
<if>
<branch type="IF" condition="${stale_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Stale Backup: VM ${stale['vm_name']} - Last backup: ${stale['last_backup_time']}, Age: ${stale['age_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.185315" elapsed="0.000026"/>
</kw>
<var name="${stale}"/>
<status status="NOT RUN" start="2025-10-08T22:29:47.185256" elapsed="0.000125"/>
</iter>
<var>${stale}</var>
<value>@{stale_backups}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.185222" elapsed="0.000179"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Recency validation failed: ${stale_count} VMs have stale backups</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.185461" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.185193" elapsed="0.000301"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:29:47.185179" elapsed="0.000332"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Backup recency validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.185777" elapsed="0.000024"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔍 Validating offsite replication configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.186010" elapsed="0.000021"/>
</kw>
<kw name="Validate Offsite Replication Configuration" owner="backup_keywords">
<var>${replication_results}</var>
<arg>${REPLICATION_DATA}</arg>
<doc>Validate offsite replication is enabled for critical VMs</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.186530" elapsed="0.000555"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${offsite_violations}</var>
<arg>${replication_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.187291" elapsed="0.000021"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${offsite_violation_count}</var>
<arg>${offsite_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.187476" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Offsite validation: ${offsite_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.187631" elapsed="0.000017"/>
</kw>
<if>
<branch type="IF" condition="${offsite_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Offsite Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.187941" elapsed="0.000016"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-08T22:29:47.187879" elapsed="0.000105"/>
</iter>
<var>${violation}</var>
<value>@{offsite_violations}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.187824" elapsed="0.000182"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Offsite replication validation failed: ${offsite_violation_count} VMs missing offsite protection</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.188079" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.187774" elapsed="0.000342"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:29:47.187752" elapsed="0.000382"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Offsite replication validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.188302" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Backup compliance validation summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.188496" elapsed="0.000020"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Applied policy: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.188667" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Schedule alignment with RPO: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.188926" elapsed="0.000019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Retention settings: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.189076" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Job completion status: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.189213" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Backup recency: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.189361" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Offsite replication: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.189496" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Backup compliance validation: PASSED - All VMs meet data criticality requirements and compliance standards</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.189632" elapsed="0.000015"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.190483" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.190328" elapsed="0.000200"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.190777" level="INFO">❌ Completed: Critical - Validate Backup Compliance - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.190615" elapsed="0.000308"/>
</kw>
<status status="PASS" start="2025-10-08T22:29:47.190548" elapsed="0.000424"/>
</branch>
<status status="PASS" start="2025-10-08T22:29:47.190312" elapsed="0.000685"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-08T22:29:47.190064" elapsed="0.000995"/>
</kw>
<doc>✅ Compare all API-collected backup data (applied policy, schedule alignment with RPO, retention settings, job completion status, offsite replication) against data criticality requirements and compliance standards to ensure proper backup protection</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-08T22:29:47.170437" elapsed="0.020760">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</test>
<kw name="Generate Backup Validation Executive Summary" owner="backup_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.192399" level="INFO">📊 Generating Backup Validation Executive Summary...</msg>
<arg>📊 Generating Backup Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.192296" elapsed="0.000212"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:29:47.192791" level="INFO">${end_time} = 2025-10-08 22:29:47</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:29:47.192618" elapsed="0.000194"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.193940" level="INFO">${TEST_END_TIME} = 2025-10-08 22:29:47</msg>
<arg>${TEST_END_TIME}</arg>
<arg>${end_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:29:47.192909" elapsed="0.001066"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.194159" level="INFO">${summary_file} = results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-08T22:29:47.194059" elapsed="0.000120"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.194497" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:29:47
🎯 vCenter Server: all...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>💾 TEST-15: BACKUP VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${end_time}</arg>
<arg>🎯 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>📋 Test Suite: Test-15 Backup Configuration Validation</arg>
<arg>========================================</arg>
<arg>📋 TEST OBJECTIVES</arg>
<arg>========================================</arg>
<arg>1. Connect to vCenter REST API</arg>
<arg>2. Collect backup configuration via API calls</arg>
<arg>3. Validate backup compliance against standards</arg>
<arg>========================================</arg>
<arg>📊 VALIDATION SCOPE</arg>
<arg>========================================</arg>
<arg>✅ Backup policy application</arg>
<arg>✅ Schedule alignment with RPO</arg>
<arg>✅ Retention settings compliance</arg>
<arg>✅ Recent job completion status</arg>
<arg>✅ Backup recency validation</arg>
<arg>✅ Offsite replication configuration</arg>
<arg>========================================</arg>
<arg>📋 TARGET VMS</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:47.194254" elapsed="0.000267"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.194954" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:29:47
🎯 vCenter Server: all...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:47.194788" elapsed="0.000189"/>
</kw>
<var name="${vm}">production-db-01</var>
<status status="PASS" start="2025-10-08T22:29:47.194728" elapsed="0.000284"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.195279" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:29:47
🎯 vCenter Server: all...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:47.195135" elapsed="0.000167"/>
</kw>
<var name="${vm}">production-web-01</var>
<status status="PASS" start="2025-10-08T22:29:47.195070" elapsed="0.000264"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.195581" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:29:47
🎯 vCenter Server: all...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:47.195444" elapsed="0.000159"/>
</kw>
<var name="${vm}">production-app-01</var>
<status status="PASS" start="2025-10-08T22:29:47.195390" elapsed="0.000252"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.195886" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:29:47
🎯 vCenter Server: all...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:47.195750" elapsed="0.000157"/>
</kw>
<var name="${vm}">file-server-01</var>
<status status="PASS" start="2025-10-08T22:29:47.195697" elapsed="0.000358"/>
</iter>
<var>${vm}</var>
<value>@{TARGET_VMS}</value>
<status status="PASS" start="2025-10-08T22:29:47.194626" elapsed="0.001456"/>
</for>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.196467" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:29:47
🎯 vCenter Server: all...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>========================================</arg>
<arg>🔍 COMPLIANCE REQUIREMENTS</arg>
<arg>========================================</arg>
<arg>📅 Maximum backup age: ${MAX_BACKUP_AGE_HOURS} hours</arg>
<arg>💾 Minimum daily retention: ${MIN_DAILY_RETENTION} days</arg>
<arg>📦 Minimum weekly retention: ${MIN_WEEKLY_RETENTION} weeks</arg>
<arg>🌐 Offsite replication: Required for critical VMs</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 API data collected in JSON format</arg>
<arg>📊 Robot Framework reports: results/test15_backup_validation/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>💾 Backup policies validated</arg>
<arg>📅 Schedule compliance verified</arg>
<arg>🗄️ Retention settings confirmed</arg>
<arg>🌐 Offsite replication validated</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:47.196169" elapsed="0.000322"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-08T22:29:47.197323" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation\Test15_Backup_Validation_Executive_Summary.txt"&gt;C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation\Test15_Backup_Validation_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-08T22:29:47.196622" elapsed="0.000754"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.197590" level="INFO">📊 Executive summary generated: results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.197465" elapsed="0.000268"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.197973" level="INFO">✅ Test-15 Backup Validation completed successfully!</msg>
<arg>✅ Test-15 Backup Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.197857" elapsed="0.000268"/>
</kw>
<if>
<branch type="IF" condition="${VCENTER_API_CONN}">
<kw name="Vcenter Api Disconnect" owner="VCenterAPILibrary">
<arg>${VCENTER_API_CONN}</arg>
<doc>Disconnect from vCenter API</doc>
<status status="PASS" start="2025-10-08T22:29:47.198323" elapsed="0.000095"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.198585" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.198496" elapsed="0.000198"/>
</kw>
<status status="PASS" start="2025-10-08T22:29:47.198204" elapsed="0.000550"/>
</branch>
<status status="PASS" start="2025-10-08T22:29:47.198185" elapsed="0.000602"/>
</if>
<doc>Generate executive summary report for backup validation test</doc>
<status status="PASS" start="2025-10-08T22:29:47.192145" elapsed="0.006697"/>
</kw>
<doc>💾 Backup Configuration Validation Test Suite - Test-15
🔍 Process: Connect to vCenter API → Collect Backup Configuration → Validate Backup Compliance
✅ Pass if backup configuration meets data criticality requirements and compliance standards
📊 Validates: Backup policies, schedules, retention, job status, offsite replication</doc>
<status status="FAIL" start="2025-10-08T22:29:47.011924" elapsed="0.186952"/>
</suite>
<suite id="s1-s2" name="Av Agent Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test20_av_agent_validation\av_agent_validation.robot">
<kw name="Initialize AV Agent Validation Test Environment" owner="av_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:48.020840" level="INFO">🚀 Initializing AV Agent Validation Test Suite (Test-20)</msg>
<arg>🚀 Initializing AV Agent Validation Test Suite (Test-20)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:48.020669" elapsed="0.000317"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:48.021262" level="INFO">🎯 Target Machine: allxdvitap01</msg>
<arg>🎯 Target Machine: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:48.021126" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:48.021690" level="INFO">🛡️ Expected AV Type: Sentinel</msg>
<arg>🛡️ Expected AV Type: ${AV_TYPE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:48.021535" elapsed="0.000289"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_HOSTNAME}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-08T22:29:48.021940" elapsed="0.000178"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-08T22:29:48.022365" level="INFO">Logging into 'allxdvitap01:22' as 'test'.</msg>
<msg time="2025-10-08T22:29:52.848519" level="FAIL">NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</msg>
<var>${login_output}</var>
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="FAIL" start="2025-10-08T22:29:48.022215" elapsed="4.829197">NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 SSH connection established to ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:52.851577" elapsed="0.000023"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<arg>${TEST20_RESULTS_DIR}</arg>
<arg>parents=True</arg>
<doc>Creates the specified directory.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:52.851680" elapsed="0.000014"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<arg>${TEST20_DATA_DIR}</arg>
<arg>parents=True</arg>
<doc>Creates the specified directory.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:52.851761" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ AV Agent Validation Test Environment Initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:52.851835" elapsed="0.000012"/>
</kw>
<doc>Initialize test environment and establish SSH connection to target machine</doc>
<status status="FAIL" start="2025-10-08T22:29:48.020126" elapsed="4.831818">NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</kw>
<test id="s1-s2-t1" name="Critical - Connect to AV Console" line="18">
<doc>🔗 SSH directly to the target machine to check Sentinel or McAfee installation status</doc>
<tag>av_console</tag>
<tag>connection</tag>
<tag>critical</tag>
<status status="FAIL" start="2025-10-08T22:29:52.852026" elapsed="0.000553">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t2" name="Critical - Collect AV Agent Information" line="36">
<doc>📊 Execute antivirus commands to gather agent installation status, real-time protection settings, signature update dates, scan schedules, and exclusion configurations while capturing screenshots of console listings and saving outputs</doc>
<tag>av_collection</tag>
<tag>critical</tag>
<tag>information</tag>
<status status="FAIL" start="2025-10-08T22:29:52.853201" elapsed="0.000604">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<test id="s1-s2-t3" name="Critical - Validate AV Protection" line="93">
<doc>✅ Compare all collected antivirus data (agent installation, real-time protection status, signature currency, console reporting, scheduled scans, exclusion policies) against CIP-007 R3.1 requirements to ensure proper malware protection and compliance</doc>
<tag>cip007_r31</tag>
<tag>compliance</tag>
<tag>critical</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-08T22:29:52.854303" elapsed="0.000600">Parent suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</test>
<kw name="Generate AV Agent Validation Executive Summary" owner="av_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:52.855959" level="INFO">📊 Generating AV Agent Validation Executive Summary...</msg>
<arg>📊 Generating AV Agent Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:52.855837" elapsed="0.000219"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:52.856286" level="INFO">${summary_file} = results/test20_av_agent_validation/Test20_AV_Agent_Validation_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>${TEST20_RESULTS_DIR}/Test20_AV_Agent_Validation_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-08T22:29:52.856151" elapsed="0.000154"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:52.857978" level="INFO">${summary} = ========================================
AV AGENT VALIDATION - EXECUTIVE SUMMARY
========================================

Test Suite: Test-20 AV Agent Validation
Target Machine: allxdvitap01
AV Type:...</msg>
<var>${summary}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>AV AGENT VALIDATION - EXECUTIVE SUMMARY</arg>
<arg>========================================</arg>
<arg>${EMPTY}</arg>
<arg>Test Suite: Test-20 AV Agent Validation</arg>
<arg>Target Machine: ${TARGET_HOSTNAME}</arg>
<arg>AV Type: ${AV_TYPE}</arg>
<arg>${EMPTY}</arg>
<arg>CIP-007 R3.1 COMPLIANCE:</arg>
<arg>- Agent Installation: VALIDATED</arg>
<arg>- Real-Time Protection: VALIDATED</arg>
<arg>- Signature Currency: VALIDATED</arg>
<arg>- Console Reporting: VALIDATED</arg>
<arg>- Scheduled Scans: VALIDATED</arg>
<arg>- Exclusion Policies: VALIDATED</arg>
<arg>${EMPTY}</arg>
<arg>VALIDATION STATUS:</arg>
<arg>- See detailed test report for validation results</arg>
<arg>${EMPTY}</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:52.856386" elapsed="0.001614"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-08T22:29:52.858770" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test20_av_agent_validation\Test20_AV_Agent_Validation_Executive_Summary.txt"&gt;C:\Users\write\project_2025\robot\robotframework\results\test20_av_agent_validation\Test20_AV_Agent_Validation_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-08T22:29:52.858107" elapsed="0.000713"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:52.859143" level="INFO">✅ Executive Summary generated: results/test20_av_agent_validation/Test20_AV_Agent_Validation_Executive_Summary.txt</msg>
<arg>✅ Executive Summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:52.859006" elapsed="0.000271"/>
</kw>
<doc>Generate executive summary for AV agent validation test results</doc>
<status status="PASS" start="2025-10-08T22:29:52.855651" elapsed="0.003720"/>
</kw>
<doc>🛡️ AV Agent Validation Test Suite - Test-20
🔍 Process: Connect to AV Console → Collect AV Agent Information → Validate AV Protection
✅ Pass if antivirus configuration meets CIP-007 R3.1 requirements for malware protection
📊 Validates: Agent installation, real-time protection, signature updates, scan schedules, exclusions</doc>
<status status="FAIL" start="2025-10-08T22:29:47.810490" elapsed="5.048919">Suite setup failed:
NoValidConnectionsError: [Errno None] Unable to connect to port 22 on 192.168.1.1</status>
</suite>
<suite id="s1-s3" name="Network Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test3_network_validation\network_validation.robot">
<kw name="Initialize Test Environment And Lookup Configuration" owner="network_keywords" type="SETUP">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:29:54.328773" level="INFO">${start_time} = 2025-10-08 22:29:54</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:29:54.328557" elapsed="0.000250"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.329721" level="INFO">${TEST_START_TIME} = 2025-10-08 22:29:54</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:54.328917" elapsed="0.000844"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${TEST_SUITE_ID}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-08T22:29:54.330354" elapsed="0.000094"/>
</kw>
<msg time="2025-10-08T22:29:54.330510" level="INFO">${suite_id} = test3</msg>
<var>${suite_id}</var>
<arg>'${TEST_SUITE_ID}' == '${EMPTY}'</arg>
<arg>Auto Detect Test Suite ID</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${TEST_SUITE_ID}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-08T22:29:54.329857" elapsed="0.000679"/>
</kw>
<kw name="Auto Detect Test Suite Name" owner="network_keywords">
<kw name="Get Variable Value" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.330944" level="INFO">${suite_source} = C:\Users\write\project_2025\robot\robotframework\tests\test3_network_validation\network_validation.robot</msg>
<var>${suite_source}</var>
<arg>${SUITE_SOURCE}</arg>
<arg>${EMPTY}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<status status="PASS" start="2025-10-08T22:29:54.330823" elapsed="0.000140"/>
</kw>
<kw name="Split String" owner="String">
<msg time="2025-10-08T22:29:54.331177" level="INFO">${path_parts} = ['C:', 'Users', 'write', 'project_2025', 'robot', 'robotframework', 'tests', 'test3_network_validation', 'network_validation.robot']</msg>
<var>${path_parts}</var>
<arg>${suite_source}</arg>
<arg>${/}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="PASS" start="2025-10-08T22:29:54.331047" elapsed="0.000149"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.331752" level="FAIL">'C:' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-08T22:29:54.331546" elapsed="0.000336">'C:' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-08T22:29:54.331956" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-08T22:29:54.331434" elapsed="0.000539"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-08T22:29:54.332067" elapsed="0.000075"/>
</kw>
<var name="${part}">C:</var>
<status status="PASS" start="2025-10-08T22:29:54.331364" elapsed="0.000807"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.332512" level="FAIL">'Users' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-08T22:29:54.332394" elapsed="0.000177">'Users' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-08T22:29:54.332637" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-08T22:29:54.332305" elapsed="0.000349"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-08T22:29:54.332734" elapsed="0.000072"/>
</kw>
<var name="${part}">Users</var>
<status status="PASS" start="2025-10-08T22:29:54.332241" elapsed="0.000593"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.333154" level="FAIL">'write' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-08T22:29:54.333040" elapsed="0.000153">'write' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-08T22:29:54.333258" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-08T22:29:54.332954" elapsed="0.000320"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-08T22:29:54.333353" elapsed="0.000081"/>
</kw>
<var name="${part}">write</var>
<status status="PASS" start="2025-10-08T22:29:54.332895" elapsed="0.000579"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.333887" level="FAIL">'project_2025' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-08T22:29:54.333735" elapsed="0.000191">'project_2025' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-08T22:29:54.333988" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-08T22:29:54.333628" elapsed="0.000376"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-08T22:29:54.334084" elapsed="0.000072"/>
</kw>
<var name="${part}">project_2025</var>
<status status="PASS" start="2025-10-08T22:29:54.333567" elapsed="0.000627"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.334537" level="FAIL">'robot' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-08T22:29:54.334435" elapsed="0.000141">'robot' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-08T22:29:54.334840" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-08T22:29:54.334340" elapsed="0.000520"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-08T22:29:54.334949" elapsed="0.000077"/>
</kw>
<var name="${part}">robot</var>
<status status="PASS" start="2025-10-08T22:29:54.334254" elapsed="0.000800"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.335380" level="FAIL">'robotframework' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-08T22:29:54.335268" elapsed="0.000154">'robotframework' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-08T22:29:54.335484" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-08T22:29:54.335179" elapsed="0.000332"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-08T22:29:54.335632" elapsed="0.000073"/>
</kw>
<var name="${part}">robotframework</var>
<status status="PASS" start="2025-10-08T22:29:54.335116" elapsed="0.000617"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.336097" level="FAIL">'tests' does not match '^test\d+_'</msg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="FAIL" start="2025-10-08T22:29:54.335954" elapsed="0.000186">'tests' does not match '^test\d+_'</status>
</kw>
<msg time="2025-10-08T22:29:54.336203" level="INFO">${is_test_dir} = False</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-08T22:29:54.335867" elapsed="0.000353"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-08T22:29:54.336371" elapsed="0.000072"/>
</kw>
<var name="${part}">tests</var>
<status status="PASS" start="2025-10-08T22:29:54.335806" elapsed="0.000666"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-08T22:29:54.336686" elapsed="0.000101"/>
</kw>
<msg time="2025-10-08T22:29:54.336844" level="INFO">${is_test_dir} = True</msg>
<var>${is_test_dir}</var>
<arg>Should Match Regexp</arg>
<arg>${part}</arg>
<arg>^test\\d+_</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-10-08T22:29:54.336592" elapsed="0.000269"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Return From Keyword" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.337109" level="INFO">Returning from the enclosing user keyword.</msg>
<arg>${part}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" start="2025-10-08T22:29:54.337059" elapsed="0.000096"/>
</kw>
<arg>${is_test_dir}</arg>
<arg>Return From Keyword</arg>
<arg>${part}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-08T22:29:54.336942" elapsed="0.000247"/>
</kw>
<var name="${part}">test3_network_validation</var>
<status status="PASS" start="2025-10-08T22:29:54.336531" elapsed="0.000694"/>
</iter>
<var>${part}</var>
<value>@{path_parts}</value>
<status status="PASS" start="2025-10-08T22:29:54.331247" elapsed="0.006010"/>
</for>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Could not auto-detect test suite name, defaulting to test3_network_validation</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.337355" elapsed="0.000015"/>
</kw>
<return>
<value>test3_network_validation</value>
<status status="NOT RUN" start="2025-10-08T22:29:54.337411" elapsed="0.000021"/>
</return>
<msg time="2025-10-08T22:29:54.337534" level="INFO">${suite_name} = test3_network_validation</msg>
<var>${suite_name}</var>
<doc>Auto-detect full test suite name from current working directory or test file path</doc>
<status status="PASS" start="2025-10-08T22:29:54.330698" elapsed="0.006853"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.337776" level="INFO">${TEST_SUITE_ID} = test3</msg>
<arg>${TEST_SUITE_ID}</arg>
<arg>${suite_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:54.337646" elapsed="0.000160"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.338002" level="INFO">${TEST_SUITE_NAME} = Hostname Validation Test Suite - test3</msg>
<arg>${TEST_SUITE_NAME}</arg>
<arg>Hostname Validation Test Suite - ${suite_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:54.337884" elapsed="0.000145"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.338235" level="INFO">${TEST_REPORTS_DIR} = C:\Users\write\project_2025\robot\robotframework/results/test3_network_validation</msg>
<arg>${TEST_REPORTS_DIR}</arg>
<arg>${REPORTS_DIR}/${suite_name}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:54.338104" elapsed="0.000158"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:54.338447" level="INFO">${DATA_DIR} = C:\Users\write\project_2025\robot\robotframework/results/test3_network_validation/data</msg>
<arg>${DATA_DIR}</arg>
<arg>${TEST_REPORTS_DIR}/data</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:54.338337" elapsed="0.000136"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-08T22:29:54.338719" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results"&gt;C:\Users\write\project_2025\robot\robotframework\results&lt;/a&gt;' already exists.</msg>
<arg>${REPORTS_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-08T22:29:54.338543" elapsed="0.000219"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-08T22:29:54.338953" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test3_network_validation"&gt;C:\Users\write\project_2025\robot\robotframework\results\test3_network_validation&lt;/a&gt;' already exists.</msg>
<arg>${TEST_REPORTS_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-08T22:29:54.338837" elapsed="0.000273"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-08T22:29:54.339317" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test3_network_validation\data"&gt;C:\Users\write\project_2025\robot\robotframework\results\test3_network_validation\data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-08T22:29:54.339196" elapsed="0.000162"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n🔍 Looking up configuration for hostname: ${TARGET_HOSTNAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-08T22:29:54.339439" elapsed="0.000278"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-08T22:29:54.352292" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-08T22:29:54.352537" level="INFO">Available hostnames: ['alhxvdvitap01', 'alhxvdvitag01', 'alhxvqaitiap01', 'alhxvqaitiap02', 'alhxvqaitred01', 'alhxvqaitred02', 'alhxvqaitred03', 'alhxvqaitmdb01', 'alhxvqaitmdb02', 'alhxvqaitmdb03', 'alhxvqaitag01', 'alhxvqaitag02', 'alhxvpritiap01', 'alhxvpritiap02']</msg>
<msg time="2025-10-08T22:29:54.352654" level="FAIL">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</msg>
<var>${config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="FAIL" start="2025-10-08T22:29:54.339842" elapsed="0.013872">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_IP}</arg>
<arg>${config}[ip]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.353977" elapsed="0.000027"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_SUBNET}</arg>
<arg>${config}[subnet]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.354103" elapsed="0.000015"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_MASK}</arg>
<arg>${config}[mask]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.354194" elapsed="0.000014"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_GATEWAY}</arg>
<arg>${config}[gateway]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.354291" elapsed="0.000013"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_CNAME}</arg>
<arg>${config}[cname]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.354374" elapsed="0.000015"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_DOMAIN}</arg>
<arg>${config}[domain]</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.354457" elapsed="0.000085"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n📋 EDS Configuration for ${TARGET_HOSTNAME}:</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.354624" elapsed="0.000043"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 IP: ${TARGET_IP}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.354772" elapsed="0.000019"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 Subnet: ${TARGET_SUBNET}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.354865" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 Gateway: ${TARGET_GATEWAY}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.354948" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 CNAME: ${TARGET_CNAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.355031" elapsed="0.000013"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📍 Domain: ${TARGET_DOMAIN}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.355111" elapsed="0.000013"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n🚀 ===================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.355191" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🌐 NETWORK VALIDATION: EDS vs SERVER COMPARISON</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.355271" elapsed="0.000013"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>⚡ Test Suite: ${suite_id} (${TEST_SUITE_NAME})</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.355350" elapsed="0.000012"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>═══════════════════════════════════════════════════</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.355442" elapsed="0.000012"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📅 Start Time: ${start_time}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.355517" elapsed="0.000012"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🎯 Target Hostname: ${TARGET_HOSTNAME}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.355595" elapsed="0.000012"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🌐 SSH Target IP: ${TARGET_IP}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.355687" elapsed="0.000014"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 Suite Reports: ${TEST_REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.355764" elapsed="0.000013"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 Overall Reports: ${REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.355841" elapsed="0.000012"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>===================================================</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:54.355917" elapsed="0.000012"/>
</kw>
<doc>🚀 Load EDS configuration and prepare for server validation</doc>
<status status="FAIL" start="2025-10-08T22:29:54.328004" elapsed="0.028052">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<test id="s1-s3-t1" name="Critical - Hostname Validation" line="18">
<doc>🔧 SSH to server and compare hostname with EDS expectation</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hostname</tag>
<status status="FAIL" start="2025-10-08T22:29:54.356154" elapsed="0.000561">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s3-t2" name="Critical - IP Address Validation" line="37">
<doc>🌐 SSH to server and compare IP configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>ip</tag>
<tag>networking</tag>
<status status="FAIL" start="2025-10-08T22:29:54.357318" elapsed="0.000605">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s3-t3" name="Critical - Subnet Validation" line="56">
<doc>🌍 SSH to server and compare subnet configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>networking</tag>
<tag>subnet</tag>
<status status="FAIL" start="2025-10-08T22:29:54.358421" elapsed="0.000346">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s3-t4" name="Critical - Gateway Validation" line="75">
<doc>🛣️ SSH to server and compare gateway configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>gateway</tag>
<tag>networking</tag>
<status status="FAIL" start="2025-10-08T22:29:54.359203" elapsed="0.000397">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s3-t5" name="Critical - DNS Name Validation" line="94">
<doc>🌐 SSH to server and compare DNS configuration with EDS expectation</doc>
<tag>critical</tag>
<tag>dns</tag>
<tag>hostname</tag>
<status status="FAIL" start="2025-10-08T22:29:54.360020" elapsed="0.000429">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<test id="s1-s3-t6" name="Normal - NTP Configuration Validation" line="117">
<doc>📈 SSH to server and validate NTP service is running</doc>
<tag>normal</tag>
<tag>ntp</tag>
<tag>time</tag>
<status status="FAIL" start="2025-10-08T22:29:54.360898" elapsed="0.000389">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</test>
<kw name="Generate Executive Summary" owner="network_keywords" type="TEARDOWN">
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:29:54.362686" level="INFO">${end_time} = 2025-10-08 22:29:54</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:29:54.362446" elapsed="0.000269"/>
</kw>
<kw name="Subtract Date From Date" owner="DateTime">
<msg time="2025-10-08T22:29:54.363407" level="INFO">${duration} = 0.0</msg>
<var>${duration}</var>
<arg>${end_time}</arg>
<arg>${TEST_START_TIME}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<status status="PASS" start="2025-10-08T22:29:54.362813" elapsed="0.000619"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-08T22:29:54.363521" elapsed="0.000072"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n🎯 ═══════════════════════════════════════════════════════════════</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-08T22:29:54.363698" elapsed="0.000261"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 EXECUTIVE SUMMARY - ${TEST_SUITE_ID} EDS vs SERVER VALIDATION</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-08T22:29:54.364064" elapsed="0.000232"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>═══════════════════════════════════════════════════════════════</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-08T22:29:54.364397" elapsed="0.000193"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>⏱️ Duration: ${duration} seconds</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-08T22:29:54.364721" elapsed="0.000227"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🎯 Target: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-08T22:29:54.365067" elapsed="0.000225"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📋 EDS Data: Successfully loaded and compared</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-08T22:29:54.365388" elapsed="0.000143"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🔌 SSH Connection: Used for server validation</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-08T22:29:54.365622" elapsed="0.000132"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 Suite Reports: ${TEST_REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-08T22:29:54.365846" elapsed="0.000181"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>📊 Overall Reports: ${REPORTS_DIR}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-08T22:29:54.366118" elapsed="0.000167"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>🏆 Overall Status: TEST COMPLETED</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-08T22:29:54.366381" elapsed="0.000133"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>═══════════════════════════════════════════════════════════════</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2025-10-08T22:29:54.366604" elapsed="0.000127"/>
</kw>
<doc>Generate test summary and close connections</doc>
<status status="PASS" start="2025-10-08T22:29:54.362228" elapsed="0.004563"/>
</kw>
<doc>🌐 Hostname Validation Test Suite - Test-3
🔍 Process: Find hostname in EDS → SSH to IP → Compare server vs EDS
✅ Pass if server matches EDS, ❌ Fail if mismatch</doc>
<status status="FAIL" start="2025-10-08T22:29:53.674421" elapsed="0.692401">Suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</suite>
<suite id="s1-s4" name="Vm Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test4_vm_validation\vm_validation.robot">
<kw name="Initialize VM Test Environment And Lookup Configuration" owner="variables" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.780106" level="INFO">🚀 Initializing VM Validation Test Suite (Test-4)</msg>
<arg>🚀 Initializing VM Validation Test Suite (Test-4)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.779949" elapsed="0.000299"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.780511" level="INFO">🎯 Target VM: allxdvitap01</msg>
<arg>🎯 Target VM: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.780376" elapsed="0.000268"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-08T22:29:55.794708" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-08T22:29:55.794953" level="INFO">Available hostnames: ['alhxvdvitap01', 'alhxvdvitag01', 'alhxvqaitiap01', 'alhxvqaitiap02', 'alhxvqaitred01', 'alhxvqaitred02', 'alhxvqaitred03', 'alhxvqaitmdb01', 'alhxvqaitmdb02', 'alhxvqaitmdb03', 'alhxvqaitag01', 'alhxvqaitag02', 'alhxvpritiap01', 'alhxvpritiap02']</msg>
<msg time="2025-10-08T22:29:55.795113" level="FAIL">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="FAIL" start="2025-10-08T22:29:55.780758" elapsed="0.015312">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VXRAIL_CLUSTER}</arg>
<arg>${eds_config['vxrail_cluster']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.796270" elapsed="0.000025"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${vcenter_from_eds}</var>
<arg>${eds_config['vcenter_host']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.796379" elapsed="0.000015"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<var>${final_vcenter_host}</var>
<arg>'${vcenter_from_eds}' == 'N/A'</arg>
<arg>Set Variable</arg>
<arg>${DEFAULT_VCENTER_HOST}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${vcenter_from_eds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.796474" elapsed="0.000014"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VCENTER_HOST}</arg>
<arg>${final_vcenter_host}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.796569" elapsed="0.000013"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_CPU_CORES}</arg>
<arg>${eds_config['cpu_cores']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.796652" elapsed="0.000014"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_RAM}</arg>
<arg>${eds_config['ram']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.796734" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_HARDWARE_VERSION}</arg>
<arg>${eds_config['vm_hardware_version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.796815" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_MEMORY_RESERVATION}</arg>
<arg>${eds_config['vm_memory_reservation']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.796892" elapsed="0.000013"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_VM_CPU_RESERVATION}</arg>
<arg>${eds_config['vm_cpu_reservation']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.796971" elapsed="0.000012"/>
</kw>
<kw name="Get Environment Variable" owner="OperatingSystem">
<var>${env_vcenter_user}</var>
<arg>VCENTER_USERNAME</arg>
<arg>${VCENTER_USERNAME}</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.797196" elapsed="0.000018"/>
</kw>
<kw name="Get Environment Variable" owner="OperatingSystem">
<var>${env_vcenter_pass}</var>
<arg>VCENTER_PASSWORD</arg>
<arg>${VCENTER_PASSWORD}</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.797293" elapsed="0.000014"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${VCENTER_USERNAME}</arg>
<arg>${env_vcenter_user}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.797390" elapsed="0.000013"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${VCENTER_PASSWORD}</arg>
<arg>${env_vcenter_pass}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.797472" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS Configuration Retrieved:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.797547" elapsed="0.000035"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - VxRail Cluster: ${TARGET_VXRAIL_CLUSTER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.797649" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - vCenter Host: ${TARGET_VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.797723" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - CPU Cores: ${TARGET_VM_CPU_CORES}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.797797" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - RAM: ${TARGET_VM_RAM}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.797876" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 - Hardware Version: ${TARGET_VM_HARDWARE_VERSION}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.797953" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ VM Test Environment Initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:55.798026" elapsed="0.000011"/>
</kw>
<doc>Initialize test environment and lookup VM configuration from EDS</doc>
<status status="FAIL" start="2025-10-08T22:29:55.779457" elapsed="0.018691">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<test id="s1-s4-t1" name="Critical - vCenter API Connection" line="21">
<doc>🔌 Establish API connection to vCenter and retrieve VM details</doc>
<tag>api</tag>
<tag>connection</tag>
<tag>critical</tag>
<tag>vcenter</tag>
<status status="FAIL" start="2025-10-08T22:29:55.798373" elapsed="0.000487">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t2" name="Critical - VM Cluster Placement Validation" line="48">
<doc>🏢 Validate VM is placed in the correct VxRail cluster per EDS specification</doc>
<tag>cluster</tag>
<tag>compliance</tag>
<tag>critical</tag>
<tag>placement</tag>
<status status="FAIL" start="2025-10-08T22:29:55.799431" elapsed="0.000392">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t3" name="Critical - VM CPU Configuration Validation" line="62">
<doc>💻 Validate VM CPU allocation matches EDS specification</doc>
<tag>compliance</tag>
<tag>cpu</tag>
<tag>critical</tag>
<tag>hardware</tag>
<status status="FAIL" start="2025-10-08T22:29:55.800268" elapsed="0.000414">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t4" name="Critical - VM Memory Configuration Validation" line="76">
<doc>🧠 Validate VM memory allocation matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hardware</tag>
<tag>memory</tag>
<status status="FAIL" start="2025-10-08T22:29:55.801205" elapsed="0.000429">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t5" name="Critical - VM Hardware Version Validation" line="90">
<doc>⚙️ Validate VM hardware version matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hardware</tag>
<tag>version</tag>
<status status="FAIL" start="2025-10-08T22:29:55.802065" elapsed="0.000366">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t6" name="Critical - VM Network Adapter Validation" line="104">
<doc>🌐 Validate VM network adapter configuration</doc>
<tag>adapters</tag>
<tag>compliance</tag>
<tag>critical</tag>
<tag>network</tag>
<status status="FAIL" start="2025-10-08T22:29:55.802910" elapsed="0.000336">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t7" name="Critical - VM Disk Configuration Validation" line="118">
<doc>💾 Validate VM disk configuration and capacity</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>disk</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-08T22:29:55.803674" elapsed="0.000361">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<test id="s1-s4-t8" name="Normal - VM Properties Comprehensive Review" line="132">
<doc>📋 Review all VM properties and configuration details</doc>
<tag>analysis</tag>
<tag>normal</tag>
<tag>properties</tag>
<tag>review</tag>
<status status="FAIL" start="2025-10-08T22:29:55.804465" elapsed="0.000415">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Recursive execution stopped.</status>
</test>
<kw name="Generate VM Executive Summary And Disconnect" type="TEARDOWN">
<kw name="Generate VM Executive Summary" owner="variables">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.806475" level="INFO">📊 Generating VM Validation Executive Summary...</msg>
<arg>📊 Generating VM Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.806330" elapsed="0.000293"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.806954" level="INFO">${summary_file} = C:\Users\write\project_2025\robot\robotframework\results\test4_vm_validation/Test4_VM_Validation_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>${OUTPUT_DIR}/Test4_VM_Validation_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-08T22:29:55.806741" elapsed="0.000237"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.808813" level="INFO">${summary} = ========================================
VM VALIDATION TEST - EXECUTIVE SUMMARY
========================================

Test Suite: Test-4 VM Validation
Target VM: allxdvitap01

EDS CONFIGURATION:
-...</msg>
<var>${summary}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>VM VALIDATION TEST - EXECUTIVE SUMMARY</arg>
<arg>========================================</arg>
<arg>${EMPTY}</arg>
<arg>Test Suite: Test-4 VM Validation</arg>
<arg>Target VM: ${TARGET_HOSTNAME}</arg>
<arg>${EMPTY}</arg>
<arg>EDS CONFIGURATION:</arg>
<arg>- VxRail Cluster: ${TARGET_VXRAIL_CLUSTER}</arg>
<arg>- vCenter Host: ${TARGET_VCENTER_HOST}</arg>
<arg>- Expected CPU Cores: ${TARGET_VM_CPU_CORES}</arg>
<arg>- Expected RAM: ${TARGET_VM_RAM}</arg>
<arg>- Expected Hardware Version: ${TARGET_VM_HARDWARE_VERSION}</arg>
<arg>- Memory Reservation: ${TARGET_VM_MEMORY_RESERVATION}</arg>
<arg>- CPU Reservation: ${TARGET_VM_CPU_RESERVATION}</arg>
<arg>${EMPTY}</arg>
<arg>VALIDATION STATUS:</arg>
<arg>- See detailed test report for validation results</arg>
<arg>${EMPTY}</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:55.807066" elapsed="0.001775"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-08T22:29:55.809689" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test4_vm_validation\Test4_VM_Validation_Executive_Summary.txt"&gt;C:\Users\write\project_2025\robot\robotframework\results\test4_vm_validation\Test4_VM_Validation_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-08T22:29:55.808979" elapsed="0.000770"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.810006" level="INFO">✅ Executive Summary generated: C:\Users\write\project_2025\robot\robotframework\results\test4_vm_validation/Test4_VM_Validation_Executive_Summary.txt</msg>
<arg>✅ Executive Summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.809851" elapsed="0.000614"/>
</kw>
<doc>Generate executive summary for VM validation test results</doc>
<status status="PASS" start="2025-10-08T22:29:55.806178" elapsed="0.004382"/>
</kw>
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<kw name="Disconnect From vCenter" owner="vm_keywords">
<msg time="2025-10-08T22:29:55.832312" level="FAIL">Recursive execution stopped.</msg>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.832041" elapsed="0.000311">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.832677" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.832525" elapsed="0.000364"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.831925" elapsed="0.001234">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.833582" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.833443" elapsed="0.000304"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.831811" elapsed="0.002166">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.834225" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.834122" elapsed="0.000240"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.831700" elapsed="0.002892">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.834837" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.834735" elapsed="0.000226"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.831579" elapsed="0.003582">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.835396" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.835301" elapsed="0.000191"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.831460" elapsed="0.004224">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.837991" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.837812" elapsed="0.000386"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.831230" elapsed="0.007526">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.839275" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.839041" elapsed="0.000472"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.831030" elapsed="0.008772">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.840180" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.840023" elapsed="0.000376"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.830911" elapsed="0.009740">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.840933" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.840826" elapsed="0.000244"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.830797" elapsed="0.010472">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.841513" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.841415" elapsed="0.000218"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.830669" elapsed="0.011158">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.842056" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.841964" elapsed="0.000203"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.830554" elapsed="0.011825">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.842629" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.842523" elapsed="0.000233"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.830432" elapsed="0.012566">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.843305" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.843178" elapsed="0.000242"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.830318" elapsed="0.013337">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.843890" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.843797" elapsed="0.000199"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.830124" elapsed="0.014060">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.844408" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.844317" elapsed="0.000189"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.830009" elapsed="0.014679">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.844918" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.844830" elapsed="0.000206"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.829896" elapsed="0.015322">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.845440" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.845351" elapsed="0.000221"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.829752" elapsed="0.016083">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.846275" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.846142" elapsed="0.000260"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.829632" elapsed="0.016977">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.846854" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.846744" elapsed="0.000233"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.829511" elapsed="0.017670">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.847421" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.847319" elapsed="0.000223"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.829311" elapsed="0.021894">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.851690" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.851473" elapsed="0.000404"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.829086" elapsed="0.023039">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.852566" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.852336" elapsed="0.000393"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.828976" elapsed="0.024000">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.853209" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.853110" elapsed="0.000222"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.828858" elapsed="0.024662">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.853748" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.853650" elapsed="0.000266"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.828740" elapsed="0.025419">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.854444" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.854321" elapsed="0.000266"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.828615" elapsed="0.026255">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.855181" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.855054" elapsed="0.000251"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.828492" elapsed="0.027000">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.855713" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.855618" elapsed="0.000200"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.828375" elapsed="0.027637">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.856242" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.856145" elapsed="0.000201"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.828257" elapsed="0.028265">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.856748" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.856651" elapsed="0.000196"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.828129" elapsed="0.028917">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.857279" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.857177" elapsed="0.000228"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.828018" elapsed="0.029619">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.857886" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.857780" elapsed="0.000223"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.827903" elapsed="0.030338">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.858512" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.858396" elapsed="0.000231"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.827783" elapsed="0.031024">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.859036" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.858939" elapsed="0.000211"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.827668" elapsed="0.031703">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.859719" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.859601" elapsed="0.000236"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.827487" elapsed="0.032580">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.860406" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.860253" elapsed="0.000307"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.827205" elapsed="0.033598">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.861357" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.861100" elapsed="0.000466"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.827038" elapsed="0.034776">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.862057" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.861953" elapsed="0.000224"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.826924" elapsed="0.035466">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.862669" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.862544" elapsed="0.000241"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.826811" elapsed="0.036160">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.863192" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.863092" elapsed="0.000212"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.826694" elapsed="0.036781">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.863683" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.863593" elapsed="0.000192"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.826577" elapsed="0.037373">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.864156" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.864067" elapsed="0.000178"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.826425" elapsed="0.037990">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.864622" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.864532" elapsed="0.000189"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.826310" elapsed="0.038591">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.865103" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.865015" elapsed="0.000193"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.826191" elapsed="0.039180">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.865576" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.865488" elapsed="0.000185"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.826075" elapsed="0.039765">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.866049" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.865959" elapsed="0.000203"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.825945" elapsed="0.040416">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.866617" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.866506" elapsed="0.000219"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.825826" elapsed="0.041060">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.867097" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.867000" elapsed="0.000193"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.825709" elapsed="0.041650">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.867557" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.867472" elapsed="0.000183"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.825584" elapsed="0.042224">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.868067" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.867971" elapsed="0.000207"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.825324" elapsed="0.043114">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.868969" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.868662" elapsed="0.000465"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.824969" elapsed="0.044333">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.869679" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.869498" elapsed="0.000325"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.824847" elapsed="0.045205">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.870256" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.870167" elapsed="0.000239"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.824728" elapsed="0.045911">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.870921" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.870794" elapsed="0.000290"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.824610" elapsed="0.046650">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.871568" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.871448" elapsed="0.000244"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.824477" elapsed="0.047381">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.872069" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.871975" elapsed="0.000204"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.824356" elapsed="0.048002">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.872570" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.872475" elapsed="0.000247"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.824233" elapsed="0.048644">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.873449" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.872991" elapsed="0.000554"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.824114" elapsed="0.049583">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.873898" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.873810" elapsed="0.000200"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.823994" elapsed="0.050163">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.874354" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.874267" elapsed="0.000202"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.823874" elapsed="0.050789">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.874885" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.874789" elapsed="0.000202"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.823758" elapsed="0.051392">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.875370" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.875275" elapsed="0.000224"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.823635" elapsed="0.052067">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.875935" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.875828" elapsed="0.000244"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.823506" elapsed="0.052765">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.876530" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.876414" elapsed="0.000228"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.823330" elapsed="0.053551">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.877201" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.877073" elapsed="0.000244"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.823035" elapsed="0.054450">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.877901" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.877673" elapsed="0.000344"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.822855" elapsed="0.055341">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.878395" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.878307" elapsed="0.000245"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.822738" elapsed="0.055961">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.878941" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.878834" elapsed="0.000215"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.822623" elapsed="0.056597">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.879462" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.879357" elapsed="0.000234"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.822492" elapsed="0.057261">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.879948" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.879862" elapsed="0.000188"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.822376" elapsed="0.057828">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.880409" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.880316" elapsed="0.000193"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.822252" elapsed="0.058403">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.880885" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.880776" elapsed="0.000220"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.822130" elapsed="0.059058">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.881453" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.881333" elapsed="0.000245"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.821991" elapsed="0.059743">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.881990" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.881874" elapsed="0.000242"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.821863" elapsed="0.060428">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.882531" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.882423" elapsed="0.000226"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.821736" elapsed="0.061095">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.883075" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.882965" elapsed="0.000225"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.821598" elapsed="0.061738">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.883539" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.883448" elapsed="0.000187"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.821460" elapsed="0.062319">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.883969" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.883884" elapsed="0.000185"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.821335" elapsed="0.062875">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.885628" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.885492" elapsed="0.000274"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.821055" elapsed="0.065045">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.886578" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.886359" elapsed="0.000416"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.820809" elapsed="0.066170">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.887319" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.887166" elapsed="0.000363"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.820578" elapsed="0.067193">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.888038" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.887913" elapsed="0.000270"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.820430" elapsed="0.067900">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.888538" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.888441" elapsed="0.000281"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.820300" elapsed="0.068562">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.889061" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.888971" elapsed="0.000194"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.820179" elapsed="0.069118">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.889491" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.889402" elapsed="0.000182"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.820063" elapsed="0.069650">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.889904" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.889816" elapsed="0.000207"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.819944" elapsed="0.070219">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.890360" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.890269" elapsed="0.000200"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.819713" elapsed="0.070884">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.890788" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.890701" elapsed="0.000180"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.819594" elapsed="0.071414">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.891193" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.891108" elapsed="0.000203"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.819476" elapsed="0.072017">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.891750" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.891630" elapsed="0.000242"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.819354" elapsed="0.072655">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.892221" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.892124" elapsed="0.000213"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.819219" elapsed="0.073311">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.892782" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.892664" elapsed="0.000241"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.819076" elapsed="0.073993">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.893303" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.893195" elapsed="0.000226"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.818817" elapsed="0.076486">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.895637" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.895462" elapsed="0.000355"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.818529" elapsed="0.077456">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.896367" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.896145" elapsed="0.000368"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.818417" elapsed="0.078313">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.896930" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.896841" elapsed="0.000207"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.818301" elapsed="0.078899">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.897427" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.897322" elapsed="0.000214"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.818178" elapsed="0.079515">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.897884" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.897802" elapsed="0.000180"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.818062" elapsed="0.080051">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.898307" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.898216" elapsed="0.000197"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.817950" elapsed="0.080646">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.898784" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.898695" elapsed="0.000178"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.817840" elapsed="0.081153">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.899183" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.899099" elapsed="0.000180"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.817716" elapsed="0.081689">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.899590" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.899501" elapsed="0.000195"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.817600" elapsed="0.082220">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.900001" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.899916" elapsed="0.000178"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.817489" elapsed="0.082719">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.900398" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.900302" elapsed="0.000194"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.817366" elapsed="0.083252">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.900798" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.900713" elapsed="0.000190"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.817249" elapsed="0.083775">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.901205" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.901119" elapsed="0.000204"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.817128" elapsed="0.084354">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.901671" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.901584" elapsed="0.000194"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.816921" elapsed="0.085053">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.902337" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.902162" elapsed="0.000309"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.816620" elapsed="0.085998">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.903031" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.902815" elapsed="0.000391"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.816445" elapsed="0.086951">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.903637" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.903516" elapsed="0.000251"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.816328" elapsed="0.087593">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.904160" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.904041" elapsed="0.000250"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.816204" elapsed="0.088228">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.904668" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.904554" elapsed="0.000233"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.816085" elapsed="0.088831">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.905128" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.905018" elapsed="0.000222"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.815968" elapsed="0.089396">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.905554" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.905463" elapsed="0.000200"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.815856" elapsed="0.089925">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.905966" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.905877" elapsed="0.000193"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.815719" elapsed="0.090541">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.906456" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.906367" elapsed="0.000197"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.815595" elapsed="0.091084">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.906879" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.906785" elapsed="0.000226"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.815481" elapsed="0.091676">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.907391" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.907278" elapsed="0.000226"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.815365" elapsed="0.092264">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.907813" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.907725" elapsed="0.000196"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.815246" elapsed="0.092807">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.908247" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.908153" elapsed="0.000202"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.815108" elapsed="0.093364">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.908661" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.908570" elapsed="0.000185"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.814982" elapsed="0.093885">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.909117" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.909025" elapsed="0.000206"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.814729" elapsed="0.094728">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.909864" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.909674" elapsed="0.000331"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.814157" elapsed="0.095969">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.910471" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.910287" elapsed="0.000309"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.814042" elapsed="0.096739">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.910964" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.910874" elapsed="0.000201"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.813927" elapsed="0.097280">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.911427" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.911315" elapsed="0.000232"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.813801" elapsed="0.097879">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.911872" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.911788" elapsed="0.000188"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.813673" elapsed="0.098412">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.912273" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.912181" elapsed="0.000214"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.813560" elapsed="0.098941">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.912682" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.912594" elapsed="0.000190"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.813444" elapsed="0.099437">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.913063" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.912969" elapsed="0.000206"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.813330" elapsed="0.099946">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.913449" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.913363" elapsed="0.000197"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.813202" elapsed="0.100548">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.913972" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.913860" elapsed="0.000223"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.813067" elapsed="0.101124">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.914367" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.914280" elapsed="0.000181"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.812824" elapsed="0.101734">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.914738" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.914653" elapsed="0.000187"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.812700" elapsed="0.102241">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.915114" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.915027" elapsed="0.000194"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.812570" elapsed="0.102750">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.915491" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.915407" elapsed="0.000179"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.812391" elapsed="0.103346">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.916022" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.915899" elapsed="0.000236"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.812074" elapsed="0.104173">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.916644" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.916410" elapsed="0.000395"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.811889" elapsed="0.105060">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.917128" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.917039" elapsed="0.000193"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.811770" elapsed="0.105560">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.917504" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.917417" elapsed="0.000188"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.811646" elapsed="0.106057">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.917879" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.917788" elapsed="0.000188"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.811530" elapsed="0.106537">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.918240" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.918152" elapsed="0.000184"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.811411" elapsed="0.107021">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.918601" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.918514" elapsed="0.000187"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.811281" elapsed="0.107514">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.918987" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.918884" elapsed="0.000196"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.811148" elapsed="0.108019">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.919332" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.919249" elapsed="0.000221"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.811023" elapsed="0.108575">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.919835" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.919716" elapsed="0.000260"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.810883" elapsed="0.109189">Recursive execution stopped.</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:55.920254" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:55.920167" elapsed="0.000216"/>
</kw>
<doc>Disconnect from vCenter API session</doc>
<status status="FAIL" start="2025-10-08T22:29:55.810712" elapsed="0.109942">Recursive execution stopped.</status>
</kw>
<doc>Generate executive summary and disconnect from vCenter</doc>
<status status="FAIL" start="2025-10-08T22:29:55.805922" elapsed="0.114833">Recursive execution stopped.</status>
</kw>
<doc>🖥️ VM Configuration Validation Test Suite - Test-4
🔍 Process: Connect to vCenter API → Query VM details → Compare vCenter vs EDS
✅ Pass if VM configuration matches EDS requirements, ❌ Fail if mismatch
📊 Validates: Cluster placement, CPU cores, memory, hardware version, network, disks</doc>
<status status="FAIL" start="2025-10-08T22:29:55.191621" elapsed="0.729221">Suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also suite teardown failed:
Recursive execution stopped.</status>
</suite>
<suite id="s1-s5" name="Disk Space Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test5_disk_space_validation\disk_space_validation.robot">
<kw name="Initialize Storage Test Environment And Lookup Configuration" owner="storage_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:57.162761" level="INFO">🚀 Initializing Test-5: Storage &amp; System Validation Environment...</msg>
<arg>🚀 Initializing Test-5: Storage &amp; System Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:57.162603" elapsed="0.000340"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-08T22:29:57.163223" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test5_disk_space_validation\data"&gt;C:\Users\write\project_2025\robot\robotframework\results\test5_disk_space_validation\data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-08T22:29:57.163063" elapsed="0.000208"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-08T22:29:57.176301" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-08T22:29:57.176541" level="INFO">Available hostnames: ['alhxvdvitap01', 'alhxvdvitag01', 'alhxvqaitiap01', 'alhxvqaitiap02', 'alhxvqaitred01', 'alhxvqaitred02', 'alhxvqaitred03', 'alhxvqaitmdb01', 'alhxvqaitmdb02', 'alhxvqaitmdb03', 'alhxvqaitag01', 'alhxvqaitag02', 'alhxvpritiap01', 'alhxvpritiap02']</msg>
<msg time="2025-10-08T22:29:57.176665" level="FAIL">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="FAIL" start="2025-10-08T22:29:57.163356" elapsed="0.014201">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.177740" elapsed="0.000024"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_CPU_CORES}</arg>
<arg>${eds_config['cpu_cores']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.177850" elapsed="0.000015"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_RAM}</arg>
<arg>${eds_config['ram']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.177943" elapsed="0.000013"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_STORAGE_TYPE}</arg>
<arg>${eds_config['storage_type']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178038" elapsed="0.000013"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_STORAGE_TOTAL_TB}</arg>
<arg>${eds_config['storage_total_tb']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178121" elapsed="0.000013"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_DRIVE_VOLUME_GROUP}</arg>
<arg>${eds_config['drive_volume_group']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178203" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_FILE_SYSTEM}</arg>
<arg>${eds_config['file_system']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178297" elapsed="0.000013"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_LOGICAL_VOLUME}</arg>
<arg>${eds_config['logical_volume_partition']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178379" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_STORAGE_ALLOC_GB}</arg>
<arg>${eds_config['storage_allocation_gb']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178458" elapsed="0.000013"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_RECOMMENDED_GB}</arg>
<arg>${eds_config['recommended_storage_gb']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178539" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_DRIVE_PURPOSE}</arg>
<arg>${eds_config['drive_purpose']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178618" elapsed="0.000012"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_OS_TYPE}</arg>
<arg>${eds_config['os_type']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178699" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178776" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS CPU Cores: ${TARGET_CPU_CORES}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178853" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS RAM: ${TARGET_RAM} GB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178926" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS Storage Type: ${TARGET_STORAGE_TYPE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.178999" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS Storage Total: ${TARGET_STORAGE_TOTAL_TB} TB</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.179074" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 EDS OS Type: ${TARGET_OS_TYPE}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.179146" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔗 Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.179222" elapsed="0.000012"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.179300" elapsed="0.000012"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.179373" elapsed="0.000011"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.179603" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Test-5 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:57.179693" elapsed="0.000014"/>
</kw>
<doc>🏗️ Set up test environment and lookup EDS configuration</doc>
<status status="FAIL" start="2025-10-08T22:29:57.162068" elapsed="0.017742">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<test id="s1-s5-t1" name="Critical - CPU Cores Validation" line="18">
<doc>💻 SSH to server and validate CPU core count matches EDS specification</doc>
<tag>compliance</tag>
<tag>cpu</tag>
<tag>critical</tag>
<tag>hardware</tag>
<status status="FAIL" start="2025-10-08T22:29:57.179895" elapsed="0.000555">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t2" name="Critical - Memory Allocation Validation" line="35">
<doc>🧠 SSH to server and validate memory allocation matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>hardware</tag>
<tag>memory</tag>
<status status="FAIL" start="2025-10-08T22:29:57.181040" elapsed="0.000424">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t3" name="Critical - Disk Space Allocation Validation" line="52">
<doc>💾 SSH to server and validate disk space allocation against EDS requirements</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>disk</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-08T22:29:57.181963" elapsed="0.000346">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t4" name="Critical - Storage Type Validation" line="69">
<doc>📡 SSH to server and validate storage infrastructure matches EDS specification</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-08T22:29:57.182729" elapsed="0.000364">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t5" name="Critical - Root Filesystem Validation" line="86">
<doc>🗂️ SSH to server and validate root filesystem configuration against EDS</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>filesystem</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-08T22:29:57.183452" elapsed="0.000391">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t6" name="Normal - Storage Capacity Analysis" line="106">
<doc>📊 Analyze overall storage capacity and utilization patterns</doc>
<tag>analysis</tag>
<tag>capacity</tag>
<tag>normal</tag>
<tag>storage</tag>
<status status="FAIL" start="2025-10-08T22:29:57.184258" elapsed="0.000405">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t7" name="Normal - Volume Group Analysis" line="126">
<doc>🏗️ Analyze volume group and logical volume configuration</doc>
<tag>analysis</tag>
<tag>lvm</tag>
<tag>normal</tag>
<tag>volumes</tag>
<status status="FAIL" start="2025-10-08T22:29:57.185087" elapsed="0.000418">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s5-t8" name="Normal - Operating System Validation" line="145">
<doc>🖥️ Validate operating system type matches EDS specification</doc>
<tag>compliance</tag>
<tag>normal</tag>
<tag>os</tag>
<tag>system</tag>
<status status="FAIL" start="2025-10-08T22:29:57.185967" elapsed="0.000457">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<kw name="Generate Storage Executive Summary" owner="storage_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:57.187682" level="INFO">📊 Generating Test-5 Storage Validation Executive Summary...</msg>
<arg>📊 Generating Test-5 Storage Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:57.187526" elapsed="0.000290"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:29:57.188114" level="INFO">${timestamp} = 2025-10-08 22:29:57</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:29:57.187928" elapsed="0.000209"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:57.188349" level="INFO">${summary_file} = results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-08T22:29:57.188226" elapsed="0.000149"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:57.189807" level="INFO">${summary_content} = None</msg>
<msg time="2025-10-08T22:29:57.189844" level="FAIL">Variable '${TARGET_IP}' not found.</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>🗄️ TEST-5: STORAGE &amp; SYSTEM VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${timestamp}</arg>
<arg>🎯 Target System: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>📋 Test Suite: Test-5 Disk Space &amp; System Validation</arg>
<arg>========================================</arg>
<arg>📋 EDS BASELINE CONFIGURATION</arg>
<arg>========================================</arg>
<arg>💻 CPU Cores (Expected): ${TARGET_CPU_CORES}</arg>
<arg>🧠 RAM (Expected): ${TARGET_RAM} GB</arg>
<arg>📡 Storage Type (Expected): ${TARGET_STORAGE_TYPE}</arg>
<arg>💾 Storage Total (Expected): ${TARGET_STORAGE_TOTAL_TB} TB</arg>
<arg>🗂️ Mount Point (Expected): ${TARGET_LOGICAL_VOLUME}</arg>
<arg>📊 Storage Allocation (Expected): ${TARGET_STORAGE_ALLOC_GB} GB</arg>
<arg>🎯 Drive Purpose: ${TARGET_DRIVE_PURPOSE}</arg>
<arg>🖥️ OS Type (Expected): ${TARGET_OS_TYPE}</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 Detailed data files: results/test5_disk_space_validation/data/</arg>
<arg>📊 Robot Framework reports: results/test5_disk_space_validation/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>📋 All data collected and validated against EDS</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="FAIL" start="2025-10-08T22:29:57.188472" elapsed="0.001399">Variable '${TARGET_IP}' not found.</status>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-08T22:29:57.190847" level="FAIL">TypeError: write() argument must be str, not None</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="FAIL" start="2025-10-08T22:29:57.190209" elapsed="0.000723">TypeError: write() argument must be str, not None</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:57.191192" level="INFO">📊 Executive summary generated: results/test5_disk_space_validation/Test5_Storage_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:57.191038" elapsed="0.000315"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:57.191541" level="INFO">✅ Test-5 Storage Validation completed successfully!</msg>
<arg>✅ Test-5 Storage Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:57.191447" elapsed="0.000200"/>
</kw>
<doc>📊 Generate executive summary for storage validation results</doc>
<status status="FAIL" start="2025-10-08T22:29:57.187319" elapsed="0.004466">Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</kw>
<doc>🗄️ Storage &amp; System Validation Test Suite - Test-5
🔍 Process: Find hostname in EDS → SSH to server → Collect disk/CPU/memory data → Compare server vs EDS
✅ Pass if server resources match EDS requirements, ❌ Fail if mismatch
📊 Validates: CPU cores, RAM, disk space allocation, filesystem types, storage configuration</doc>
<status status="FAIL" start="2025-10-08T22:29:56.517293" elapsed="0.674567">Suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</suite>
<suite id="s1-s6" name="Time Configuration Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test7_time_configuration_validation\time_configuration_validation.robot">
<kw name="Initialize Time Test Environment" owner="time_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:58.726736" level="INFO">🚀 Initializing Test-7: Time Configuration Validation Environment...</msg>
<arg>🚀 Initializing Test-7: Time Configuration Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:58.726542" elapsed="0.000355"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-08T22:29:58.727209" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test7_time_configuration_validation\data"&gt;C:\Users\write\project_2025\robot\robotframework\results\test7_time_configuration_validation\data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-08T22:29:58.727033" elapsed="0.000229"/>
</kw>
<kw name="Lookup Server Config" owner="EDSLookup">
<msg time="2025-10-08T22:29:58.740448" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-08T22:29:58.740667" level="INFO">Available hostnames: ['alhxvdvitap01', 'alhxvdvitag01', 'alhxvqaitiap01', 'alhxvqaitiap02', 'alhxvqaitred01', 'alhxvqaitred02', 'alhxvqaitred03', 'alhxvqaitmdb01', 'alhxvqaitmdb02', 'alhxvqaitmdb03', 'alhxvqaitag01', 'alhxvqaitag02', 'alhxvpritiap01', 'alhxvpritiap02']</msg>
<msg time="2025-10-08T22:29:58.740809" level="FAIL">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</msg>
<var>${eds_config}</var>
<arg>${TARGET_HOSTNAME}</arg>
<doc>Lookup server configuration from EDS sheet based on hostname</doc>
<status status="FAIL" start="2025-10-08T22:29:58.727368" elapsed="0.014292">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<arg>${TARGET_IP}</arg>
<arg>${eds_config['ip']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:58.741835" elapsed="0.000024"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Target Server: ${TARGET_HOSTNAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:58.741939" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Target IP: ${TARGET_IP}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:58.742026" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔗 Connecting to target server: ${TARGET_IP}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:58.742106" elapsed="0.000013"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${TARGET_IP}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:58.742186" elapsed="0.000013"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<arg>${SSH_USERNAME}</arg>
<arg>${SSH_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:58.742260" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ SSH connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:58.742332" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Test-7 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:58.742423" elapsed="0.000013"/>
</kw>
<doc>🏗️ Set up test environment for time configuration validation</doc>
<status status="FAIL" start="2025-10-08T22:29:58.725939" elapsed="0.016592">ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.</status>
</kw>
<test id="s1-s6-t1" name="Critical - Connect to Target Server" line="18">
<doc>🔗 Establish direct connection to target machine via SSH</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="FAIL" start="2025-10-08T22:29:58.742614" elapsed="0.000506">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t2" name="Critical - Collect Time Configuration Data" line="31">
<doc>⏰ Execute time-related commands to gather timezone, chrony, and NTP configuration</doc>
<tag>critical</tag>
<tag>data_collection</tag>
<tag>ntp</tag>
<tag>time</tag>
<status status="FAIL" start="2025-10-08T22:29:58.743619" elapsed="0.000444">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t3" name="Critical - Validate Timezone Setting" line="49">
<doc>🌎 Validate timezone is set to Pacific/Los Angeles (America/Los_Angeles)</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>timezone</tag>
<status status="FAIL" start="2025-10-08T22:29:58.744492" elapsed="0.000414">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t4" name="Critical - Validate Chrony Service Status" line="62">
<doc>📡 Validate chrony service is active and running</doc>
<tag>chrony</tag>
<tag>critical</tag>
<tag>ntp</tag>
<tag>service</tag>
<status status="FAIL" start="2025-10-08T22:29:58.745313" elapsed="0.000319">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t5" name="Critical - Validate NTP Server Configuration" line="74">
<doc>🕐 Validate NTP server is configured to use ntpx.domain.com</doc>
<tag>configuration</tag>
<tag>critical</tag>
<tag>ntp</tag>
<tag>server</tag>
<status status="FAIL" start="2025-10-08T22:29:58.746035" elapsed="0.000385">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t6" name="Critical - Validate Time Synchronization Status" line="87">
<doc>🔄 Validate time synchronization is working and clock is synchronized</doc>
<tag>critical</tag>
<tag>ntp</tag>
<tag>synchronization</tag>
<tag>time</tag>
<status status="FAIL" start="2025-10-08T22:29:58.746827" elapsed="0.000369">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t7" name="Normal - Comprehensive Time Configuration Validation" line="100">
<doc>📊 Perform comprehensive validation of all time configuration settings</doc>
<tag>compliance</tag>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-08T22:29:58.747583" elapsed="0.000349">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t8" name="Normal - Hardware Clock Verification" line="116">
<doc>🕰️ Verify hardware clock and its synchronization with system clock</doc>
<tag>clock</tag>
<tag>hardware</tag>
<tag>normal</tag>
<tag>verification</tag>
<status status="FAIL" start="2025-10-08T22:29:58.748331" elapsed="0.000387">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t9" name="Normal - NTP Source Analysis" line="133">
<doc>📊 Analyze NTP source details and server reachability</doc>
<tag>analysis</tag>
<tag>normal</tag>
<tag>ntp</tag>
<tag>sources</tag>
<status status="FAIL" start="2025-10-08T22:29:58.749327" elapsed="0.000332">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<test id="s1-s6-t10" name="Normal - Clock Drift Monitoring" line="165">
<doc>📉 Monitor clock drift and synchronization accuracy</doc>
<tag>accuracy</tag>
<tag>drift</tag>
<tag>monitoring</tag>
<tag>normal</tag>
<status status="FAIL" start="2025-10-08T22:29:58.750025" elapsed="0.000331">Parent suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also parent suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</test>
<kw name="Generate Time Configuration Executive Summary" owner="time_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:58.751443" level="INFO">📊 Generating Test-7 Time Configuration Executive Summary...</msg>
<arg>📊 Generating Test-7 Time Configuration Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:58.751301" elapsed="0.000254"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:29:58.751834" level="INFO">${timestamp} = 2025-10-08 22:29:58</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:29:58.751663" elapsed="0.000192"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:58.752034" level="INFO">${summary_file} = results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-08T22:29:58.751938" elapsed="0.000116"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:58.753178" level="INFO">${summary_content} = None</msg>
<msg time="2025-10-08T22:29:58.753204" level="FAIL">Variable '${TARGET_IP}' not found.</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>⏰ TEST-7: TIME CONFIGURATION VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${timestamp}</arg>
<arg>🎯 Target System: ${TARGET_HOSTNAME} (${TARGET_IP})</arg>
<arg>📋 Test Suite: Test-7 Time Configuration Validation</arg>
<arg>========================================</arg>
<arg>📋 EXPECTED CONFIGURATION</arg>
<arg>========================================</arg>
<arg>🌎 Timezone: Pacific/Los Angeles (America/Los_Angeles)</arg>
<arg>🕐 NTP Server: ntpx.domain.com</arg>
<arg>📡 Service: Chrony (active and running)</arg>
<arg>🔄 Synchronization: Enabled</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 Time configuration data: results/test7_time_configuration_validation/data/</arg>
<arg>📊 Robot Framework reports: results/test7_time_configuration_validation/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>📋 Time configuration validated</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="FAIL" start="2025-10-08T22:29:58.752138" elapsed="0.001090">Variable '${TARGET_IP}' not found.</status>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-08T22:29:58.754015" level="FAIL">TypeError: write() argument must be str, not None</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="FAIL" start="2025-10-08T22:29:58.753387" elapsed="0.000705">TypeError: write() argument must be str, not None</status>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:58.754338" level="INFO">📊 Executive summary generated: results/test7_time_configuration_validation/Test7_Time_Configuration_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:58.754200" elapsed="0.000269"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:58.754760" level="INFO">✅ Test-7 Time Configuration Validation completed successfully!</msg>
<arg>✅ Test-7 Time Configuration Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:58.754624" elapsed="0.000334"/>
</kw>
<doc>📊 Generate executive summary for time configuration validation</doc>
<status status="FAIL" start="2025-10-08T22:29:58.751112" elapsed="0.004054">Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</kw>
<doc>⏰ Time Configuration Validation Test Suite - Test-7
🔍 Process: Find hostname in EDS → SSH to server → Collect time/NTP data → Validate timezone and NTP configuration
✅ Pass if timezone is Pacific/Los Angeles and NTP server is ntpx.domain.com with proper synchronization
📊 Validates: Timezone setting, Chrony service status, NTP server configuration, time synchronization</doc>
<status status="FAIL" start="2025-10-08T22:29:58.087486" elapsed="0.667798">Suite setup failed:
ValueError: CRITICAL: Hostname 'allxdvitap01' not found in EDS sheet. Cannot proceed with validation.

Also suite teardown failed:
Several failures occurred:

1) Variable '${TARGET_IP}' not found.

2) TypeError: write() argument must be str, not None</status>
</suite>
<suite id="s1-s7" name="Ssh Key Authentication" source="C:\Users\write\project_2025\robot\robotframework\tests\test8_ssh_key_authentication\ssh_key_authentication.robot">
<kw name="Initialize SSH Key Test Environment" owner="ssh_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:59.750556" level="INFO">🚀 Initializing Test-8: SSH Key Authentication Validation Environment...</msg>
<arg>🚀 Initializing Test-8: SSH Key Authentication Validation Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:59.750398" elapsed="0.000321"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-08T22:29:59.750999" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test8_ssh_key_authentication\data"&gt;C:\Users\write\project_2025\robot\robotframework\results\test8_ssh_key_authentication\data&lt;/a&gt;' already exists.</msg>
<arg>${DATA_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-08T22:29:59.750850" elapsed="0.000197"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:59.751264" level="INFO">📋 Code Server: 192.168.1.100</msg>
<arg>📋 Code Server: ${CODE_SERVER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:59.751133" elapsed="0.000276"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:59.751679" level="INFO">📋 Code Server User: codeserver</msg>
<arg>📋 Code Server User: ${CODE_SERVER_USER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:59.751525" elapsed="0.000299"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:59.752059" level="INFO">🔗 Connecting to Code Server: 192.168.1.100...</msg>
<arg>🔗 Connecting to Code Server: ${CODE_SERVER_HOST}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:59.751924" elapsed="0.000237"/>
</kw>
<kw name="Open Connection" owner="SSHLibrary">
<arg>${CODE_SERVER_HOST}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2025-10-08T22:29:59.752252" elapsed="0.000169"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2025-10-08T22:29:59.752652" level="INFO">Logging into '192.168.1.100:22' as 'codeserver'.</msg>
<msg time="2025-10-08T22:30:02.754837" level="FAIL">TimeoutError: timed out</msg>
<arg>${CODE_SERVER_USER}</arg>
<arg>${CODE_SERVER_PASS}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="FAIL" start="2025-10-08T22:29:59.752505" elapsed="3.005019">TimeoutError: timed out</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ SSH connection to Code Server established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:02.757680" elapsed="0.000021"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<var>${whoami}</var>
<arg>whoami</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:02.757780" elapsed="0.000014"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<var>${hostname}</var>
<arg>hostname</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:02.757861" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>👤 Connected as: ${whoami}@${hostname}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:02.757938" elapsed="0.000013"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Test-8 environment initialized</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:02.758018" elapsed="0.000013"/>
</kw>
<doc>🏗️ Set up test environment for SSH key authentication validation</doc>
<status status="FAIL" start="2025-10-08T22:29:59.749884" elapsed="3.008241">TimeoutError: timed out</status>
</kw>
<test id="s1-s7-t1" name="Critical - Connect to Code Server" line="18">
<doc>🔗 SSH directly to the code server (Linux jump box) to prepare for SSH key-based authentication testing</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>ssh</tag>
<status status="FAIL" start="2025-10-08T22:30:02.758206" elapsed="0.000601">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s7-t2" name="Critical - Test Passwordless SSH Authentication" line="31">
<doc>🔐 From the code server, attempt SSH connection to target machine using key-based authentication without password prompts, verify the connection succeeds, check authorized_keys file permissions (should be 600), and capture connection details</doc>
<tag>authentication</tag>
<tag>critical</tag>
<tag>passwordless</tag>
<status status="FAIL" start="2025-10-08T22:30:02.759578" elapsed="0.000695">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<test id="s1-s7-t3" name="Critical - Validate Authentication Security" line="58">
<doc>🛡️ Confirm passwordless SSH works from code server to target, verify authorized_keys file contains correct public keys with proper permissions (600), validate SSH configuration, and ensure the jump box authentication chain is properly configured</doc>
<tag>critical</tag>
<tag>security</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-08T22:30:02.760731" elapsed="0.000600">Parent suite setup failed:
TimeoutError: timed out</status>
</test>
<kw name="Generate SSH Key Authentication Executive Summary" owner="ssh_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:02.762268" level="INFO">📊 Generating Test-8 SSH Key Authentication Executive Summary...</msg>
<arg>📊 Generating Test-8 SSH Key Authentication Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:02.762153" elapsed="0.000240"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:30:02.762720" level="INFO">${timestamp} = 2025-10-08 22:30:02</msg>
<var>${timestamp}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:30:02.762506" elapsed="0.000239"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:02.762956" level="INFO">${summary_file} = results/test8_ssh_key_authentication/Test8_SSH_Key_Authentication_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test8_ssh_key_authentication/Test8_SSH_Key_Authentication_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-08T22:30:02.762844" elapsed="0.000134"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:30:02.763395" level="INFO">${summary_content} = ========================================
🔐 TEST-8: SSH KEY AUTHENTICATION VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:30:02
🎯 Code...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>🔐 TEST-8: SSH KEY AUTHENTICATION VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${timestamp}</arg>
<arg>🎯 Code Server (Jump Box): ${CODE_SERVER_HOST}</arg>
<arg>🎯 Target System: ${TARGET_HOST}</arg>
<arg>📋 Test Suite: Test-8 SSH Key Authentication Validation</arg>
<arg>========================================</arg>
<arg>📋 TEST OBJECTIVES</arg>
<arg>========================================</arg>
<arg>1. Connect to Code Server (Linux jump box)</arg>
<arg>2. Test passwordless SSH key authentication</arg>
<arg>3. Validate authorized_keys configuration</arg>
<arg>4. Verify SSH security permissions</arg>
<arg>5. Confirm authentication chain integrity</arg>
<arg>========================================</arg>
<arg>📋 EXPECTED CONFIGURATION</arg>
<arg>========================================</arg>
<arg>🔑 SSH Private Key: ${SSH_KEY_PATH}</arg>
<arg>🔒 Private Key Permissions: 600</arg>
<arg>📂 .ssh Directory Permissions: 700</arg>
<arg>📝 authorized_keys Permissions: 600</arg>
<arg>🔐 Authentication Method: Key-based (passwordless)</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 Authentication chain data: results/test8_ssh_key_authentication/data/</arg>
<arg>📊 Robot Framework reports: results/test8_ssh_key_authentication/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>🔐 SSH key authentication validated</arg>
<arg>🔒 Security permissions verified</arg>
<arg>🔗 Authentication chain confirmed</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:30:02.763063" elapsed="0.000355"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:02.764302" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test8_ssh_key_authentication\Test8_SSH_Key_Authentication_Executive_Summary.txt"&gt;C:\Users\write\project_2025\robot\robotframework\results\test8_ssh_key_authentication\Test8_SSH_Key_Authentication_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-08T22:30:02.763723" elapsed="0.000627"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:02.764544" level="INFO">📊 Executive summary generated: results/test8_ssh_key_authentication/Test8_SSH_Key_Authentication_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:02.764429" elapsed="0.000258"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:02.764866" level="INFO">✅ Test-8 SSH Key Authentication Validation completed successfully!</msg>
<arg>✅ Test-8 SSH Key Authentication Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:02.764777" elapsed="0.000213"/>
</kw>
<kw name="Close All Connections" owner="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" start="2025-10-08T22:30:02.765130" elapsed="0.000086"/>
</kw>
<doc>📊 Generate executive summary for SSH key authentication validation</doc>
<status status="PASS" start="2025-10-08T22:30:02.761984" elapsed="0.003280"/>
</kw>
<doc>🔐 SSH Key Authentication Validation Test Suite - Test-8
🔍 Process: Connect to Code Server → Test SSH key authentication → Validate authorized_keys configuration
✅ Pass if SSH key authentication works passwordlessly from Code Server to target machine
📊 Validates: SSH key authentication, authorized_keys permissions, SSH configuration</doc>
<status status="FAIL" start="2025-10-08T22:29:59.586937" elapsed="3.178353">Suite setup failed:
TimeoutError: timed out</status>
</suite>
<suite id="s1-s8" name="Datastore Configuration" source="C:\Users\write\project_2025\robot\robotframework\tests\test9_datastore_configuration\datastore_configuration.robot">
<kw name="Initialize Datastore Configuration Test Environment" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.521632" level="INFO">🚀 Initializing Datastore Configuration Test Environment...</msg>
<arg>🚀 Initializing Datastore Configuration Test Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.521438" elapsed="0.000390"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.522251" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\screenshots"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\screenshots&lt;/a&gt;' already exists.</msg>
<arg>${SCREENSHOT_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-08T22:30:03.522025" elapsed="0.000292"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.523290" level="INFO">${VCENTER_CONN} = None</msg>
<arg>${VCENTER_CONN}</arg>
<arg>${None}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:30:03.522460" elapsed="0.000867"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.524506" level="INFO">${TEST_START_TIME} = </msg>
<arg>${TEST_START_TIME}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:30:03.523425" elapsed="0.001116"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:30:03.524825" level="INFO">${start_time} = 2025-10-08 22:30:03</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:30:03.524635" elapsed="0.000212"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.525076" level="INFO">${TEST_START_TIME} = 2025-10-08 22:30:03</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:30:03.524938" elapsed="0.000168"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.525323" level="INFO">✅ Test environment initialized at 2025-10-08 22:30:03</msg>
<arg>✅ Test environment initialized at ${TEST_START_TIME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.525191" elapsed="0.000284"/>
</kw>
<doc>Initialize test environment and create necessary directories</doc>
<status status="PASS" start="2025-10-08T22:30:03.520792" elapsed="0.004755"/>
</kw>
<test id="s1-s8-t1" name="Critical - Connect to vCenter" line="18">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.526896" level="INFO">🏁 Starting: Critical - Connect to vCenter</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.526737" elapsed="0.000332"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-08T22:30:03.526409" elapsed="0.000751"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.527650" level="INFO">🔍 Establishing connection to vCenter...</msg>
<arg>🔍 Establishing connection to vCenter...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.527489" elapsed="0.000320"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.528193" level="INFO">📋 vCenter Server: vcenter.example.com</msg>
<arg>📋 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.528049" elapsed="0.000285"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.528720" level="INFO">📋 Target Host: allxdvitap01</msg>
<arg>📋 Target Host: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.528564" elapsed="0.000284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.529185" level="INFO">📋 Cluster Environment: Production-Cluster</msg>
<arg>📋 Cluster Environment: ${CLUSTER_NAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.529043" elapsed="0.000256"/>
</kw>
<kw name="Connect To vCenter" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.529851" level="INFO">🔗 Connecting to vCenter server: vcenter.example.com</msg>
<arg>🔗 Connecting to vCenter server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.529724" elapsed="0.000249"/>
</kw>
<kw name="Vcenter Connect" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.530287" level="INFO">${connection} = {'server': 'vcenter.example.com', 'username': 'administrator@vsphere.local', 'connected': True}</msg>
<var>${connection}</var>
<arg>${VCENTER_SERVER}</arg>
<arg>${VCENTER_USERNAME}</arg>
<arg>${VCENTER_PASSWORD}</arg>
<doc>Establish connection to vCenter server</doc>
<status status="PASS" start="2025-10-08T22:30:03.530096" elapsed="0.000214"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.530595" level="INFO">${VCENTER_CONN} = {'server': 'vcenter.example.com', 'username': 'administrator@vsphere.local', 'connected': True}</msg>
<arg>${VCENTER_CONN}</arg>
<arg>${connection}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:30:03.530425" elapsed="0.000204"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.530837" level="INFO">✅ Connected to vCenter: vcenter.example.com</msg>
<arg>✅ Connected to vCenter: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.530715" elapsed="0.000242"/>
</kw>
<return>
<value>${connection}</value>
<status status="PASS" start="2025-10-08T22:30:03.531028" elapsed="0.000060"/>
</return>
<doc>Establish connection to vCenter server</doc>
<status status="PASS" start="2025-10-08T22:30:03.529519" elapsed="0.001687"/>
</kw>
<kw name="Verify vCenter Connection" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.531750" level="INFO">🔍 Verifying vCenter connection status...</msg>
<arg>🔍 Verifying vCenter connection status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.531654" elapsed="0.000249"/>
</kw>
<kw name="Vcenter Verify Connection" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.532263" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>${VCENTER_CONN}</arg>
<doc>Verify vCenter connection is active</doc>
<status status="PASS" start="2025-10-08T22:30:03.532076" elapsed="0.000214"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.532570" level="INFO">✅ vCenter connection verified: True</msg>
<arg>✅ vCenter connection verified: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.532405" elapsed="0.000331"/>
</kw>
<return>
<value>${status}</value>
<status status="PASS" start="2025-10-08T22:30:03.532995" elapsed="0.000059"/>
</return>
<msg time="2025-10-08T22:30:03.533227" level="INFO">${connection_status} = True</msg>
<var>${connection_status}</var>
<doc>Verify vCenter connection is active</doc>
<status status="PASS" start="2025-10-08T22:30:03.531457" elapsed="0.001799"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>msg=Failed to establish vCenter connection</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:30:03.533471" elapsed="0.000167"/>
</kw>
<kw name="Locate Target Host In Cluster" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.534261" level="INFO">🔍 Locating target host allxdvitap01 in cluster Production-Cluster...</msg>
<arg>🔍 Locating target host ${VCENTER_HOST} in cluster ${CLUSTER_NAME}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.534114" elapsed="0.000288"/>
</kw>
<kw name="Vcenter Find Host In Cluster" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.534753" level="INFO">${found} = True</msg>
<var>${found}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${CLUSTER_NAME}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Locate ESXi host within a cluster</doc>
<status status="PASS" start="2025-10-08T22:30:03.534540" elapsed="0.000239"/>
</kw>
<if>
<branch type="IF" condition="${found}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.535192" level="INFO">✅ Target host located: allxdvitap01</msg>
<arg>✅ Target host located: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.535043" elapsed="0.000285"/>
</kw>
<status status="PASS" start="2025-10-08T22:30:03.534887" elapsed="0.000497"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Target host not found: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.535551" elapsed="0.000021"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.535422" elapsed="0.000183"/>
</branch>
<status status="PASS" start="2025-10-08T22:30:03.534855" elapsed="0.000769"/>
</if>
<return>
<value>${found}</value>
<status status="PASS" start="2025-10-08T22:30:03.535657" elapsed="0.000026"/>
</return>
<msg time="2025-10-08T22:30:03.535788" level="INFO">${host_found} = True</msg>
<var>${host_found}</var>
<doc>Locate target ESXi host within the cluster</doc>
<status status="PASS" start="2025-10-08T22:30:03.533923" elapsed="0.001885"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${host_found}</arg>
<arg>msg=Target host ${VCENTER_HOST} not found in cluster ${CLUSTER_NAME}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:30:03.536056" elapsed="0.000203"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.536593" level="INFO">✅ vCenter connection established and target host located in cluster</msg>
<arg>✅ vCenter connection established and target host located in cluster</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.536464" elapsed="0.000277"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.537688" level="INFO">✅ Completed: Critical - Connect to vCenter - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.537547" elapsed="0.000295"/>
</kw>
<status status="PASS" start="2025-10-08T22:30:03.537376" elapsed="0.000521"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.538013" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.537921" elapsed="0.000145"/>
</branch>
<status status="PASS" start="2025-10-08T22:30:03.537357" elapsed="0.000728"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-08T22:30:03.537111" elapsed="0.001017"/>
</kw>
<doc>🔗 Establish connection to VMware vCenter and locate the target host in the cluster environment</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>vcenter</tag>
<status status="PASS" start="2025-10-08T22:30:03.525627" elapsed="0.012663"/>
</test>
<test id="s1-s8-t2" name="Critical - Collect Datastore Information" line="40">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.539928" level="INFO">🏁 Starting: Critical - Collect Datastore Information</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.539775" elapsed="0.000304"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-08T22:30:03.539504" elapsed="0.000660"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.540483" level="INFO">🔍 Collecting all datastore configuration data...</msg>
<arg>🔍 Collecting all datastore configuration data...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.540366" elapsed="0.000226"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.540902" level="INFO">📋 Target Host: allxdvitap01</msg>
<arg>📋 Target Host: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.540759" elapsed="0.000250"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.541303" level="INFO">📊 Collecting VM assignments to datastores...</msg>
<arg>📊 Collecting VM assignments to datastores...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.541191" elapsed="0.000220"/>
</kw>
<kw name="Collect VM Datastore Assignments" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.541973" level="INFO">📊 Collecting VM datastore assignments for host: allxdvitap01...</msg>
<arg>📊 Collecting VM datastore assignments for host: ${VCENTER_HOST}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.541835" elapsed="0.000252"/>
</kw>
<kw name="Vcenter Get Vm Datastore Assignments" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.542376" level="INFO">${assignments} = [{'vm_name': 'web-server-01', 'datastore': 'datastore-ssd-01', 'app_type': 'web'}, {'vm_name': 'database-server-01', 'datastore': 'datastore-nvme-01', 'app_type': 'database'}]</msg>
<var>${assignments}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get VM to datastore assignments for a host</doc>
<status status="PASS" start="2025-10-08T22:30:03.542209" elapsed="0.000191"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.542595" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.542654" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${assignments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.542505" elapsed="0.000303"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.543049" level="INFO">📊 Collected 2 VM assignments</msg>
<arg>📊 Collected ${count} VM assignments</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.542908" elapsed="0.000258"/>
</kw>
<return>
<value>${assignments}</value>
<status status="PASS" start="2025-10-08T22:30:03.543218" elapsed="0.000038"/>
</return>
<msg time="2025-10-08T22:30:03.543376" level="INFO">${vm_assignments} = [{'vm_name': 'web-server-01', 'datastore': 'datastore-ssd-01', 'app_type': 'web'}, {'vm_name': 'database-server-01', 'datastore': 'datastore-nvme-01', 'app_type': 'database'}]</msg>
<var>${vm_assignments}</var>
<doc>Collect all VM to datastore assignments for the target host</doc>
<status status="PASS" start="2025-10-08T22:30:03.541632" elapsed="0.001766"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.543837" level="INFO">${VM_ASSIGNMENTS} = [{'vm_name': 'web-server-01', 'datastore': 'datastore-ssd-01', 'app_type': 'web'}, {'vm_name': 'database-server-01', 'datastore': 'datastore-nvme-01', 'app_type': 'database'}]</msg>
<arg>${VM_ASSIGNMENTS}</arg>
<arg>${vm_assignments}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:30:03.543613" elapsed="0.000271"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.544218" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.544298" level="INFO">${vm_count} = 2</msg>
<var>${vm_count}</var>
<arg>${vm_assignments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.544085" elapsed="0.000241"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${vm_count} &gt; 0</arg>
<arg>msg=No VMs found on target host</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:30:03.544528" elapsed="0.000251"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.545139" level="INFO">✅ VM assignments collected: 2 VMs found</msg>
<arg>✅ VM assignments collected: ${vm_count} VMs found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.544972" elapsed="0.000293"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.545712" level="INFO">📊 Collecting datastore capacity information...</msg>
<arg>📊 Collecting datastore capacity information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.545579" elapsed="0.000275"/>
</kw>
<kw name="Collect Datastore Capacity" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.546389" level="INFO">📊 Collecting datastore capacity information...</msg>
<arg>📊 Collecting datastore capacity information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.546289" elapsed="0.000226"/>
</kw>
<kw name="Vcenter Get Datastore Capacity" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.546848" level="INFO">${capacity} = [{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}, {'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}]</msg>
<var>${capacity}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get capacity information for datastores on a host</doc>
<status status="PASS" start="2025-10-08T22:30:03.546651" elapsed="0.000225"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.547091" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.547159" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${capacity}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.546989" elapsed="0.000195"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.547438" level="INFO">📊 Collected capacity data for 2 datastores</msg>
<arg>📊 Collected capacity data for ${count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.547287" elapsed="0.000275"/>
</kw>
<return>
<value>${capacity}</value>
<status status="PASS" start="2025-10-08T22:30:03.547632" elapsed="0.000040"/>
</return>
<msg time="2025-10-08T22:30:03.547819" level="INFO">${capacity_data} = [{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}, {'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}]</msg>
<var>${capacity_data}</var>
<doc>Collect capacity information for all datastores on target host</doc>
<status status="PASS" start="2025-10-08T22:30:03.546092" elapsed="0.001756"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.548203" level="INFO">${CAPACITY_DATA} = [{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}, {'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}]</msg>
<arg>${CAPACITY_DATA}</arg>
<arg>${capacity_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:30:03.548035" elapsed="0.000204"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.548510" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.548577" level="INFO">${datastore_count} = 2</msg>
<var>${datastore_count}</var>
<arg>${capacity_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.548399" elapsed="0.000197"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${datastore_count} &gt; 0</arg>
<arg>msg=No datastores found on target host</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:30:03.548767" elapsed="0.000188"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.551201" level="INFO">📊 Datastore: datastore-ssd-01 - Total: 1000GB, Free: 300GB, Used: 70%</msg>
<arg>📊 Datastore: ${ds['name']} - Total: ${ds['total_gb']}GB, Free: ${ds['free_gb']}GB, Used: ${ds['used_percent']}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.549316" elapsed="0.002031"/>
</kw>
<var name="${ds}">{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}</var>
<status status="PASS" start="2025-10-08T22:30:03.549233" elapsed="0.002167"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.553692" level="INFO">📊 Datastore: datastore-nvme-01 - Total: 2000GB, Free: 800GB, Used: 60%</msg>
<arg>📊 Datastore: ${ds['name']} - Total: ${ds['total_gb']}GB, Free: ${ds['free_gb']}GB, Used: ${ds['used_percent']}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.551612" elapsed="0.002268"/>
</kw>
<var name="${ds}">{'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}</var>
<status status="PASS" start="2025-10-08T22:30:03.551515" elapsed="0.002422"/>
</iter>
<var>${ds}</var>
<value>@{capacity_data}</value>
<status status="PASS" start="2025-10-08T22:30:03.549083" elapsed="0.004895"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.554357" level="INFO">✅ Capacity data collected for 2 datastores</msg>
<arg>✅ Capacity data collected for ${datastore_count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.554208" elapsed="0.000366"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.554917" level="INFO">📊 Collecting datastore performance tier information...</msg>
<arg>📊 Collecting datastore performance tier information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.554803" elapsed="0.000302"/>
</kw>
<kw name="Collect Datastore Performance Tiers" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.555862" level="INFO">📊 Collecting datastore performance tier information...</msg>
<arg>📊 Collecting datastore performance tier information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.555754" elapsed="0.000263"/>
</kw>
<kw name="Vcenter Get Datastore Performance Tiers" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.556766" level="INFO">${tiers} = [{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}, {'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}]</msg>
<var>${tiers}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get performance tier classification for datastores</doc>
<status status="PASS" start="2025-10-08T22:30:03.556138" elapsed="0.000653"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.556982" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.557042" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${tiers}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.556894" elapsed="0.000167"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.557288" level="INFO">📊 Collected performance tier data for 2 datastores</msg>
<arg>📊 Collected performance tier data for ${count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.557158" elapsed="0.000251"/>
</kw>
<return>
<value>${tiers}</value>
<status status="PASS" start="2025-10-08T22:30:03.557461" elapsed="0.000038"/>
</return>
<msg time="2025-10-08T22:30:03.557617" level="INFO">${performance_tiers} = [{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}, {'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}]</msg>
<var>${performance_tiers}</var>
<doc>Collect performance tier classification for datastores</doc>
<status status="PASS" start="2025-10-08T22:30:03.555524" elapsed="0.002115"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.557977" level="INFO">${PERFORMANCE_TIERS} = [{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}, {'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}]</msg>
<arg>${PERFORMANCE_TIERS}</arg>
<arg>${performance_tiers}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:30:03.557814" elapsed="0.000196"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.558354" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.558446" level="INFO">${tier_count} = 2</msg>
<var>${tier_count}</var>
<arg>${performance_tiers}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.558226" elapsed="0.000261"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${tier_count} &gt; 0</arg>
<arg>msg=No performance tier information available</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:30:03.558679" elapsed="0.000197"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.560636" level="INFO">📊 Datastore: datastore-ssd-01 - Tier: STANDARD_PERFORMANCE - Type: SSD</msg>
<arg>📊 Datastore: ${tier['name']} - Tier: ${tier['performance_tier']} - Type: ${tier['storage_type']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.559221" elapsed="0.001541"/>
</kw>
<var name="${tier}">{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}</var>
<status status="PASS" start="2025-10-08T22:30:03.559143" elapsed="0.001665"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.562528" level="INFO">📊 Datastore: datastore-nvme-01 - Tier: HIGH_PERFORMANCE - Type: NVMe</msg>
<arg>📊 Datastore: ${tier['name']} - Tier: ${tier['performance_tier']} - Type: ${tier['storage_type']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.560997" elapsed="0.001654"/>
</kw>
<var name="${tier}">{'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}</var>
<status status="PASS" start="2025-10-08T22:30:03.560907" elapsed="0.001782"/>
</iter>
<var>${tier}</var>
<value>@{performance_tiers}</value>
<status status="PASS" start="2025-10-08T22:30:03.559000" elapsed="0.003717"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.563017" level="INFO">✅ Performance tier data collected for 2 datastores</msg>
<arg>✅ Performance tier data collected for ${tier_count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.562880" elapsed="0.000243"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.563443" level="INFO">📊 Collecting datastore subscription level information...</msg>
<arg>📊 Collecting datastore subscription level information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.563315" elapsed="0.000266"/>
</kw>
<kw name="Collect Datastore Subscription Levels" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.564111" level="INFO">📊 Collecting datastore subscription level information...</msg>
<arg>📊 Collecting datastore subscription level information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.564016" elapsed="0.000212"/>
</kw>
<kw name="Vcenter Get Datastore Subscription Levels" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.564477" level="INFO">${subscription} = [{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}, {'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}]</msg>
<var>${subscription}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get subscription levels and oversubscription ratios for datastores</doc>
<status status="PASS" start="2025-10-08T22:30:03.564329" elapsed="0.000170"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.564665" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.564717" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${subscription}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.564586" elapsed="0.000148"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.564927" level="INFO">📊 Collected subscription data for 2 datastores</msg>
<arg>📊 Collected subscription data for ${count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.564814" elapsed="0.000215"/>
</kw>
<return>
<value>${subscription}</value>
<status status="PASS" start="2025-10-08T22:30:03.565203" elapsed="0.000034"/>
</return>
<msg time="2025-10-08T22:30:03.565351" level="INFO">${subscription_data} = [{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}, {'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}]</msg>
<var>${subscription_data}</var>
<doc>Collect subscription levels and oversubscription ratios</doc>
<status status="PASS" start="2025-10-08T22:30:03.563820" elapsed="0.001553"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.565819" level="INFO">${SUBSCRIPTION_DATA} = [{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}, {'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}]</msg>
<arg>${SUBSCRIPTION_DATA}</arg>
<arg>${subscription_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:30:03.565618" elapsed="0.000245"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.566176" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.566248" level="INFO">${sub_count} = 2</msg>
<var>${sub_count}</var>
<arg>${subscription_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.566061" elapsed="0.000210"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${sub_count} &gt; 0</arg>
<arg>msg=No subscription level information available</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:30:03.566462" elapsed="0.000221"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.568323" level="INFO">📊 Datastore: datastore-ssd-01 - Provisioned: 1500GB, Ratio: 1.5:1</msg>
<arg>📊 Datastore: ${sub['name']} - Provisioned: ${sub['provisioned_gb']}GB, Ratio: ${sub['subscription_ratio']}:1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.566988" elapsed="0.001489"/>
</kw>
<var name="${sub}">{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}</var>
<status status="PASS" start="2025-10-08T22:30:03.566916" elapsed="0.001614"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.570256" level="INFO">📊 Datastore: datastore-nvme-01 - Provisioned: 3000GB, Ratio: 1.5:1</msg>
<arg>📊 Datastore: ${sub['name']} - Provisioned: ${sub['provisioned_gb']}GB, Ratio: ${sub['subscription_ratio']}:1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.568724" elapsed="0.001733"/>
</kw>
<var name="${sub}">{'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}</var>
<status status="PASS" start="2025-10-08T22:30:03.568633" elapsed="0.001868"/>
</iter>
<var>${sub}</var>
<value>@{subscription_data}</value>
<status status="PASS" start="2025-10-08T22:30:03.566797" elapsed="0.003745"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.570884" level="INFO">✅ Subscription data collected for 2 datastores</msg>
<arg>✅ Subscription data collected for ${sub_count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.570733" elapsed="0.000287"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.571371" level="INFO">📸 Capturing host configuration screenshot...</msg>
<arg>📸 Capturing host configuration screenshot...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.571257" elapsed="0.000249"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.571773" level="INFO">📋 Screenshot will include: Datastores, VM assignments, Capacity, Performance status</msg>
<arg>📋 Screenshot will include: Datastores, VM assignments, Capacity, Performance status</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.571657" elapsed="0.000245"/>
</kw>
<kw name="Capture Host Configuration Screenshot" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.572635" level="INFO">📸 Capturing host configuration screenshot...</msg>
<arg>📸 Capturing host configuration screenshot...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.572483" elapsed="0.000294"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:30:03.573102" level="INFO">${timestamp} = 20251008_223003</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:30:03.572896" elapsed="0.000231"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.573402" level="INFO">${screenshot_file} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251008_223003.PNG</msg>
<var>${screenshot_file}</var>
<arg>${SCREENSHOT_DIR}/host_config_${timestamp}.${SCREENSHOT_FORMAT}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-08T22:30:03.573223" elapsed="0.000201"/>
</kw>
<kw name="Vcenter Capture Host Screenshot" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.574575" level="INFO">${path} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251008_223003.PNG</msg>
<var>${path}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<arg>${screenshot_file}</arg>
<doc>Capture screenshot of host configuration</doc>
<status status="PASS" start="2025-10-08T22:30:03.573513" elapsed="0.001097"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.574891" level="INFO">📸 Screenshot captured: C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251008_223003.PNG</msg>
<arg>📸 Screenshot captured: ${path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.574729" elapsed="0.000334"/>
</kw>
<return>
<value>${path}</value>
<status status="PASS" start="2025-10-08T22:30:03.575148" elapsed="0.000045"/>
</return>
<msg time="2025-10-08T22:30:03.575345" level="INFO">${screenshot_path} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251008_223003.PNG</msg>
<var>${screenshot_path}</var>
<doc>Capture screenshot of host configuration and status</doc>
<status status="PASS" start="2025-10-08T22:30:03.572209" elapsed="0.003162"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.575925" level="INFO">${SCREENSHOT_PATH} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251008_223003.PNG</msg>
<arg>${SCREENSHOT_PATH}</arg>
<arg>${screenshot_path}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:30:03.575752" elapsed="0.000209"/>
</kw>
<kw name="File Should Exist" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.576359" level="INFO" html="true">File '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\screenshots\host_config_20251008_223003.PNG"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\screenshots\host_config_20251008_223003.PNG&lt;/a&gt;' exists.</msg>
<arg>${screenshot_path}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.576155" elapsed="0.000254"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.576813" level="INFO">✅ Screenshot saved: C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251008_223003.PNG</msg>
<arg>✅ Screenshot saved: ${screenshot_path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.576648" elapsed="0.000301"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.577271" level="INFO">✅ All datastore information collected successfully</msg>
<arg>✅ All datastore information collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.577148" elapsed="0.000245"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.578360" level="INFO">✅ Completed: Critical - Collect Datastore Information - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.578201" elapsed="0.000302"/>
</kw>
<status status="PASS" start="2025-10-08T22:30:03.578033" elapsed="0.000527"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.578677" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.578588" elapsed="0.000135"/>
</branch>
<status status="PASS" start="2025-10-08T22:30:03.578012" elapsed="0.000730"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-08T22:30:03.577768" elapsed="0.001016"/>
</kw>
<doc>📊 Gather all datastore configuration data including VM assignments, available capacity, performance tiers, subscription levels, and capture screenshot of host configuration and status parameters</doc>
<tag>collection</tag>
<tag>critical</tag>
<tag>datastore</tag>
<status status="PASS" start="2025-10-08T22:30:03.538806" elapsed="0.040082"/>
</test>
<test id="s1-s8-t3" name="Critical - Validate Datastore Configuration" line="98">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.580376" level="INFO">🏁 Starting: Critical - Validate Datastore Configuration</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.580249" elapsed="0.000248"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-08T22:30:03.580002" elapsed="0.000556"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.580826" level="INFO">🔍 Validating datastore configuration against cluster standards...</msg>
<arg>🔍 Validating datastore configuration against cluster standards...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.580725" elapsed="0.000208"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.581190" level="INFO">🔍 Validating VM datastore placement...</msg>
<arg>🔍 Validating VM datastore placement...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.581093" elapsed="0.000250"/>
</kw>
<kw name="Validate VM Datastore Placement" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.581966" level="INFO">✅ Validating VM datastore placement...</msg>
<arg>✅ Validating VM datastore placement...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.581870" elapsed="0.000219"/>
</kw>
<kw name="Datastore Validator Validate Vm Placement" owner="DatastoreValidator">
<msg time="2025-10-08T22:30:03.582378" level="INFO">${results} = {'violations': [], 'total_vms': 2, 'cluster': 'Production-Cluster'}</msg>
<var>${results}</var>
<arg>${vm_assignments}</arg>
<arg>${CLUSTER_NAME}</arg>
<doc>Validate VM datastore placement against cluster standards</doc>
<status status="PASS" start="2025-10-08T22:30:03.582199" elapsed="0.000201"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-08T22:30:03.582695" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-08T22:30:03.582495" elapsed="0.000235"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.582933" level="INFO">Length is 0.</msg>
<msg time="2025-10-08T22:30:03.582994" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.582835" elapsed="0.000177"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.583288" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.583125" elapsed="0.000301"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-08T22:30:03.583508" elapsed="0.000052"/>
</return>
<msg time="2025-10-08T22:30:03.583707" level="INFO">${placement_results} = {'violations': [], 'total_vms': 2, 'cluster': 'Production-Cluster'}</msg>
<var>${placement_results}</var>
<arg>${VM_ASSIGNMENTS}</arg>
<doc>Validate VM datastore assignments against cluster standards</doc>
<status status="PASS" start="2025-10-08T22:30:03.581633" elapsed="0.002096"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-08T22:30:03.584081" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${placement_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-08T22:30:03.583933" elapsed="0.000176"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.584389" level="INFO">Length is 0.</msg>
<msg time="2025-10-08T22:30:03.584451" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.584289" elapsed="0.000202"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.584829" level="INFO">📊 VM placement validation: 0 violations found</msg>
<arg>📊 VM placement validation: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.584684" elapsed="0.000273"/>
</kw>
<if>
<branch type="IF" condition="${violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.585410" elapsed="0.000021"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-08T22:30:03.585315" elapsed="0.000157"/>
</iter>
<var>${violation}</var>
<value>@{violations}</value>
<status status="NOT RUN" start="2025-10-08T22:30:03.585247" elapsed="0.000387"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>VM datastore placement has ${violation_count} violations</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.585738" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.585090" elapsed="0.000690"/>
</branch>
<status status="PASS" start="2025-10-08T22:30:03.585065" elapsed="0.000736"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.586055" level="INFO">✅ VM datastore placement validated</msg>
<arg>✅ VM datastore placement validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.585945" elapsed="0.000210"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.586528" level="INFO">🔍 Validating datastore available capacity...</msg>
<arg>🔍 Validating datastore available capacity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.586397" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.587039" level="INFO">📋 Minimum required free capacity: 20%</msg>
<arg>📋 Minimum required free capacity: ${MIN_FREE_CAPACITY_PERCENT}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.586874" elapsed="0.000285"/>
</kw>
<kw name="Validate Datastore Capacity" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.587846" level="INFO">✅ Validating datastore capacity...</msg>
<arg>✅ Validating datastore capacity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.587732" elapsed="0.000240"/>
</kw>
<kw name="Datastore Validator Validate Capacity" owner="DatastoreValidator">
<msg time="2025-10-08T22:30:03.588414" level="FAIL">TypeError: '&lt;' not supported between instances of 'float' and 'str'</msg>
<var>${results}</var>
<arg>${capacity_data}</arg>
<arg>${MIN_FREE_CAPACITY_PERCENT}</arg>
<doc>Validate datastores have sufficient available capacity</doc>
<status status="FAIL" start="2025-10-08T22:30:03.588107" elapsed="0.001518">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${warnings}</var>
<arg>${results}</arg>
<arg>warnings</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.589838" elapsed="0.000025"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${warning_count}</var>
<arg>${warnings}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.589956" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${warning_count} warnings found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.590050" elapsed="0.000014"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-08T22:30:03.590106" elapsed="0.000018"/>
</return>
<var>${capacity_results}</var>
<arg>${CAPACITY_DATA}</arg>
<doc>Validate datastores have sufficient available capacity</doc>
<status status="FAIL" start="2025-10-08T22:30:03.587433" elapsed="0.002803">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${warnings}</var>
<arg>${capacity_results}</arg>
<arg>warnings</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.590480" elapsed="0.000020"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${warning_count}</var>
<arg>${warnings}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.590669" elapsed="0.000019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Capacity validation: ${warning_count} warnings found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.590835" elapsed="0.000018"/>
</kw>
<if>
<branch type="IF" condition="${warning_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Warning: Datastore ${warning['name']} - Free: ${warning['free_percent']}% (Below threshold: ${MIN_FREE_CAPACITY_PERCENT}%)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.591167" elapsed="0.000018"/>
</kw>
<var name="${warning}"/>
<status status="NOT RUN" start="2025-10-08T22:30:03.591093" elapsed="0.000123"/>
</iter>
<var>${warning}</var>
<value>@{warnings}</value>
<status status="NOT RUN" start="2025-10-08T22:30:03.591030" elapsed="0.000209"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Datastore capacity validation failed: ${warning_count} datastores below minimum threshold</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.591317" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.590982" elapsed="0.000376"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:30:03.590961" elapsed="0.000416"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Available capacity validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.591513" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔍 Validating performance tier assignments...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.591739" elapsed="0.000017"/>
</kw>
<kw name="Validate Performance Tier Assignment" owner="datastore_keywords">
<var>${tier_results}</var>
<arg>${VM_ASSIGNMENTS}</arg>
<arg>${PERFORMANCE_TIERS}</arg>
<doc>Validate VMs are on appropriate performance tiers</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.591973" elapsed="0.000023"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${mismatches}</var>
<arg>${tier_results}</arg>
<arg>mismatches</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.592142" elapsed="0.000017"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${mismatch_count}</var>
<arg>${mismatches}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.592302" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Performance tier validation: ${mismatch_count} mismatches found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.592459" elapsed="0.000018"/>
</kw>
<if>
<branch type="IF" condition="${mismatch_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Mismatch: VM ${mismatch['vm_name']} - Current tier: ${mismatch['current_tier']}, Required: ${mismatch['required_tier']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.592752" elapsed="0.000014"/>
</kw>
<var name="${mismatch}"/>
<status status="NOT RUN" start="2025-10-08T22:30:03.592683" elapsed="0.000116"/>
</iter>
<var>${mismatch}</var>
<value>@{mismatches}</value>
<status status="NOT RUN" start="2025-10-08T22:30:03.592629" elapsed="0.000191"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Performance tier validation failed: ${mismatch_count} VMs on incorrect storage tier</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.592965" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.592590" elapsed="0.000417"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:30:03.592572" elapsed="0.000456"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Performance tier validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.593166" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔍 Validating datastore subscription ratios...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.593323" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Maximum allowed subscription ratio: ${MAX_SUBSCRIPTION_RATIO}:1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.593541" elapsed="0.000016"/>
</kw>
<kw name="Validate Subscription Ratios" owner="datastore_keywords">
<var>${sub_results}</var>
<arg>${SUBSCRIPTION_DATA}</arg>
<doc>Validate datastore subscription ratios</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.593747" elapsed="0.000020"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${oversubscribed}</var>
<arg>${sub_results}</arg>
<arg>oversubscribed</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.593908" elapsed="0.000016"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${oversub_count}</var>
<arg>${oversubscribed}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.594063" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Subscription validation: ${oversub_count} oversubscribed datastores found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.594215" elapsed="0.000016"/>
</kw>
<if>
<branch type="IF" condition="${oversub_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Oversubscribed: Datastore ${oversub['name']} - Ratio: ${oversub['ratio']}:1 (Max: ${MAX_SUBSCRIPTION_RATIO}:1)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.594479" elapsed="0.000014"/>
</kw>
<var name="${oversub}"/>
<status status="NOT RUN" start="2025-10-08T22:30:03.594414" elapsed="0.000110"/>
</iter>
<var>${oversub}</var>
<value>@{oversubscribed}</value>
<status status="NOT RUN" start="2025-10-08T22:30:03.594375" elapsed="0.000169"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Subscription validation failed: ${oversub_count} datastores exceed maximum ratio</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.594616" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.594342" elapsed="0.000311"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:30:03.594326" elapsed="0.000345"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Subscription ratios validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.594807" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Datastore configuration validation summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.594956" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - VM datastore placement: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.595300" elapsed="0.000024"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Available capacity: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.595510" elapsed="0.000021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Performance tier assignment: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.595698" elapsed="0.000021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Subscription ratios: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.595853" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Datastore configuration validation: PASSED - All datastores meet cluster standards and application requirements</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.596007" elapsed="0.000017"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.596901" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.596734" elapsed="0.000214"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.597220" level="INFO">❌ Completed: Critical - Validate Datastore Configuration - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.597042" elapsed="0.000330"/>
</kw>
<status status="PASS" start="2025-10-08T22:30:03.596969" elapsed="0.000445"/>
</branch>
<status status="PASS" start="2025-10-08T22:30:03.596717" elapsed="0.000722"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-08T22:30:03.596415" elapsed="0.001077"/>
</kw>
<doc>✅ Compare all collected datastore data (VM placement, available capacity, performance tier, subscription ratios) against cluster standards and application requirements to ensure proper storage allocation and performance compliance</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-08T22:30:03.579309" elapsed="0.018306">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</test>
<kw name="Generate Datastore Configuration Executive Summary" owner="datastore_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.598653" level="INFO">📊 Generating Datastore Configuration Executive Summary...</msg>
<arg>📊 Generating Datastore Configuration Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.598530" elapsed="0.000245"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:30:03.599055" level="INFO">${end_time} = 2025-10-08 22:30:03</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:30:03.598886" elapsed="0.000192"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.600012" level="INFO">${TEST_END_TIME} = 2025-10-08 22:30:03</msg>
<arg>${TEST_END_TIME}</arg>
<arg>${end_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:30:03.599173" elapsed="0.000932"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.600328" level="INFO">${summary_file} = C:\Users\write\project_2025\robot\robotframework/test_results/test9_datastore_executive_summary.html</msg>
<var>${summary_file}</var>
<arg>${EXECDIR}/test_results/test9_datastore_executive_summary.html</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-08T22:30:03.600202" elapsed="0.000146"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.601112" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;html&gt;&lt;head&gt;&lt;title&gt;Datastore Configuration Test Summary&lt;/title&gt;&lt;/head&gt;&lt;body&gt;</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-08T22:30:03.600433" elapsed="0.000734"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.601658" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;h1&gt;🎯 Datastore Configuration Validation - Executive Summary&lt;/h1&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.601265" elapsed="0.000450"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.602257" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Test Period:&lt;/strong&gt; ${TEST_START_TIME} to ${TEST_END_TIME}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.601813" elapsed="0.000496"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.602795" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;vCenter Server:&lt;/strong&gt; ${VCENTER_SERVER}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.602403" elapsed="0.000445"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.603338" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Target Host:&lt;/strong&gt; ${VCENTER_HOST}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.602941" elapsed="0.000468"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.603961" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Cluster:&lt;/strong&gt; ${CLUSTER_NAME}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.603552" elapsed="0.000478"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.604525" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Screenshot:&lt;/strong&gt; ${SCREENSHOT_PATH}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.604122" elapsed="0.000457"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.605066" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;/body&gt;&lt;/html&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.604671" elapsed="0.000455"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.609553" level="INFO">✅ Executive summary generated: C:\Users\write\project_2025\robot\robotframework/test_results/test9_datastore_executive_summary.html</msg>
<arg>✅ Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.605246" elapsed="0.004553"/>
</kw>
<if>
<branch type="IF" condition="${VCENTER_CONN}">
<kw name="Vcenter Disconnect" owner="VCenterLibrary">
<arg>${VCENTER_CONN}</arg>
<doc>Disconnect from vCenter server</doc>
<status status="PASS" start="2025-10-08T22:30:03.610077" elapsed="0.000115"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.610373" level="INFO">🔌 Disconnected from vCenter</msg>
<arg>🔌 Disconnected from vCenter</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.610279" elapsed="0.000265"/>
</kw>
<status status="PASS" start="2025-10-08T22:30:03.609916" elapsed="0.000685"/>
</branch>
<status status="PASS" start="2025-10-08T22:30:03.609884" elapsed="0.000756"/>
</if>
<doc>Generate executive summary report for datastore configuration test</doc>
<status status="PASS" start="2025-10-08T22:30:03.598392" elapsed="0.012307"/>
</kw>
<doc>💾 Datastore Configuration Validation Test Suite - Test-9
🔍 Process: Connect to vCenter → Collect Datastore Information → Validate Datastore Configuration
✅ Pass if datastore configuration meets cluster standards and application requirements
📊 Validates: VM assignments, available capacity, performance tiers, subscription levels</doc>
<status status="FAIL" start="2025-10-08T22:30:03.344386" elapsed="0.266352"/>
</suite>
<status status="FAIL" elapsed="11.444563"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="40" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">accuracy</stat>
<stat pass="0" fail="1" skip="0">adapters</stat>
<stat pass="0" fail="4" skip="0">analysis</stat>
<stat pass="1" fail="1" skip="0">api</stat>
<stat pass="0" fail="1" skip="0">authentication</stat>
<stat pass="0" fail="1" skip="0">av_collection</stat>
<stat pass="0" fail="1" skip="0">av_console</stat>
<stat pass="1" fail="0" skip="0">backup_collection</stat>
<stat pass="0" fail="1" skip="0">capacity</stat>
<stat pass="0" fail="1" skip="0">chrony</stat>
<stat pass="0" fail="1" skip="0">cip007_r31</stat>
<stat pass="0" fail="1" skip="0">clock</stat>
<stat pass="0" fail="1" skip="0">cluster</stat>
<stat pass="1" fail="0" skip="0">collection</stat>
<stat pass="0" fail="18" skip="0">compliance</stat>
<stat pass="0" fail="1" skip="0">comprehensive</stat>
<stat pass="0" fail="1" skip="0">configuration</stat>
<stat pass="2" fail="4" skip="0">connection</stat>
<stat pass="0" fail="2" skip="0">cpu</stat>
<stat pass="4" fail="31" skip="0">critical</stat>
<stat pass="0" fail="1" skip="0">data_collection</stat>
<stat pass="1" fail="0" skip="0">datastore</stat>
<stat pass="0" fail="2" skip="0">disk</stat>
<stat pass="0" fail="1" skip="0">dns</stat>
<stat pass="0" fail="1" skip="0">drift</stat>
<stat pass="0" fail="1" skip="0">filesystem</stat>
<stat pass="0" fail="1" skip="0">gateway</stat>
<stat pass="0" fail="6" skip="0">hardware</stat>
<stat pass="0" fail="2" skip="0">hostname</stat>
<stat pass="0" fail="1" skip="0">information</stat>
<stat pass="2" fail="3" skip="0">infrastructure</stat>
<stat pass="0" fail="1" skip="0">ip</stat>
<stat pass="0" fail="1" skip="0">lvm</stat>
<stat pass="0" fail="2" skip="0">memory</stat>
<stat pass="0" fail="1" skip="0">monitoring</stat>
<stat pass="0" fail="1" skip="0">network</stat>
<stat pass="0" fail="3" skip="0">networking</stat>
<stat pass="0" fail="9" skip="0">normal</stat>
<stat pass="0" fail="6" skip="0">ntp</stat>
<stat pass="0" fail="1" skip="0">os</stat>
<stat pass="0" fail="1" skip="0">passwordless</stat>
<stat pass="0" fail="1" skip="0">placement</stat>
<stat pass="0" fail="1" skip="0">properties</stat>
<stat pass="0" fail="1" skip="0">review</stat>
<stat pass="0" fail="1" skip="0">security</stat>
<stat pass="0" fail="1" skip="0">server</stat>
<stat pass="0" fail="1" skip="0">service</stat>
<stat pass="0" fail="1" skip="0">sources</stat>
<stat pass="0" fail="2" skip="0">ssh</stat>
<stat pass="0" fail="5" skip="0">storage</stat>
<stat pass="0" fail="1" skip="0">subnet</stat>
<stat pass="0" fail="1" skip="0">synchronization</stat>
<stat pass="0" fail="1" skip="0">system</stat>
<stat pass="0" fail="3" skip="0">time</stat>
<stat pass="0" fail="1" skip="0">timezone</stat>
<stat pass="0" fail="5" skip="0">validation</stat>
<stat pass="1" fail="1" skip="0">vcenter</stat>
<stat pass="1" fail="0" skip="0">vcenter_api</stat>
<stat pass="0" fail="1" skip="0">verification</stat>
<stat pass="0" fail="1" skip="0">version</stat>
<stat pass="0" fail="1" skip="0">volumes</stat>
</tag>
<suite>
<stat name="Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration" id="s1" pass="4" fail="40" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration</stat>
<stat name="Backup Validation" id="s1-s1" pass="2" fail="1" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Backup Validation</stat>
<stat name="Av Agent Validation" id="s1-s2" pass="0" fail="3" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Av Agent Validation</stat>
<stat name="Network Validation" id="s1-s3" pass="0" fail="6" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Network Validation</stat>
<stat name="Vm Validation" id="s1-s4" pass="0" fail="8" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Vm Validation</stat>
<stat name="Disk Space Validation" id="s1-s5" pass="0" fail="8" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Disk Space Validation</stat>
<stat name="Time Configuration Validation" id="s1-s6" pass="0" fail="10" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Time Configuration Validation</stat>
<stat name="Ssh Key Authentication" id="s1-s7" pass="0" fail="3" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Ssh Key Authentication</stat>
<stat name="Datastore Configuration" id="s1-s8" pass="2" fail="1" skip="0">Backup Validation &amp; Av Agent Validation &amp; Network Validation &amp; Vm Validation &amp; Disk Space Validation &amp; Time Configuration Validation &amp; Ssh Key Authentication &amp; Datastore Configuration.Datastore Configuration</stat>
</suite>
</statistics>
<errors>
<msg time="2025-10-08T22:29:54.352292" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-08T22:29:55.794708" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-08T22:29:57.176301" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
<msg time="2025-10-08T22:29:58.740448" level="ERROR">Hostname 'allxdvitap01' not found in EDS sheet</msg>
</errors>
</robot>
