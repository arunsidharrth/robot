<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.13.8 on win32)" generated="2025-10-08T22:30:03.342909" rpa="false" schemaversion="5">
<suite id="s1" name="Datastore Configuration" source="C:\Users\write\project_2025\robot\robotframework\tests\test9_datastore_configuration\datastore_configuration.robot">
<kw name="Initialize Datastore Configuration Test Environment" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.521632" level="INFO">🚀 Initializing Datastore Configuration Test Environment...</msg>
<arg>🚀 Initializing Datastore Configuration Test Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.521438" elapsed="0.000390"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.522251" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\screenshots"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\screenshots&lt;/a&gt;' already exists.</msg>
<arg>${SCREENSHOT_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-08T22:30:03.522025" elapsed="0.000292"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.523290" level="INFO">${VCENTER_CONN} = None</msg>
<arg>${VCENTER_CONN}</arg>
<arg>${None}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:30:03.522460" elapsed="0.000867"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.524506" level="INFO">${TEST_START_TIME} = </msg>
<arg>${TEST_START_TIME}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:30:03.523425" elapsed="0.001116"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:30:03.524825" level="INFO">${start_time} = 2025-10-08 22:30:03</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:30:03.524635" elapsed="0.000212"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.525076" level="INFO">${TEST_START_TIME} = 2025-10-08 22:30:03</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:30:03.524938" elapsed="0.000168"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.525323" level="INFO">✅ Test environment initialized at 2025-10-08 22:30:03</msg>
<arg>✅ Test environment initialized at ${TEST_START_TIME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.525191" elapsed="0.000284"/>
</kw>
<doc>Initialize test environment and create necessary directories</doc>
<status status="PASS" start="2025-10-08T22:30:03.520792" elapsed="0.004755"/>
</kw>
<test id="s1-t1" name="Critical - Connect to vCenter" line="18">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.526896" level="INFO">🏁 Starting: Critical - Connect to vCenter</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.526737" elapsed="0.000332"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-08T22:30:03.526409" elapsed="0.000751"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.527650" level="INFO">🔍 Establishing connection to vCenter...</msg>
<arg>🔍 Establishing connection to vCenter...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.527489" elapsed="0.000320"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.528193" level="INFO">📋 vCenter Server: vcenter.example.com</msg>
<arg>📋 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.528049" elapsed="0.000285"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.528720" level="INFO">📋 Target Host: allxdvitap01</msg>
<arg>📋 Target Host: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.528564" elapsed="0.000284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.529185" level="INFO">📋 Cluster Environment: Production-Cluster</msg>
<arg>📋 Cluster Environment: ${CLUSTER_NAME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.529043" elapsed="0.000256"/>
</kw>
<kw name="Connect To vCenter" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.529851" level="INFO">🔗 Connecting to vCenter server: vcenter.example.com</msg>
<arg>🔗 Connecting to vCenter server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.529724" elapsed="0.000249"/>
</kw>
<kw name="Vcenter Connect" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.530287" level="INFO">${connection} = {'server': 'vcenter.example.com', 'username': 'administrator@vsphere.local', 'connected': True}</msg>
<var>${connection}</var>
<arg>${VCENTER_SERVER}</arg>
<arg>${VCENTER_USERNAME}</arg>
<arg>${VCENTER_PASSWORD}</arg>
<doc>Establish connection to vCenter server</doc>
<status status="PASS" start="2025-10-08T22:30:03.530096" elapsed="0.000214"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.530595" level="INFO">${VCENTER_CONN} = {'server': 'vcenter.example.com', 'username': 'administrator@vsphere.local', 'connected': True}</msg>
<arg>${VCENTER_CONN}</arg>
<arg>${connection}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:30:03.530425" elapsed="0.000204"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.530837" level="INFO">✅ Connected to vCenter: vcenter.example.com</msg>
<arg>✅ Connected to vCenter: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.530715" elapsed="0.000242"/>
</kw>
<return>
<value>${connection}</value>
<status status="PASS" start="2025-10-08T22:30:03.531028" elapsed="0.000060"/>
</return>
<doc>Establish connection to vCenter server</doc>
<status status="PASS" start="2025-10-08T22:30:03.529519" elapsed="0.001687"/>
</kw>
<kw name="Verify vCenter Connection" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.531750" level="INFO">🔍 Verifying vCenter connection status...</msg>
<arg>🔍 Verifying vCenter connection status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.531654" elapsed="0.000249"/>
</kw>
<kw name="Vcenter Verify Connection" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.532263" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>${VCENTER_CONN}</arg>
<doc>Verify vCenter connection is active</doc>
<status status="PASS" start="2025-10-08T22:30:03.532076" elapsed="0.000214"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.532570" level="INFO">✅ vCenter connection verified: True</msg>
<arg>✅ vCenter connection verified: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.532405" elapsed="0.000331"/>
</kw>
<return>
<value>${status}</value>
<status status="PASS" start="2025-10-08T22:30:03.532995" elapsed="0.000059"/>
</return>
<msg time="2025-10-08T22:30:03.533227" level="INFO">${connection_status} = True</msg>
<var>${connection_status}</var>
<doc>Verify vCenter connection is active</doc>
<status status="PASS" start="2025-10-08T22:30:03.531457" elapsed="0.001799"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>msg=Failed to establish vCenter connection</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:30:03.533471" elapsed="0.000167"/>
</kw>
<kw name="Locate Target Host In Cluster" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.534261" level="INFO">🔍 Locating target host allxdvitap01 in cluster Production-Cluster...</msg>
<arg>🔍 Locating target host ${VCENTER_HOST} in cluster ${CLUSTER_NAME}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.534114" elapsed="0.000288"/>
</kw>
<kw name="Vcenter Find Host In Cluster" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.534753" level="INFO">${found} = True</msg>
<var>${found}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${CLUSTER_NAME}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Locate ESXi host within a cluster</doc>
<status status="PASS" start="2025-10-08T22:30:03.534540" elapsed="0.000239"/>
</kw>
<if>
<branch type="IF" condition="${found}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.535192" level="INFO">✅ Target host located: allxdvitap01</msg>
<arg>✅ Target host located: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.535043" elapsed="0.000285"/>
</kw>
<status status="PASS" start="2025-10-08T22:30:03.534887" elapsed="0.000497"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Target host not found: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.535551" elapsed="0.000021"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.535422" elapsed="0.000183"/>
</branch>
<status status="PASS" start="2025-10-08T22:30:03.534855" elapsed="0.000769"/>
</if>
<return>
<value>${found}</value>
<status status="PASS" start="2025-10-08T22:30:03.535657" elapsed="0.000026"/>
</return>
<msg time="2025-10-08T22:30:03.535788" level="INFO">${host_found} = True</msg>
<var>${host_found}</var>
<doc>Locate target ESXi host within the cluster</doc>
<status status="PASS" start="2025-10-08T22:30:03.533923" elapsed="0.001885"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${host_found}</arg>
<arg>msg=Target host ${VCENTER_HOST} not found in cluster ${CLUSTER_NAME}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:30:03.536056" elapsed="0.000203"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.536593" level="INFO">✅ vCenter connection established and target host located in cluster</msg>
<arg>✅ vCenter connection established and target host located in cluster</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.536464" elapsed="0.000277"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.537688" level="INFO">✅ Completed: Critical - Connect to vCenter - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.537547" elapsed="0.000295"/>
</kw>
<status status="PASS" start="2025-10-08T22:30:03.537376" elapsed="0.000521"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.538013" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.537921" elapsed="0.000145"/>
</branch>
<status status="PASS" start="2025-10-08T22:30:03.537357" elapsed="0.000728"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-08T22:30:03.537111" elapsed="0.001017"/>
</kw>
<doc>🔗 Establish connection to VMware vCenter and locate the target host in the cluster environment</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>vcenter</tag>
<status status="PASS" start="2025-10-08T22:30:03.525627" elapsed="0.012663"/>
</test>
<test id="s1-t2" name="Critical - Collect Datastore Information" line="40">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.539928" level="INFO">🏁 Starting: Critical - Collect Datastore Information</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.539775" elapsed="0.000304"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-08T22:30:03.539504" elapsed="0.000660"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.540483" level="INFO">🔍 Collecting all datastore configuration data...</msg>
<arg>🔍 Collecting all datastore configuration data...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.540366" elapsed="0.000226"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.540902" level="INFO">📋 Target Host: allxdvitap01</msg>
<arg>📋 Target Host: ${VCENTER_HOST}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.540759" elapsed="0.000250"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.541303" level="INFO">📊 Collecting VM assignments to datastores...</msg>
<arg>📊 Collecting VM assignments to datastores...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.541191" elapsed="0.000220"/>
</kw>
<kw name="Collect VM Datastore Assignments" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.541973" level="INFO">📊 Collecting VM datastore assignments for host: allxdvitap01...</msg>
<arg>📊 Collecting VM datastore assignments for host: ${VCENTER_HOST}...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.541835" elapsed="0.000252"/>
</kw>
<kw name="Vcenter Get Vm Datastore Assignments" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.542376" level="INFO">${assignments} = [{'vm_name': 'web-server-01', 'datastore': 'datastore-ssd-01', 'app_type': 'web'}, {'vm_name': 'database-server-01', 'datastore': 'datastore-nvme-01', 'app_type': 'database'}]</msg>
<var>${assignments}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get VM to datastore assignments for a host</doc>
<status status="PASS" start="2025-10-08T22:30:03.542209" elapsed="0.000191"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.542595" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.542654" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${assignments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.542505" elapsed="0.000303"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.543049" level="INFO">📊 Collected 2 VM assignments</msg>
<arg>📊 Collected ${count} VM assignments</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.542908" elapsed="0.000258"/>
</kw>
<return>
<value>${assignments}</value>
<status status="PASS" start="2025-10-08T22:30:03.543218" elapsed="0.000038"/>
</return>
<msg time="2025-10-08T22:30:03.543376" level="INFO">${vm_assignments} = [{'vm_name': 'web-server-01', 'datastore': 'datastore-ssd-01', 'app_type': 'web'}, {'vm_name': 'database-server-01', 'datastore': 'datastore-nvme-01', 'app_type': 'database'}]</msg>
<var>${vm_assignments}</var>
<doc>Collect all VM to datastore assignments for the target host</doc>
<status status="PASS" start="2025-10-08T22:30:03.541632" elapsed="0.001766"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.543837" level="INFO">${VM_ASSIGNMENTS} = [{'vm_name': 'web-server-01', 'datastore': 'datastore-ssd-01', 'app_type': 'web'}, {'vm_name': 'database-server-01', 'datastore': 'datastore-nvme-01', 'app_type': 'database'}]</msg>
<arg>${VM_ASSIGNMENTS}</arg>
<arg>${vm_assignments}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:30:03.543613" elapsed="0.000271"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.544218" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.544298" level="INFO">${vm_count} = 2</msg>
<var>${vm_count}</var>
<arg>${vm_assignments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.544085" elapsed="0.000241"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${vm_count} &gt; 0</arg>
<arg>msg=No VMs found on target host</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:30:03.544528" elapsed="0.000251"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.545139" level="INFO">✅ VM assignments collected: 2 VMs found</msg>
<arg>✅ VM assignments collected: ${vm_count} VMs found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.544972" elapsed="0.000293"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.545712" level="INFO">📊 Collecting datastore capacity information...</msg>
<arg>📊 Collecting datastore capacity information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.545579" elapsed="0.000275"/>
</kw>
<kw name="Collect Datastore Capacity" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.546389" level="INFO">📊 Collecting datastore capacity information...</msg>
<arg>📊 Collecting datastore capacity information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.546289" elapsed="0.000226"/>
</kw>
<kw name="Vcenter Get Datastore Capacity" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.546848" level="INFO">${capacity} = [{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}, {'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}]</msg>
<var>${capacity}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get capacity information for datastores on a host</doc>
<status status="PASS" start="2025-10-08T22:30:03.546651" elapsed="0.000225"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.547091" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.547159" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${capacity}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.546989" elapsed="0.000195"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.547438" level="INFO">📊 Collected capacity data for 2 datastores</msg>
<arg>📊 Collected capacity data for ${count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.547287" elapsed="0.000275"/>
</kw>
<return>
<value>${capacity}</value>
<status status="PASS" start="2025-10-08T22:30:03.547632" elapsed="0.000040"/>
</return>
<msg time="2025-10-08T22:30:03.547819" level="INFO">${capacity_data} = [{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}, {'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}]</msg>
<var>${capacity_data}</var>
<doc>Collect capacity information for all datastores on target host</doc>
<status status="PASS" start="2025-10-08T22:30:03.546092" elapsed="0.001756"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.548203" level="INFO">${CAPACITY_DATA} = [{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}, {'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}]</msg>
<arg>${CAPACITY_DATA}</arg>
<arg>${capacity_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:30:03.548035" elapsed="0.000204"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.548510" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.548577" level="INFO">${datastore_count} = 2</msg>
<var>${datastore_count}</var>
<arg>${capacity_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.548399" elapsed="0.000197"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${datastore_count} &gt; 0</arg>
<arg>msg=No datastores found on target host</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:30:03.548767" elapsed="0.000188"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.551201" level="INFO">📊 Datastore: datastore-ssd-01 - Total: 1000GB, Free: 300GB, Used: 70%</msg>
<arg>📊 Datastore: ${ds['name']} - Total: ${ds['total_gb']}GB, Free: ${ds['free_gb']}GB, Used: ${ds['used_percent']}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.549316" elapsed="0.002031"/>
</kw>
<var name="${ds}">{'name': 'datastore-ssd-01', 'total_gb': 1000, 'free_gb': 300, 'used_percent': 70}</var>
<status status="PASS" start="2025-10-08T22:30:03.549233" elapsed="0.002167"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.553692" level="INFO">📊 Datastore: datastore-nvme-01 - Total: 2000GB, Free: 800GB, Used: 60%</msg>
<arg>📊 Datastore: ${ds['name']} - Total: ${ds['total_gb']}GB, Free: ${ds['free_gb']}GB, Used: ${ds['used_percent']}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.551612" elapsed="0.002268"/>
</kw>
<var name="${ds}">{'name': 'datastore-nvme-01', 'total_gb': 2000, 'free_gb': 800, 'used_percent': 60}</var>
<status status="PASS" start="2025-10-08T22:30:03.551515" elapsed="0.002422"/>
</iter>
<var>${ds}</var>
<value>@{capacity_data}</value>
<status status="PASS" start="2025-10-08T22:30:03.549083" elapsed="0.004895"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.554357" level="INFO">✅ Capacity data collected for 2 datastores</msg>
<arg>✅ Capacity data collected for ${datastore_count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.554208" elapsed="0.000366"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.554917" level="INFO">📊 Collecting datastore performance tier information...</msg>
<arg>📊 Collecting datastore performance tier information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.554803" elapsed="0.000302"/>
</kw>
<kw name="Collect Datastore Performance Tiers" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.555862" level="INFO">📊 Collecting datastore performance tier information...</msg>
<arg>📊 Collecting datastore performance tier information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.555754" elapsed="0.000263"/>
</kw>
<kw name="Vcenter Get Datastore Performance Tiers" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.556766" level="INFO">${tiers} = [{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}, {'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}]</msg>
<var>${tiers}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get performance tier classification for datastores</doc>
<status status="PASS" start="2025-10-08T22:30:03.556138" elapsed="0.000653"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.556982" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.557042" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${tiers}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.556894" elapsed="0.000167"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.557288" level="INFO">📊 Collected performance tier data for 2 datastores</msg>
<arg>📊 Collected performance tier data for ${count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.557158" elapsed="0.000251"/>
</kw>
<return>
<value>${tiers}</value>
<status status="PASS" start="2025-10-08T22:30:03.557461" elapsed="0.000038"/>
</return>
<msg time="2025-10-08T22:30:03.557617" level="INFO">${performance_tiers} = [{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}, {'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}]</msg>
<var>${performance_tiers}</var>
<doc>Collect performance tier classification for datastores</doc>
<status status="PASS" start="2025-10-08T22:30:03.555524" elapsed="0.002115"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.557977" level="INFO">${PERFORMANCE_TIERS} = [{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}, {'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}]</msg>
<arg>${PERFORMANCE_TIERS}</arg>
<arg>${performance_tiers}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:30:03.557814" elapsed="0.000196"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.558354" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.558446" level="INFO">${tier_count} = 2</msg>
<var>${tier_count}</var>
<arg>${performance_tiers}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.558226" elapsed="0.000261"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${tier_count} &gt; 0</arg>
<arg>msg=No performance tier information available</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:30:03.558679" elapsed="0.000197"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.560636" level="INFO">📊 Datastore: datastore-ssd-01 - Tier: STANDARD_PERFORMANCE - Type: SSD</msg>
<arg>📊 Datastore: ${tier['name']} - Tier: ${tier['performance_tier']} - Type: ${tier['storage_type']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.559221" elapsed="0.001541"/>
</kw>
<var name="${tier}">{'name': 'datastore-ssd-01', 'performance_tier': 'STANDARD_PERFORMANCE', 'storage_type': 'SSD'}</var>
<status status="PASS" start="2025-10-08T22:30:03.559143" elapsed="0.001665"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.562528" level="INFO">📊 Datastore: datastore-nvme-01 - Tier: HIGH_PERFORMANCE - Type: NVMe</msg>
<arg>📊 Datastore: ${tier['name']} - Tier: ${tier['performance_tier']} - Type: ${tier['storage_type']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.560997" elapsed="0.001654"/>
</kw>
<var name="${tier}">{'name': 'datastore-nvme-01', 'performance_tier': 'HIGH_PERFORMANCE', 'storage_type': 'NVMe'}</var>
<status status="PASS" start="2025-10-08T22:30:03.560907" elapsed="0.001782"/>
</iter>
<var>${tier}</var>
<value>@{performance_tiers}</value>
<status status="PASS" start="2025-10-08T22:30:03.559000" elapsed="0.003717"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.563017" level="INFO">✅ Performance tier data collected for 2 datastores</msg>
<arg>✅ Performance tier data collected for ${tier_count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.562880" elapsed="0.000243"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.563443" level="INFO">📊 Collecting datastore subscription level information...</msg>
<arg>📊 Collecting datastore subscription level information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.563315" elapsed="0.000266"/>
</kw>
<kw name="Collect Datastore Subscription Levels" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.564111" level="INFO">📊 Collecting datastore subscription level information...</msg>
<arg>📊 Collecting datastore subscription level information...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.564016" elapsed="0.000212"/>
</kw>
<kw name="Vcenter Get Datastore Subscription Levels" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.564477" level="INFO">${subscription} = [{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}, {'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}]</msg>
<var>${subscription}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<doc>Get subscription levels and oversubscription ratios for datastores</doc>
<status status="PASS" start="2025-10-08T22:30:03.564329" elapsed="0.000170"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.564665" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.564717" level="INFO">${count} = 2</msg>
<var>${count}</var>
<arg>${subscription}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.564586" elapsed="0.000148"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.564927" level="INFO">📊 Collected subscription data for 2 datastores</msg>
<arg>📊 Collected subscription data for ${count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.564814" elapsed="0.000215"/>
</kw>
<return>
<value>${subscription}</value>
<status status="PASS" start="2025-10-08T22:30:03.565203" elapsed="0.000034"/>
</return>
<msg time="2025-10-08T22:30:03.565351" level="INFO">${subscription_data} = [{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}, {'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}]</msg>
<var>${subscription_data}</var>
<doc>Collect subscription levels and oversubscription ratios</doc>
<status status="PASS" start="2025-10-08T22:30:03.563820" elapsed="0.001553"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.565819" level="INFO">${SUBSCRIPTION_DATA} = [{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}, {'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}]</msg>
<arg>${SUBSCRIPTION_DATA}</arg>
<arg>${subscription_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:30:03.565618" elapsed="0.000245"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.566176" level="INFO">Length is 2.</msg>
<msg time="2025-10-08T22:30:03.566248" level="INFO">${sub_count} = 2</msg>
<var>${sub_count}</var>
<arg>${subscription_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.566061" elapsed="0.000210"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${sub_count} &gt; 0</arg>
<arg>msg=No subscription level information available</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:30:03.566462" elapsed="0.000221"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.568323" level="INFO">📊 Datastore: datastore-ssd-01 - Provisioned: 1500GB, Ratio: 1.5:1</msg>
<arg>📊 Datastore: ${sub['name']} - Provisioned: ${sub['provisioned_gb']}GB, Ratio: ${sub['subscription_ratio']}:1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.566988" elapsed="0.001489"/>
</kw>
<var name="${sub}">{'name': 'datastore-ssd-01', 'provisioned_gb': 1500, 'subscription_ratio': 1.5}</var>
<status status="PASS" start="2025-10-08T22:30:03.566916" elapsed="0.001614"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.570256" level="INFO">📊 Datastore: datastore-nvme-01 - Provisioned: 3000GB, Ratio: 1.5:1</msg>
<arg>📊 Datastore: ${sub['name']} - Provisioned: ${sub['provisioned_gb']}GB, Ratio: ${sub['subscription_ratio']}:1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.568724" elapsed="0.001733"/>
</kw>
<var name="${sub}">{'name': 'datastore-nvme-01', 'provisioned_gb': 3000, 'subscription_ratio': 1.5}</var>
<status status="PASS" start="2025-10-08T22:30:03.568633" elapsed="0.001868"/>
</iter>
<var>${sub}</var>
<value>@{subscription_data}</value>
<status status="PASS" start="2025-10-08T22:30:03.566797" elapsed="0.003745"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.570884" level="INFO">✅ Subscription data collected for 2 datastores</msg>
<arg>✅ Subscription data collected for ${sub_count} datastores</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.570733" elapsed="0.000287"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.571371" level="INFO">📸 Capturing host configuration screenshot...</msg>
<arg>📸 Capturing host configuration screenshot...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.571257" elapsed="0.000249"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.571773" level="INFO">📋 Screenshot will include: Datastores, VM assignments, Capacity, Performance status</msg>
<arg>📋 Screenshot will include: Datastores, VM assignments, Capacity, Performance status</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.571657" elapsed="0.000245"/>
</kw>
<kw name="Capture Host Configuration Screenshot" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.572635" level="INFO">📸 Capturing host configuration screenshot...</msg>
<arg>📸 Capturing host configuration screenshot...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.572483" elapsed="0.000294"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:30:03.573102" level="INFO">${timestamp} = 20251008_223003</msg>
<var>${timestamp}</var>
<arg>result_format=%Y%m%d_%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:30:03.572896" elapsed="0.000231"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.573402" level="INFO">${screenshot_file} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251008_223003.PNG</msg>
<var>${screenshot_file}</var>
<arg>${SCREENSHOT_DIR}/host_config_${timestamp}.${SCREENSHOT_FORMAT}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-08T22:30:03.573223" elapsed="0.000201"/>
</kw>
<kw name="Vcenter Capture Host Screenshot" owner="VCenterLibrary">
<msg time="2025-10-08T22:30:03.574575" level="INFO">${path} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251008_223003.PNG</msg>
<var>${path}</var>
<arg>${VCENTER_CONN}</arg>
<arg>${VCENTER_HOST}</arg>
<arg>${screenshot_file}</arg>
<doc>Capture screenshot of host configuration</doc>
<status status="PASS" start="2025-10-08T22:30:03.573513" elapsed="0.001097"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.574891" level="INFO">📸 Screenshot captured: C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251008_223003.PNG</msg>
<arg>📸 Screenshot captured: ${path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.574729" elapsed="0.000334"/>
</kw>
<return>
<value>${path}</value>
<status status="PASS" start="2025-10-08T22:30:03.575148" elapsed="0.000045"/>
</return>
<msg time="2025-10-08T22:30:03.575345" level="INFO">${screenshot_path} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251008_223003.PNG</msg>
<var>${screenshot_path}</var>
<doc>Capture screenshot of host configuration and status</doc>
<status status="PASS" start="2025-10-08T22:30:03.572209" elapsed="0.003162"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.575925" level="INFO">${SCREENSHOT_PATH} = C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251008_223003.PNG</msg>
<arg>${SCREENSHOT_PATH}</arg>
<arg>${screenshot_path}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:30:03.575752" elapsed="0.000209"/>
</kw>
<kw name="File Should Exist" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.576359" level="INFO" html="true">File '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\screenshots\host_config_20251008_223003.PNG"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\screenshots\host_config_20251008_223003.PNG&lt;/a&gt;' exists.</msg>
<arg>${screenshot_path}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.576155" elapsed="0.000254"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.576813" level="INFO">✅ Screenshot saved: C:\Users\write\project_2025\robot\robotframework/test_results/screenshots/host_config_20251008_223003.PNG</msg>
<arg>✅ Screenshot saved: ${screenshot_path}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.576648" elapsed="0.000301"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.577271" level="INFO">✅ All datastore information collected successfully</msg>
<arg>✅ All datastore information collected successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.577148" elapsed="0.000245"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.578360" level="INFO">✅ Completed: Critical - Collect Datastore Information - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.578201" elapsed="0.000302"/>
</kw>
<status status="PASS" start="2025-10-08T22:30:03.578033" elapsed="0.000527"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.578677" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.578588" elapsed="0.000135"/>
</branch>
<status status="PASS" start="2025-10-08T22:30:03.578012" elapsed="0.000730"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-08T22:30:03.577768" elapsed="0.001016"/>
</kw>
<doc>📊 Gather all datastore configuration data including VM assignments, available capacity, performance tiers, subscription levels, and capture screenshot of host configuration and status parameters</doc>
<tag>collection</tag>
<tag>critical</tag>
<tag>datastore</tag>
<status status="PASS" start="2025-10-08T22:30:03.538806" elapsed="0.040082"/>
</test>
<test id="s1-t3" name="Critical - Validate Datastore Configuration" line="98">
<kw name="Log Test Start" owner="datastore_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.580376" level="INFO">🏁 Starting: Critical - Validate Datastore Configuration</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.580249" elapsed="0.000248"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-08T22:30:03.580002" elapsed="0.000556"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.580826" level="INFO">🔍 Validating datastore configuration against cluster standards...</msg>
<arg>🔍 Validating datastore configuration against cluster standards...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.580725" elapsed="0.000208"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.581190" level="INFO">🔍 Validating VM datastore placement...</msg>
<arg>🔍 Validating VM datastore placement...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.581093" elapsed="0.000250"/>
</kw>
<kw name="Validate VM Datastore Placement" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.581966" level="INFO">✅ Validating VM datastore placement...</msg>
<arg>✅ Validating VM datastore placement...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.581870" elapsed="0.000219"/>
</kw>
<kw name="Datastore Validator Validate Vm Placement" owner="DatastoreValidator">
<msg time="2025-10-08T22:30:03.582378" level="INFO">${results} = {'violations': [], 'total_vms': 2, 'cluster': 'Production-Cluster'}</msg>
<var>${results}</var>
<arg>${vm_assignments}</arg>
<arg>${CLUSTER_NAME}</arg>
<doc>Validate VM datastore placement against cluster standards</doc>
<status status="PASS" start="2025-10-08T22:30:03.582199" elapsed="0.000201"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-08T22:30:03.582695" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-08T22:30:03.582495" elapsed="0.000235"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.582933" level="INFO">Length is 0.</msg>
<msg time="2025-10-08T22:30:03.582994" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.582835" elapsed="0.000177"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.583288" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.583125" elapsed="0.000301"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-08T22:30:03.583508" elapsed="0.000052"/>
</return>
<msg time="2025-10-08T22:30:03.583707" level="INFO">${placement_results} = {'violations': [], 'total_vms': 2, 'cluster': 'Production-Cluster'}</msg>
<var>${placement_results}</var>
<arg>${VM_ASSIGNMENTS}</arg>
<doc>Validate VM datastore assignments against cluster standards</doc>
<status status="PASS" start="2025-10-08T22:30:03.581633" elapsed="0.002096"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-08T22:30:03.584081" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${placement_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-08T22:30:03.583933" elapsed="0.000176"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.584389" level="INFO">Length is 0.</msg>
<msg time="2025-10-08T22:30:03.584451" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:30:03.584289" elapsed="0.000202"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.584829" level="INFO">📊 VM placement validation: 0 violations found</msg>
<arg>📊 VM placement validation: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.584684" elapsed="0.000273"/>
</kw>
<if>
<branch type="IF" condition="${violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.585410" elapsed="0.000021"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-08T22:30:03.585315" elapsed="0.000157"/>
</iter>
<var>${violation}</var>
<value>@{violations}</value>
<status status="NOT RUN" start="2025-10-08T22:30:03.585247" elapsed="0.000387"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>VM datastore placement has ${violation_count} violations</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.585738" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.585090" elapsed="0.000690"/>
</branch>
<status status="PASS" start="2025-10-08T22:30:03.585065" elapsed="0.000736"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.586055" level="INFO">✅ VM datastore placement validated</msg>
<arg>✅ VM datastore placement validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.585945" elapsed="0.000210"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.586528" level="INFO">🔍 Validating datastore available capacity...</msg>
<arg>🔍 Validating datastore available capacity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.586397" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.587039" level="INFO">📋 Minimum required free capacity: 20%</msg>
<arg>📋 Minimum required free capacity: ${MIN_FREE_CAPACITY_PERCENT}%</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.586874" elapsed="0.000285"/>
</kw>
<kw name="Validate Datastore Capacity" owner="datastore_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.587846" level="INFO">✅ Validating datastore capacity...</msg>
<arg>✅ Validating datastore capacity...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.587732" elapsed="0.000240"/>
</kw>
<kw name="Datastore Validator Validate Capacity" owner="DatastoreValidator">
<msg time="2025-10-08T22:30:03.588414" level="FAIL">TypeError: '&lt;' not supported between instances of 'float' and 'str'</msg>
<var>${results}</var>
<arg>${capacity_data}</arg>
<arg>${MIN_FREE_CAPACITY_PERCENT}</arg>
<doc>Validate datastores have sufficient available capacity</doc>
<status status="FAIL" start="2025-10-08T22:30:03.588107" elapsed="0.001518">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${warnings}</var>
<arg>${results}</arg>
<arg>warnings</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.589838" elapsed="0.000025"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${warning_count}</var>
<arg>${warnings}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.589956" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${warning_count} warnings found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.590050" elapsed="0.000014"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-08T22:30:03.590106" elapsed="0.000018"/>
</return>
<var>${capacity_results}</var>
<arg>${CAPACITY_DATA}</arg>
<doc>Validate datastores have sufficient available capacity</doc>
<status status="FAIL" start="2025-10-08T22:30:03.587433" elapsed="0.002803">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${warnings}</var>
<arg>${capacity_results}</arg>
<arg>warnings</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.590480" elapsed="0.000020"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${warning_count}</var>
<arg>${warnings}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.590669" elapsed="0.000019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Capacity validation: ${warning_count} warnings found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.590835" elapsed="0.000018"/>
</kw>
<if>
<branch type="IF" condition="${warning_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Warning: Datastore ${warning['name']} - Free: ${warning['free_percent']}% (Below threshold: ${MIN_FREE_CAPACITY_PERCENT}%)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.591167" elapsed="0.000018"/>
</kw>
<var name="${warning}"/>
<status status="NOT RUN" start="2025-10-08T22:30:03.591093" elapsed="0.000123"/>
</iter>
<var>${warning}</var>
<value>@{warnings}</value>
<status status="NOT RUN" start="2025-10-08T22:30:03.591030" elapsed="0.000209"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Datastore capacity validation failed: ${warning_count} datastores below minimum threshold</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.591317" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.590982" elapsed="0.000376"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:30:03.590961" elapsed="0.000416"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Available capacity validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.591513" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔍 Validating performance tier assignments...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.591739" elapsed="0.000017"/>
</kw>
<kw name="Validate Performance Tier Assignment" owner="datastore_keywords">
<var>${tier_results}</var>
<arg>${VM_ASSIGNMENTS}</arg>
<arg>${PERFORMANCE_TIERS}</arg>
<doc>Validate VMs are on appropriate performance tiers</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.591973" elapsed="0.000023"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${mismatches}</var>
<arg>${tier_results}</arg>
<arg>mismatches</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.592142" elapsed="0.000017"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${mismatch_count}</var>
<arg>${mismatches}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.592302" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Performance tier validation: ${mismatch_count} mismatches found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.592459" elapsed="0.000018"/>
</kw>
<if>
<branch type="IF" condition="${mismatch_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Mismatch: VM ${mismatch['vm_name']} - Current tier: ${mismatch['current_tier']}, Required: ${mismatch['required_tier']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.592752" elapsed="0.000014"/>
</kw>
<var name="${mismatch}"/>
<status status="NOT RUN" start="2025-10-08T22:30:03.592683" elapsed="0.000116"/>
</iter>
<var>${mismatch}</var>
<value>@{mismatches}</value>
<status status="NOT RUN" start="2025-10-08T22:30:03.592629" elapsed="0.000191"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Performance tier validation failed: ${mismatch_count} VMs on incorrect storage tier</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.592965" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.592590" elapsed="0.000417"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:30:03.592572" elapsed="0.000456"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Performance tier validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.593166" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔍 Validating datastore subscription ratios...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.593323" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Maximum allowed subscription ratio: ${MAX_SUBSCRIPTION_RATIO}:1</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.593541" elapsed="0.000016"/>
</kw>
<kw name="Validate Subscription Ratios" owner="datastore_keywords">
<var>${sub_results}</var>
<arg>${SUBSCRIPTION_DATA}</arg>
<doc>Validate datastore subscription ratios</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.593747" elapsed="0.000020"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${oversubscribed}</var>
<arg>${sub_results}</arg>
<arg>oversubscribed</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.593908" elapsed="0.000016"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${oversub_count}</var>
<arg>${oversubscribed}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.594063" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Subscription validation: ${oversub_count} oversubscribed datastores found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.594215" elapsed="0.000016"/>
</kw>
<if>
<branch type="IF" condition="${oversub_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Oversubscribed: Datastore ${oversub['name']} - Ratio: ${oversub['ratio']}:1 (Max: ${MAX_SUBSCRIPTION_RATIO}:1)</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.594479" elapsed="0.000014"/>
</kw>
<var name="${oversub}"/>
<status status="NOT RUN" start="2025-10-08T22:30:03.594414" elapsed="0.000110"/>
</iter>
<var>${oversub}</var>
<value>@{oversubscribed}</value>
<status status="NOT RUN" start="2025-10-08T22:30:03.594375" elapsed="0.000169"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Subscription validation failed: ${oversub_count} datastores exceed maximum ratio</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.594616" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.594342" elapsed="0.000311"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:30:03.594326" elapsed="0.000345"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Subscription ratios validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.594807" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Datastore configuration validation summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.594956" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - VM datastore placement: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.595300" elapsed="0.000024"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Available capacity: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.595510" elapsed="0.000021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Performance tier assignment: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.595698" elapsed="0.000021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Subscription ratios: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.595853" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Datastore configuration validation: PASSED - All datastores meet cluster standards and application requirements</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.596007" elapsed="0.000017"/>
</kw>
<kw name="Log Test End" owner="datastore_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:30:03.596901" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:30:03.596734" elapsed="0.000214"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.597220" level="INFO">❌ Completed: Critical - Validate Datastore Configuration - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.597042" elapsed="0.000330"/>
</kw>
<status status="PASS" start="2025-10-08T22:30:03.596969" elapsed="0.000445"/>
</branch>
<status status="PASS" start="2025-10-08T22:30:03.596717" elapsed="0.000722"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-08T22:30:03.596415" elapsed="0.001077"/>
</kw>
<doc>✅ Compare all collected datastore data (VM placement, available capacity, performance tier, subscription ratios) against cluster standards and application requirements to ensure proper storage allocation and performance compliance</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-08T22:30:03.579309" elapsed="0.018306">TypeError: '&lt;' not supported between instances of 'float' and 'str'</status>
</test>
<kw name="Generate Datastore Configuration Executive Summary" owner="datastore_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.598653" level="INFO">📊 Generating Datastore Configuration Executive Summary...</msg>
<arg>📊 Generating Datastore Configuration Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.598530" elapsed="0.000245"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:30:03.599055" level="INFO">${end_time} = 2025-10-08 22:30:03</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:30:03.598886" elapsed="0.000192"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.600012" level="INFO">${TEST_END_TIME} = 2025-10-08 22:30:03</msg>
<arg>${TEST_END_TIME}</arg>
<arg>${end_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:30:03.599173" elapsed="0.000932"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.600328" level="INFO">${summary_file} = C:\Users\write\project_2025\robot\robotframework/test_results/test9_datastore_executive_summary.html</msg>
<var>${summary_file}</var>
<arg>${EXECDIR}/test_results/test9_datastore_executive_summary.html</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-08T22:30:03.600202" elapsed="0.000146"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.601112" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;html&gt;&lt;head&gt;&lt;title&gt;Datastore Configuration Test Summary&lt;/title&gt;&lt;/head&gt;&lt;body&gt;</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-08T22:30:03.600433" elapsed="0.000734"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.601658" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;h1&gt;🎯 Datastore Configuration Validation - Executive Summary&lt;/h1&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.601265" elapsed="0.000450"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.602257" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Test Period:&lt;/strong&gt; ${TEST_START_TIME} to ${TEST_END_TIME}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.601813" elapsed="0.000496"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.602795" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;vCenter Server:&lt;/strong&gt; ${VCENTER_SERVER}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.602403" elapsed="0.000445"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.603338" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Target Host:&lt;/strong&gt; ${VCENTER_HOST}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.602941" elapsed="0.000468"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.603961" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Cluster:&lt;/strong&gt; ${CLUSTER_NAME}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.603552" elapsed="0.000478"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.604525" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;p&gt;&lt;strong&gt;Screenshot:&lt;/strong&gt; ${SCREENSHOT_PATH}&lt;/p&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.604122" elapsed="0.000457"/>
</kw>
<kw name="Append To File" owner="OperatingSystem">
<msg time="2025-10-08T22:30:03.605066" level="INFO" html="true">Appended to file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html"&gt;C:\Users\write\project_2025\robot\robotframework\test_results\test9_datastore_executive_summary.html&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>&lt;/body&gt;&lt;/html&gt;</arg>
<doc>Appends the given content to the specified file.</doc>
<status status="PASS" start="2025-10-08T22:30:03.604671" elapsed="0.000455"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.609553" level="INFO">✅ Executive summary generated: C:\Users\write\project_2025\robot\robotframework/test_results/test9_datastore_executive_summary.html</msg>
<arg>✅ Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.605246" elapsed="0.004553"/>
</kw>
<if>
<branch type="IF" condition="${VCENTER_CONN}">
<kw name="Vcenter Disconnect" owner="VCenterLibrary">
<arg>${VCENTER_CONN}</arg>
<doc>Disconnect from vCenter server</doc>
<status status="PASS" start="2025-10-08T22:30:03.610077" elapsed="0.000115"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:30:03.610373" level="INFO">🔌 Disconnected from vCenter</msg>
<arg>🔌 Disconnected from vCenter</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:30:03.610279" elapsed="0.000265"/>
</kw>
<status status="PASS" start="2025-10-08T22:30:03.609916" elapsed="0.000685"/>
</branch>
<status status="PASS" start="2025-10-08T22:30:03.609884" elapsed="0.000756"/>
</if>
<doc>Generate executive summary report for datastore configuration test</doc>
<status status="PASS" start="2025-10-08T22:30:03.598392" elapsed="0.012307"/>
</kw>
<doc>💾 Datastore Configuration Validation Test Suite - Test-9
🔍 Process: Connect to vCenter → Collect Datastore Information → Validate Datastore Configuration
✅ Pass if datastore configuration meets cluster standards and application requirements
📊 Validates: VM assignments, available capacity, performance tiers, subscription levels</doc>
<status status="FAIL" start="2025-10-08T22:30:03.344386" elapsed="0.266352"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">collection</stat>
<stat pass="0" fail="1" skip="0">compliance</stat>
<stat pass="1" fail="0" skip="0">connection</stat>
<stat pass="2" fail="1" skip="0">critical</stat>
<stat pass="1" fail="0" skip="0">datastore</stat>
<stat pass="1" fail="0" skip="0">infrastructure</stat>
<stat pass="0" fail="1" skip="0">validation</stat>
<stat pass="1" fail="0" skip="0">vcenter</stat>
</tag>
<suite>
<stat name="Datastore Configuration" id="s1" pass="2" fail="1" skip="0">Datastore Configuration</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
