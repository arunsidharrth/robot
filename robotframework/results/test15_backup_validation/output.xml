<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.13.8 on win32)" generated="2025-10-07T22:29:46.962869" rpa="false" schemaversion="5">
<suite id="s1" name="Backup Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test15_backup_validation\backup_validation.robot">
<kw name="Initialize Backup Validation Test Environment" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.018892" level="INFO">🚀 Initializing Backup Validation Test Environment...</msg>
<arg>🚀 Initializing Backup Validation Test Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.018727" elapsed="0.000320"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.020098" level="INFO">${VCENTER_API_CONN} = None</msg>
<arg>${VCENTER_API_CONN}</arg>
<arg>${None}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:29:47.019198" elapsed="0.000949"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.021260" level="INFO">${TEST_START_TIME} = </msg>
<arg>${TEST_START_TIME}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:29:47.020262" elapsed="0.001028"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T22:29:47.021540" level="INFO">${start_time} = 2025-10-07 22:29:47</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T22:29:47.021367" elapsed="0.000192"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.021749" level="INFO">${TEST_START_TIME} = 2025-10-07 22:29:47</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:29:47.021635" elapsed="0.000141"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-07T22:29:47.021980" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation"&gt;C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation&lt;/a&gt;' already exists.</msg>
<arg>results/test15_backup_validation</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-07T22:29:47.021845" elapsed="0.000172"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.022200" level="INFO">✅ Test environment initialized at 2025-10-07 22:29:47</msg>
<arg>✅ Test environment initialized at ${TEST_START_TIME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.022086" elapsed="0.000240"/>
</kw>
<doc>Initialize test environment for backup validation</doc>
<status status="PASS" start="2025-10-07T22:29:47.018226" elapsed="0.004165"/>
</kw>
<test id="s1-t1" name="Critical - Connect to vCenter API" line="18">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.023550" level="INFO">🏁 Starting: Critical - Connect to vCenter API</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.023409" elapsed="0.000266"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.023079" elapsed="0.000659"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.024182" level="INFO">🔍 Establishing API connection to vCenter...</msg>
<arg>🔍 Establishing API connection to vCenter...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.024018" elapsed="0.000317"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.024641" level="INFO">📋 vCenter Server: vcenter.example.com</msg>
<arg>📋 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.024510" elapsed="0.000253"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.025078" level="INFO">📋 API Endpoint: https://vcenter.example.com/api</msg>
<arg>📋 API Endpoint: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.024954" elapsed="0.000241"/>
</kw>
<kw name="Connect To vCenter API" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.030109" level="INFO">🔗 Connecting to vCenter API: https://vcenter.example.com/api</msg>
<arg>🔗 Connecting to vCenter API: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.029923" elapsed="0.000374"/>
</kw>
<kw name="Vcenter Api Connect" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.030836" level="INFO">${connection} = {'endpoint': 'https://vcenter.example.com/api', 'username': 'administrator@vsphere.local', 'authenticated': True, 'timeout': 30, 'verify_ssl': True, 'session_token': 'mock-session-token-12345'}</msg>
<var>${connection}</var>
<arg>${VCENTER_API_ENDPOINT}</arg>
<arg>${VCENTER_USERNAME}</arg>
<arg>${VCENTER_PASSWORD}</arg>
<arg>${API_TIMEOUT}</arg>
<arg>${API_VERIFY_SSL}</arg>
<doc>Establish connection to vCenter REST API</doc>
<status status="PASS" start="2025-10-07T22:29:47.030449" elapsed="0.000412"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.031123" level="INFO">${VCENTER_API_CONN} = {'endpoint': 'https://vcenter.example.com/api', 'username': 'administrator@vsphere.local', 'authenticated': True, 'timeout': 30, 'verify_ssl': True, 'session_token': 'mock-session-token-12345'}</msg>
<arg>${VCENTER_API_CONN}</arg>
<arg>${connection}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:29:47.030960" elapsed="0.000193"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.031364" level="INFO">✅ Connected to vCenter API: https://vcenter.example.com/api</msg>
<arg>✅ Connected to vCenter API: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.031231" elapsed="0.000264"/>
</kw>
<return>
<value>${connection}</value>
<status status="PASS" start="2025-10-07T22:29:47.031563" elapsed="0.000050"/>
</return>
<doc>Establish connection to vCenter REST API</doc>
<status status="PASS" start="2025-10-07T22:29:47.025435" elapsed="0.006281"/>
</kw>
<kw name="Verify vCenter API Connection" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.032185" level="INFO">🔍 Verifying vCenter API connection status...</msg>
<arg>🔍 Verifying vCenter API connection status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.032102" elapsed="0.000197"/>
</kw>
<kw name="Vcenter Api Verify Connection" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.032567" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>${VCENTER_API_CONN}</arg>
<doc>Verify vCenter API connection is active</doc>
<status status="PASS" start="2025-10-07T22:29:47.032423" elapsed="0.000166"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.032814" level="INFO">✅ vCenter API connection verified: True</msg>
<arg>✅ vCenter API connection verified: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.032686" elapsed="0.000427"/>
</kw>
<return>
<value>${status}</value>
<status status="PASS" start="2025-10-07T22:29:47.033165" elapsed="0.000034"/>
</return>
<msg time="2025-10-07T22:29:47.033316" level="INFO">${connection_status} = True</msg>
<var>${connection_status}</var>
<doc>Verify vCenter API connection is active</doc>
<status status="PASS" start="2025-10-07T22:29:47.031925" elapsed="0.001411"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>msg=Failed to establish vCenter API connection</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.033504" elapsed="0.000160"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.033917" level="INFO">✅ vCenter API connection established successfully</msg>
<arg>✅ vCenter API connection established successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.033821" elapsed="0.000196"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.035056" level="INFO">✅ Completed: Critical - Connect to vCenter API - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.034897" elapsed="0.000298"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.034696" elapsed="0.000545"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.035365" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.035272" elapsed="0.000141"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.034669" elapsed="0.000764"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.034398" elapsed="0.001079"/>
</kw>
<doc>🔗 Establish API connection to VMware vCenter for backup policy queries</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>vcenter_api</tag>
<status status="PASS" start="2025-10-07T22:29:47.022456" elapsed="0.013238"/>
</test>
<test id="s1-t2" name="Critical - Collect VM Backup Policy Configuration" line="35">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.036928" level="INFO">🏁 Starting: Critical - Collect VM Backup Policy Configuration</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.036822" elapsed="0.000234"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.036598" elapsed="0.000513"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.037408" level="INFO">🔍 Collecting VM backup policy configuration...</msg>
<arg>🔍 Collecting VM backup policy configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.037291" elapsed="0.000224"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.037788" level="INFO">📋 Target VMs: ['production-db-01', 'production-web-01', 'production-app-01', 'file-server-01']</msg>
<arg>📋 Target VMs: ${TARGET_VMS}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.037660" elapsed="0.000237"/>
</kw>
<kw name="Collect Backup Policy Configuration" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.038372" level="INFO">📊 Collecting backup policy configuration via API...</msg>
<arg>📊 Collecting backup policy configuration via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.038288" elapsed="0.000182"/>
</kw>
<kw name="Vcenter Api Get Backup Policies" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.038757" level="INFO">${policies} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<var>${policies}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get backup policy configuration for VMs via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.038576" elapsed="0.000203"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.038959" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.039016" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${policies}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.038872" elapsed="0.000163"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.039245" level="INFO">📊 Collected backup policies for 4 VMs</msg>
<arg>📊 Collected backup policies for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.039122" elapsed="0.000225"/>
</kw>
<return>
<value>${policies}</value>
<status status="PASS" start="2025-10-07T22:29:47.039394" elapsed="0.000030"/>
</return>
<msg time="2025-10-07T22:29:47.039523" level="INFO">${policy_data} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<var>${policy_data}</var>
<doc>Collect VM backup policy configuration via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.038117" elapsed="0.001424"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.039887" level="INFO">${POLICY_DATA} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<arg>${POLICY_DATA}</arg>
<arg>${policy_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:47.039713" elapsed="0.000210"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.040172" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.040232" level="INFO">${vm_count} = 4</msg>
<var>${vm_count}</var>
<arg>${policy_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.040079" elapsed="0.000172"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${vm_count} &gt; 0</arg>
<arg>msg=No backup policies found for target VMs</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.040398" elapsed="0.000209"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.040910" level="INFO">📊 Backup policies collected for 4 VMs</msg>
<arg>📊 Backup policies collected for ${vm_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.040768" elapsed="0.000246"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.042599" level="INFO">📊 VM: production-db-01 - Policy: Critical-DB-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.041506" elapsed="0.001213"/>
</kw>
<var name="${policy}">{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-07T22:29:47.041421" elapsed="0.001341"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.043997" level="INFO">📊 VM: production-web-01 - Policy: High-Priority-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.042939" elapsed="0.001183"/>
</kw>
<var name="${policy}">{'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'policy_id': 'policy-002', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-07T22:29:47.042859" elapsed="0.001312"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.045530" level="INFO">📊 VM: production-app-01 - Policy: High-Priority-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.044363" elapsed="0.001292"/>
</kw>
<var name="${policy}">{'vm_name': 'production-app-01', 'policy_name': 'High-Priority-Policy', 'policy_id': 'policy-002', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-07T22:29:47.044273" elapsed="0.001421"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.046759" level="INFO">📊 VM: file-server-01 - Policy: Standard-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.045840" elapsed="0.001019"/>
</kw>
<var name="${policy}">{'vm_name': 'file-server-01', 'policy_name': 'Standard-Policy', 'policy_id': 'policy-003', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-07T22:29:47.045771" elapsed="0.001122"/>
</iter>
<var>${policy}</var>
<value>@{policy_data}</value>
<status status="PASS" start="2025-10-07T22:29:47.041150" elapsed="0.005767"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.047231" level="INFO">✅ Backup policy configuration collection complete</msg>
<arg>✅ Backup policy configuration collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.047143" elapsed="0.000176"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.048332" level="INFO">✅ Completed: Critical - Collect VM Backup Policy Configuration - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.048162" elapsed="0.000308"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.047957" elapsed="0.000549"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.048609" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.048530" elapsed="0.000119"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.047934" elapsed="0.000731"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.047660" elapsed="0.001044"/>
</kw>
<doc>📊 Retrieve VM backup policy details via vCenter REST API</doc>
<tag>api_collection</tag>
<tag>backup_policy</tag>
<tag>critical</tag>
<status status="PASS" start="2025-10-07T22:29:47.036080" elapsed="0.012731"/>
</test>
<test id="s1-t3" name="Critical - Collect Backup Schedule Settings" line="56">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.049848" level="INFO">🏁 Starting: Critical - Collect Backup Schedule Settings</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.049736" elapsed="0.000233"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.049512" elapsed="0.000511"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.050256" level="INFO">🔍 Collecting backup schedule settings...</msg>
<arg>🔍 Collecting backup schedule settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.050169" elapsed="0.000174"/>
</kw>
<kw name="Collect Backup Schedule Settings" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.050772" level="INFO">📊 Collecting backup schedule settings via API...</msg>
<arg>📊 Collecting backup schedule settings via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.050692" elapsed="0.000169"/>
</kw>
<kw name="Vcenter Api Get Backup Schedules" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.051156" level="INFO">${schedules} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-08 02:29:47'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<var>${schedules}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get backup schedule settings for VMs via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.050951" elapsed="0.000226"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.051335" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.051384" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${schedules}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.051261" elapsed="0.000138"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.051567" level="INFO">📊 Collected backup schedules for 4 VMs</msg>
<arg>📊 Collected backup schedules for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.051467" elapsed="0.000195"/>
</kw>
<return>
<value>${schedules}</value>
<status status="PASS" start="2025-10-07T22:29:47.051704" elapsed="0.000034"/>
</return>
<msg time="2025-10-07T22:29:47.051835" level="INFO">${schedule_data} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-08 02:29:47'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<var>${schedule_data}</var>
<doc>Collect backup schedule settings via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.050537" elapsed="0.001316"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.052151" level="INFO">${SCHEDULE_DATA} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-08 02:29:47'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<arg>${SCHEDULE_DATA}</arg>
<arg>${schedule_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:47.052000" elapsed="0.000233"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.052456" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.052509" level="INFO">${schedule_count} = 4</msg>
<var>${schedule_count}</var>
<arg>${schedule_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.052378" elapsed="0.000147"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${schedule_count} &gt; 0</arg>
<arg>msg=No backup schedules found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.052646" elapsed="0.000169"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.053050" level="INFO">📊 Backup schedules collected for 4 VMs</msg>
<arg>📊 Backup schedules collected for ${schedule_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.052941" elapsed="0.000191"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.054986" level="INFO">📊 VM: production-db-01 - Frequency: Every 4 hours, RPO: 4h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.053427" elapsed="0.001685"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-08 02:29:47'}</var>
<status status="PASS" start="2025-10-07T22:29:47.053364" elapsed="0.001795"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.056560" level="INFO">📊 VM: production-web-01 - Frequency: Every 12 hours, RPO: 12h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.055339" elapsed="0.001351"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'next_run': '2025-10-08 10:29:47'}</var>
<status status="PASS" start="2025-10-07T22:29:47.055249" elapsed="0.001488"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.058188" level="INFO">📊 VM: production-app-01 - Frequency: Every 12 hours, RPO: 12h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.056921" elapsed="0.001368"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-app-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'next_run': '2025-10-08 10:29:47'}</var>
<status status="PASS" start="2025-10-07T22:29:47.056833" elapsed="0.001493"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.059875" level="INFO">📊 VM: file-server-01 - Frequency: Daily, RPO: 24h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.058463" elapsed="0.001653"/>
</kw>
<var name="${schedule}">{'vm_name': 'file-server-01', 'frequency': 'Daily', 'rpo_hours': 24, 'next_run': '2025-10-08 22:29:47'}</var>
<status status="PASS" start="2025-10-07T22:29:47.058396" elapsed="0.001774"/>
</iter>
<var>${schedule}</var>
<value>@{schedule_data}</value>
<status status="PASS" start="2025-10-07T22:29:47.053245" elapsed="0.006957"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.060536" level="INFO">✅ Backup schedule settings collection complete</msg>
<arg>✅ Backup schedule settings collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.060413" elapsed="0.000249"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.061941" level="INFO">✅ Completed: Critical - Collect Backup Schedule Settings - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.061718" elapsed="0.000397"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.061514" elapsed="0.000666"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.062354" elapsed="0.000025"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.062219" elapsed="0.000205"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.061489" elapsed="0.000965"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.061190" elapsed="0.001333"/>
</kw>
<doc>📅 Retrieve backup schedule settings and RPO configuration via API</doc>
<tag>api_collection</tag>
<tag>backup_schedule</tag>
<tag>critical</tag>
<tag>rpo</tag>
<status status="PASS" start="2025-10-07T22:29:47.049117" elapsed="0.013555"/>
</test>
<test id="s1-t4" name="Critical - Collect Recent Backup Job Status" line="76">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.064087" level="INFO">🏁 Starting: Critical - Collect Recent Backup Job Status</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.063907" elapsed="0.000319"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.063619" elapsed="0.000673"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.064587" level="INFO">🔍 Collecting recent backup job status...</msg>
<arg>🔍 Collecting recent backup job status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.064473" elapsed="0.000214"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.064951" level="INFO">📋 Looking back 7 days</msg>
<arg>📋 Looking back ${BACKUP_LOOKBACK_DAYS} days</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.064830" elapsed="0.000229"/>
</kw>
<kw name="Collect Recent Backup Job Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.065907" level="INFO">📊 Collecting recent backup job status via API...</msg>
<arg>📊 Collecting recent backup job status via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.065771" elapsed="0.000278"/>
</kw>
<kw name="Vcenter Api Get Recent Backup Jobs" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.066823" level="INFO">${jobs} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_mess...</msg>
<var>${jobs}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<arg>${BACKUP_LOOKBACK_DAYS}</arg>
<doc>Get recent backup job status for VMs via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.066245" elapsed="0.000756"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.067285" level="INFO">Length is 12.</msg>
<msg time="2025-10-07T22:29:47.067367" level="INFO">${count} = 12</msg>
<var>${count}</var>
<arg>${jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.067153" elapsed="0.000239"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.067682" level="INFO">📊 Collected 12 recent backup jobs</msg>
<arg>📊 Collected ${count} recent backup jobs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.067509" elapsed="0.000352"/>
</kw>
<return>
<value>${jobs}</value>
<status status="PASS" start="2025-10-07T22:29:47.067926" elapsed="0.000045"/>
</return>
<msg time="2025-10-07T22:29:47.068144" level="INFO">${job_status} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_mess...</msg>
<var>${job_status}</var>
<doc>Collect recent backup job status via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.065323" elapsed="0.002847"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.068596" level="INFO">${JOB_STATUS} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_mess...</msg>
<arg>${JOB_STATUS}</arg>
<arg>${job_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:47.068372" elapsed="0.000258"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.068851" level="INFO">Length is 12.</msg>
<msg time="2025-10-07T22:29:47.068899" level="INFO">${job_count} = 12</msg>
<var>${job_count}</var>
<arg>${job_status}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.068771" elapsed="0.000144"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${job_count} &gt; 0</arg>
<arg>msg=No recent backup jobs found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.069097" elapsed="0.000221"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.069653" level="INFO">📊 Recent backup jobs collected: 12 jobs</msg>
<arg>📊 Recent backup jobs collected: ${job_count} jobs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.069485" elapsed="0.000295"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.071575" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-07 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.070106" elapsed="0.001581"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_messa...</var>
<status status="PASS" start="2025-10-07T22:29:47.070027" elapsed="0.001700"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.073265" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-05 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.071879" elapsed="0.001491"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-1', 'status': 'Success', 'start_time': '2025-10-05 21:59:47', 'end_time': '2025-10-05 22:29:47', 'data_transferred_gb': 60, 'error_messa...</var>
<status status="PASS" start="2025-10-07T22:29:47.071808" elapsed="0.001599"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.074729" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-03 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.073543" elapsed="0.001288"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-2', 'status': 'Success', 'start_time': '2025-10-03 21:59:47', 'end_time': '2025-10-03 22:29:47', 'data_transferred_gb': 70, 'error_messa...</var>
<status status="PASS" start="2025-10-07T22:29:47.073477" elapsed="0.001386"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.076226" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-07 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.074990" elapsed="0.001363"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_mes...</var>
<status status="PASS" start="2025-10-07T22:29:47.074930" elapsed="0.001474"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.078122" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-05 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.076594" elapsed="0.001764"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-1', 'status': 'Success', 'start_time': '2025-10-05 21:59:47', 'end_time': '2025-10-05 22:29:47', 'data_transferred_gb': 60, 'error_mes...</var>
<status status="PASS" start="2025-10-07T22:29:47.076504" elapsed="0.001932"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.080493" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-03 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.078705" elapsed="0.002002"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-2', 'status': 'Success', 'start_time': '2025-10-03 21:59:47', 'end_time': '2025-10-03 22:29:47', 'data_transferred_gb': 70, 'error_mes...</var>
<status status="PASS" start="2025-10-07T22:29:47.078567" elapsed="0.002199"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.082506" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-07 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.080999" elapsed="0.001667"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_mes...</var>
<status status="PASS" start="2025-10-07T22:29:47.080879" elapsed="0.001851"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.085064" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-05 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.083024" elapsed="0.002218"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-1', 'status': 'Success', 'start_time': '2025-10-05 21:59:47', 'end_time': '2025-10-05 22:29:47', 'data_transferred_gb': 60, 'error_mes...</var>
<status status="PASS" start="2025-10-07T22:29:47.082912" elapsed="0.002380"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.087041" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-03 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.085480" elapsed="0.001696"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-2', 'status': 'Success', 'start_time': '2025-10-03 21:59:47', 'end_time': '2025-10-03 22:29:47', 'data_transferred_gb': 70, 'error_mes...</var>
<status status="PASS" start="2025-10-07T22:29:47.085388" elapsed="0.001848"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.089284" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-07 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.087461" elapsed="0.001974"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-0', 'status': 'Success', 'start_time': '2025-10-07 21:59:47', 'end_time': '2025-10-07 22:29:47', 'data_transferred_gb': 50, 'error_message':...</var>
<status status="PASS" start="2025-10-07T22:29:47.087354" elapsed="0.002135"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.091400" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-05 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.089693" elapsed="0.001830"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-1', 'status': 'Success', 'start_time': '2025-10-05 21:59:47', 'end_time': '2025-10-05 22:29:47', 'data_transferred_gb': 60, 'error_message':...</var>
<status status="PASS" start="2025-10-07T22:29:47.089588" elapsed="0.001969"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.092897" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-03 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.091693" elapsed="0.001311"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-2', 'status': 'Success', 'start_time': '2025-10-03 21:59:47', 'end_time': '2025-10-03 22:29:47', 'data_transferred_gb': 70, 'error_message':...</var>
<status status="PASS" start="2025-10-07T22:29:47.091627" elapsed="0.001410"/>
</iter>
<var>${job}</var>
<value>@{job_status}</value>
<status status="PASS" start="2025-10-07T22:29:47.069893" elapsed="0.023167"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.093452" level="INFO">✅ Recent backup job status collection complete</msg>
<arg>✅ Recent backup job status collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.093330" elapsed="0.000253"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.094670" level="INFO">✅ Completed: Critical - Collect Recent Backup Job Status - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.094509" elapsed="0.000293"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.094321" elapsed="0.000532"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.094994" elapsed="0.000020"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.094886" elapsed="0.000167"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.094296" elapsed="0.000779"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.093951" elapsed="0.001175"/>
</kw>
<doc>✅ Retrieve recent backup job execution status via API</doc>
<tag>api_collection</tag>
<tag>backup_jobs</tag>
<tag>critical</tag>
<tag>job_status</tag>
<status status="PASS" start="2025-10-07T22:29:47.063078" elapsed="0.032161"/>
</test>
<test id="s1-t5" name="Critical - Collect Retention Policy Settings" line="97">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.097026" level="INFO">🏁 Starting: Critical - Collect Retention Policy Settings</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.096889" elapsed="0.000268"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.096562" elapsed="0.000651"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.097481" level="INFO">🔍 Collecting retention policy settings...</msg>
<arg>🔍 Collecting retention policy settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.097382" elapsed="0.000212"/>
</kw>
<kw name="Collect Retention Policy Settings" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.098055" level="INFO">📊 Collecting retention policy settings via API...</msg>
<arg>📊 Collecting retention policy settings via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.097975" elapsed="0.000206"/>
</kw>
<kw name="Vcenter Api Get Retention Policies" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.098429" level="INFO">${retention} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<var>${retention}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get retention policy settings for VMs via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.098275" elapsed="0.000174"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.098599" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.098666" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${retention}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.098528" elapsed="0.000160"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.099070" level="INFO">📊 Collected retention policies for 4 VMs</msg>
<arg>📊 Collected retention policies for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.098929" elapsed="0.000242"/>
</kw>
<return>
<value>${retention}</value>
<status status="PASS" start="2025-10-07T22:29:47.099223" elapsed="0.000034"/>
</return>
<msg time="2025-10-07T22:29:47.099384" level="INFO">${retention_data} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<var>${retention_data}</var>
<doc>Collect retention policy settings via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.097816" elapsed="0.001592"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.099753" level="INFO">${RETENTION_DATA} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<arg>${RETENTION_DATA}</arg>
<arg>${retention_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:47.099577" elapsed="0.000213"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.100040" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.100101" level="INFO">${retention_count} = 4</msg>
<var>${retention_count}</var>
<arg>${retention_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.099947" elapsed="0.000173"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${retention_count} &gt; 0</arg>
<arg>msg=No retention policies found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.100247" elapsed="0.000158"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.100683" level="INFO">📊 Retention policies collected for 4 VMs</msg>
<arg>📊 Retention policies collected for ${retention_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.100551" elapsed="0.000226"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.102270" level="INFO">📊 VM: production-db-01 - Daily: 14d, Weekly: 8w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.101107" elapsed="0.001263"/>
</kw>
<var name="${retention}">{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-07T22:29:47.101029" elapsed="0.001378"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.103738" level="INFO">📊 VM: production-web-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.102540" elapsed="0.001295"/>
</kw>
<var name="${retention}">{'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-07T22:29:47.102480" elapsed="0.001387"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.104974" level="INFO">📊 VM: production-app-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.103990" elapsed="0.001096"/>
</kw>
<var name="${retention}">{'vm_name': 'production-app-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-07T22:29:47.103932" elapsed="0.001203"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.106623" level="INFO">📊 VM: file-server-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.105308" elapsed="0.001423"/>
</kw>
<var name="${retention}">{'vm_name': 'file-server-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-07T22:29:47.105226" elapsed="0.001542"/>
</iter>
<var>${retention}</var>
<value>@{retention_data}</value>
<status status="PASS" start="2025-10-07T22:29:47.100892" elapsed="0.005903"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.107032" level="INFO">✅ Retention policy settings collection complete</msg>
<arg>✅ Retention policy settings collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.106944" elapsed="0.000184"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.108028" level="INFO">✅ Completed: Critical - Collect Retention Policy Settings - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.107906" elapsed="0.000229"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.107710" elapsed="0.000459"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.108264" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.108190" elapsed="0.000114"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.107695" elapsed="0.000624"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.107501" elapsed="0.000853"/>
</kw>
<doc>🗄️ Retrieve backup retention policy settings via API</doc>
<tag>api_collection</tag>
<tag>compliance</tag>
<tag>critical</tag>
<tag>retention</tag>
<status status="PASS" start="2025-10-07T22:29:47.095727" elapsed="0.012730"/>
</test>
<test id="s1-t6" name="Critical - Collect Latest Backup Timestamps" line="117">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.109433" level="INFO">🏁 Starting: Critical - Collect Latest Backup Timestamps</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.109332" elapsed="0.000208"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.109130" elapsed="0.000463"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.109867" level="INFO">🔍 Collecting latest backup timestamps...</msg>
<arg>🔍 Collecting latest backup timestamps...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.109784" elapsed="0.000198"/>
</kw>
<kw name="Collect Latest Backup Timestamps" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.110610" level="INFO">📊 Collecting latest backup timestamps via API...</msg>
<arg>📊 Collecting latest backup timestamps via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.110490" elapsed="0.000251"/>
</kw>
<kw name="Vcenter Api Get Latest Backup Timestamps" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.111171" level="INFO">${timestamps} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-07 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<var>${timestamps}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get latest successful backup timestamps for VMs via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.110886" elapsed="0.000310"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.111396" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.111462" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${timestamps}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.111293" elapsed="0.000191"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.111727" level="INFO">📊 Collected latest backup timestamps for 4 VMs</msg>
<arg>📊 Collected latest backup timestamps for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.111585" elapsed="0.000263"/>
</kw>
<return>
<value>${timestamps}</value>
<status status="PASS" start="2025-10-07T22:29:47.111915" elapsed="0.000047"/>
</return>
<msg time="2025-10-07T22:29:47.112151" level="INFO">${timestamp_data} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-07 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<var>${timestamp_data}</var>
<doc>Collect latest successful backup timestamps via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.110268" elapsed="0.001918"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.112571" level="INFO">${TIMESTAMP_DATA} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-07 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<arg>${TIMESTAMP_DATA}</arg>
<arg>${timestamp_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:47.112386" elapsed="0.000221"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.112877" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.112931" level="INFO">${timestamp_count} = 4</msg>
<var>${timestamp_count}</var>
<arg>${timestamp_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.112788" elapsed="0.000160"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${timestamp_count} &gt; 0</arg>
<arg>msg=No backup timestamps found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.113092" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.113563" level="INFO">📊 Latest backup timestamps collected for 4 VMs</msg>
<arg>📊 Latest backup timestamps collected for ${timestamp_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.113442" elapsed="0.000249"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.115393" level="INFO">📊 VM: production-db-01 - Last Backup: 2025-10-07 19:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.114281" elapsed="0.001237"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-07 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-07T22:29:47.114143" elapsed="0.001414"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.116629" level="INFO">📊 VM: production-web-01 - Last Backup: 2025-10-07 14:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.115704" elapsed="0.001063"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-web-01', 'last_backup_time': '2025-10-07 14:29:47', 'backup_id': 'backup-production-web-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-07T22:29:47.115639" elapsed="0.001173"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.117946" level="INFO">📊 VM: production-app-01 - Last Backup: 2025-10-07 12:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.116981" elapsed="0.001086"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-app-01', 'last_backup_time': '2025-10-07 12:29:47', 'backup_id': 'backup-production-app-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-07T22:29:47.116904" elapsed="0.001219"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.119425" level="INFO">📊 VM: file-server-01 - Last Backup: 2025-10-07 07:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.118325" elapsed="0.001200"/>
</kw>
<var name="${timestamp}">{'vm_name': 'file-server-01', 'last_backup_time': '2025-10-07 07:29:47', 'backup_id': 'backup-file-server-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-07T22:29:47.118230" elapsed="0.001333"/>
</iter>
<var>${timestamp}</var>
<value>@{timestamp_data}</value>
<status status="PASS" start="2025-10-07T22:29:47.113902" elapsed="0.005688"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.119856" level="INFO">✅ Latest backup timestamps collection complete</msg>
<arg>✅ Latest backup timestamps collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.119748" elapsed="0.000203"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.120895" level="INFO">✅ Completed: Critical - Collect Latest Backup Timestamps - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.120774" elapsed="0.000226"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.120622" elapsed="0.000471"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.121188" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.121116" elapsed="0.000112"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.120603" elapsed="0.000639"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.120345" elapsed="0.000932"/>
</kw>
<doc>⏱️ Retrieve latest successful backup timestamps via API</doc>
<tag>backup_timestamp</tag>
<tag>critical</tag>
<tag>recency</tag>
<status status="PASS" start="2025-10-07T22:29:47.108730" elapsed="0.012636"/>
</test>
<test id="s1-t7" name="Critical - Collect Offsite Replication Status" line="137">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.122682" level="INFO">🏁 Starting: Critical - Collect Offsite Replication Status</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.122481" elapsed="0.000335"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.122113" elapsed="0.000757"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.123119" level="INFO">🔍 Collecting offsite replication status...</msg>
<arg>🔍 Collecting offsite replication status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.123024" elapsed="0.000192"/>
</kw>
<kw name="Collect Offsite Replication Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.123653" level="INFO">📊 Collecting offsite replication status via API...</msg>
<arg>📊 Collecting offsite replication status via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.123572" elapsed="0.000186"/>
</kw>
<kw name="Vcenter Api Get Offsite Replication Status" owner="VCenterAPILibrary">
<msg time="2025-10-07T22:29:47.124177" level="INFO">${replication} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 16:29:47', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<var>${replication}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get offsite replication status for VMs via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.123901" elapsed="0.000308"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.124445" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.124525" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${replication}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.124333" elapsed="0.000217"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.124811" level="INFO">📊 Collected offsite replication status for 4 VMs</msg>
<arg>📊 Collected offsite replication status for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.124661" elapsed="0.000258"/>
</kw>
<return>
<value>${replication}</value>
<status status="PASS" start="2025-10-07T22:29:47.124975" elapsed="0.000035"/>
</return>
<msg time="2025-10-07T22:29:47.125132" level="INFO">${replication_data} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 16:29:47', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<var>${replication_data}</var>
<doc>Collect offsite replication status via API</doc>
<status status="PASS" start="2025-10-07T22:29:47.123411" elapsed="0.001744"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.125505" level="INFO">${REPLICATION_DATA} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 16:29:47', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<arg>${REPLICATION_DATA}</arg>
<arg>${replication_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-07T22:29:47.125328" elapsed="0.000213"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.125789" level="INFO">Length is 4.</msg>
<msg time="2025-10-07T22:29:47.125850" level="INFO">${replication_count} = 4</msg>
<var>${replication_count}</var>
<arg>${replication_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.125695" elapsed="0.000175"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${replication_count} &gt; 0</arg>
<arg>msg=No offsite replication data found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-07T22:29:47.126025" elapsed="0.000172"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.126435" level="INFO">📊 Offsite replication data collected for 4 VMs</msg>
<arg>📊 Offsite replication data collected for ${replication_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.126325" elapsed="0.000196"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.128884" level="INFO">📊 VM: production-db-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.127135" elapsed="0.001953"/>
</kw>
<var name="${replication}">{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 16:29:47', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-07T22:29:47.127023" elapsed="0.002116"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.130524" level="INFO">📊 VM: production-web-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.129339" elapsed="0.001331"/>
</kw>
<var name="${replication}">{'vm_name': 'production-web-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 16:29:47', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-07T22:29:47.129236" elapsed="0.001490"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.132288" level="INFO">📊 VM: production-app-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.130925" elapsed="0.001490"/>
</kw>
<var name="${replication}">{'vm_name': 'production-app-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-07 16:29:47', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-07T22:29:47.130824" elapsed="0.001635"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.134165" level="INFO">📊 VM: file-server-01 - Enabled: False, Target: None</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.132702" elapsed="0.001563"/>
</kw>
<var name="${replication}">{'vm_name': 'file-server-01', 'offsite_enabled': False, 'offsite_target': None, 'last_replication': None, 'replication_status': 'Disabled'}</var>
<status status="PASS" start="2025-10-07T22:29:47.132619" elapsed="0.001678"/>
</iter>
<var>${replication}</var>
<value>@{replication_data}</value>
<status status="PASS" start="2025-10-07T22:29:47.126786" elapsed="0.007535"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.134670" level="INFO">✅ Offsite replication status collection complete</msg>
<arg>✅ Offsite replication status collection complete</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.134528" elapsed="0.000273"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.135788" level="INFO">✅ Completed: Critical - Collect Offsite Replication Status - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.135647" elapsed="0.000280"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.135487" elapsed="0.000485"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.136088" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.135999" elapsed="0.000139"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.135467" elapsed="0.000688"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.135227" elapsed="0.000971"/>
</kw>
<doc>🌐 Retrieve offsite replication configuration and status via API</doc>
<tag>api_collection</tag>
<tag>critical</tag>
<tag>dr</tag>
<tag>offsite_replication</tag>
<status status="PASS" start="2025-10-07T22:29:47.121645" elapsed="0.014662"/>
</test>
<test id="s1-t8" name="Critical - Validate Backup Policy Applied" line="157">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.137419" level="INFO">🏁 Starting: Critical - Validate Backup Policy Applied</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.137290" elapsed="0.000239"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.137053" elapsed="0.000524"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.137904" level="INFO">🔍 Validating backup policy application...</msg>
<arg>🔍 Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.137777" elapsed="0.000245"/>
</kw>
<kw name="Validate Backup Policy Applied" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.138478" level="INFO">✅ Validating backup policy application...</msg>
<arg>✅ Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.138388" elapsed="0.000184"/>
</kw>
<kw name="Backup Validator Validate Policies" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.138795" level="INFO">${results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${results}</var>
<arg>${policy_data}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Validate all VMs have backup policies applied</doc>
<status status="PASS" start="2025-10-07T22:29:47.138660" elapsed="0.000153"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.138991" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.138888" elapsed="0.000125"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.139161" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.139207" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.139092" elapsed="0.000129"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.139389" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.139291" elapsed="0.000191"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T22:29:47.139524" elapsed="0.000031"/>
</return>
<msg time="2025-10-07T22:29:47.139644" level="INFO">${policy_results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${policy_results}</var>
<arg>${POLICY_DATA}</arg>
<doc>Validate all VMs have appropriate backup policies applied</doc>
<status status="PASS" start="2025-10-07T22:29:47.138211" elapsed="0.001449"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.140349" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${policy_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.139812" elapsed="0.000555"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.140607" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.140661" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.140523" elapsed="0.000164"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.140961" level="INFO">📊 Policy validation results: 0 violations found</msg>
<arg>📊 Policy validation results: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.140835" elapsed="0.000227"/>
</kw>
<if>
<branch type="IF" condition="${violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.141443" elapsed="0.000015"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T22:29:47.141375" elapsed="0.000116"/>
</iter>
<var>${violation}</var>
<value>@{violations}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.141327" elapsed="0.000186"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Backup policy validation failed: ${violation_count} VMs without proper policies</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.141588" elapsed="0.000070"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.141209" elapsed="0.000478"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.141190" elapsed="0.000517"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.141934" level="INFO">✅ Backup policy validation: All VMs have appropriate policies applied</msg>
<arg>✅ Backup policy validation: All VMs have appropriate policies applied</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.141842" elapsed="0.000187"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.142728" level="INFO">✅ Completed: Critical - Validate Backup Policy Applied - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.142611" elapsed="0.000220"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.142490" elapsed="0.000386"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.142990" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.142899" elapsed="0.000141"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.142477" elapsed="0.000581"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.142287" elapsed="0.000813"/>
</kw>
<doc>✅ Validate all VMs have appropriate backup policies applied</doc>
<tag>critical</tag>
<tag>policy_compliance</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-07T22:29:47.136642" elapsed="0.006652"/>
</test>
<test id="s1-t9" name="Critical - Validate Schedule Alignment with RPO" line="181">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.144740" level="INFO">🏁 Starting: Critical - Validate Schedule Alignment with RPO</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.144564" elapsed="0.000321"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.144281" elapsed="0.000668"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.145194" level="INFO">🔍 Validating backup schedule alignment with RPO requirements...</msg>
<arg>🔍 Validating backup schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.145106" elapsed="0.000216"/>
</kw>
<kw name="Validate Schedule Alignment With RPO" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.145820" level="INFO">✅ Validating schedule alignment with RPO requirements...</msg>
<arg>✅ Validating schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.145740" elapsed="0.000195"/>
</kw>
<kw name="Backup Validator Validate Rpo Alignment" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.146381" level="FAIL">TypeError: '&gt;' not supported between instances of 'int' and 'str'</msg>
<var>${results}</var>
<arg>${schedule_data}</arg>
<arg>${VM_CRITICALITY}</arg>
<arg>${RPO_REQUIREMENTS}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-07T22:29:47.146086" elapsed="0.001410">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.147632" elapsed="0.000018"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.147730" elapsed="0.000014"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${rpo_violation_count} RPO violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.147815" elapsed="0.000013"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.147867" elapsed="0.000014"/>
</return>
<var>${schedule_results}</var>
<arg>${SCHEDULE_DATA}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-07T22:29:47.145544" elapsed="0.002426">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${schedule_results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.148197" elapsed="0.000022"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.148432" elapsed="0.000026"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 RPO validation results: ${rpo_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.148645" elapsed="0.000025"/>
</kw>
<if>
<branch type="IF" condition="${rpo_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ RPO Violation: VM ${violation['vm_name']} - Current: ${violation['current_rpo']}h, Required: ${violation['required_rpo']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.149024" elapsed="0.000019"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T22:29:47.148941" elapsed="0.000140"/>
</iter>
<var>${violation}</var>
<value>@{rpo_violations}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.148880" elapsed="0.000228"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>RPO validation failed: ${rpo_violation_count} VMs exceed RPO requirements</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.149195" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.148821" elapsed="0.000422"/>
</branch>
<status status="NOT RUN" start="2025-10-07T22:29:47.148796" elapsed="0.000471"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Schedule validation: All backup schedules meet RPO requirements</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.149416" elapsed="0.000020"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.150178" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.150004" elapsed="0.000216"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.150435" level="INFO">❌ Completed: Critical - Validate Schedule Alignment with RPO - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.150295" elapsed="0.000268"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.150237" elapsed="0.000377"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.149993" elapsed="0.000650"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.149783" elapsed="0.000915"/>
</kw>
<doc>✅ Validate backup schedules meet RPO requirements for data criticality</doc>
<tag>critical</tag>
<tag>rpo_compliance</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:29:47.143773" elapsed="0.007109">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</test>
<test id="s1-t10" name="Critical - Validate Retention Settings Compliance" line="205">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.152238" level="INFO">🏁 Starting: Critical - Validate Retention Settings Compliance</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.152098" elapsed="0.000258"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.151871" elapsed="0.000539"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.152637" level="INFO">🔍 Validating retention settings compliance...</msg>
<arg>🔍 Validating retention settings compliance...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.152551" elapsed="0.000178"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.152990" level="INFO">📋 Minimum daily retention: 7 days</msg>
<arg>📋 Minimum daily retention: ${MIN_DAILY_RETENTION} days</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.152879" elapsed="0.000233"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.153362" level="INFO">📋 Minimum weekly retention: 4 weeks</msg>
<arg>📋 Minimum weekly retention: ${MIN_WEEKLY_RETENTION} weeks</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.153249" elapsed="0.000209"/>
</kw>
<kw name="Validate Retention Settings Compliance" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.153961" level="INFO">✅ Validating retention settings compliance...</msg>
<arg>✅ Validating retention settings compliance...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.153872" elapsed="0.000180"/>
</kw>
<kw name="Backup Validator Validate Retention Compliance" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.154352" level="FAIL">TypeError: '&lt;' not supported between instances of 'int' and 'str'</msg>
<var>${results}</var>
<arg>${retention_data}</arg>
<arg>${MIN_DAILY_RETENTION}</arg>
<arg>${MIN_WEEKLY_RETENTION}</arg>
<arg>${MIN_MONTHLY_RETENTION}</arg>
<doc>Validate retention settings meet compliance standards</doc>
<status status="FAIL" start="2025-10-07T22:29:47.154148" elapsed="0.000663">TypeError: '&lt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.154921" elapsed="0.000014"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.155005" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.155077" elapsed="0.000011"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.155120" elapsed="0.000014"/>
</return>
<var>${retention_results}</var>
<arg>${RETENTION_DATA}</arg>
<doc>Validate retention settings meet compliance standards</doc>
<status status="FAIL" start="2025-10-07T22:29:47.153653" elapsed="0.001547">TypeError: '&lt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${retention_violations}</var>
<arg>${retention_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.155374" elapsed="0.000020"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${retention_violation_count}</var>
<arg>${retention_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.155547" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Retention validation results: ${retention_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.155703" elapsed="0.000018"/>
</kw>
<if>
<branch type="IF" condition="${retention_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Retention Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.156005" elapsed="0.000016"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T22:29:47.155937" elapsed="0.000115"/>
</iter>
<var>${violation}</var>
<value>@{retention_violations}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.155888" elapsed="0.000187"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Retention validation failed: ${retention_violation_count} VMs with insufficient retention</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.156148" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.155841" elapsed="0.000346"/>
</branch>
<status status="NOT RUN" start="2025-10-07T22:29:47.155821" elapsed="0.000385"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Retention validation: All settings meet compliance standards</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.156409" elapsed="0.000018"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.157063" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.156931" elapsed="0.000274"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.157420" level="INFO">❌ Completed: Critical - Validate Retention Settings Compliance - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.157296" elapsed="0.000239"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.157229" elapsed="0.000343"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.156919" elapsed="0.000674"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.156720" elapsed="0.000915"/>
</kw>
<doc>✅ Validate retention settings meet compliance standards</doc>
<tag>critical</tag>
<tag>retention_compliance</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:29:47.151414" elapsed="0.006318">TypeError: '&lt;' not supported between instances of 'int' and 'str'</status>
</test>
<test id="s1-t11" name="Critical - Validate Recent Job Completion Status" line="231">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.158792" level="INFO">🏁 Starting: Critical - Validate Recent Job Completion Status</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.158680" elapsed="0.000212"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.158505" elapsed="0.000443"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.159169" level="INFO">🔍 Validating recent backup job completion status...</msg>
<arg>🔍 Validating recent backup job completion status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.159084" elapsed="0.000176"/>
</kw>
<kw name="Validate Recent Job Completion Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.159696" level="INFO">✅ Validating recent backup job completion status...</msg>
<arg>✅ Validating recent backup job completion status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.159622" elapsed="0.000164"/>
</kw>
<kw name="Backup Validator Validate Job Status" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.164796" level="INFO">${results} = {'failed_jobs': [], 'total_jobs': 12, 'successful_jobs': 12}</msg>
<var>${results}</var>
<arg>${job_status}</arg>
<doc>Validate recent backup jobs completed successfully</doc>
<status status="PASS" start="2025-10-07T22:29:47.159897" elapsed="0.004936"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.165126" level="INFO">${failed_jobs} = []</msg>
<var>${failed_jobs}</var>
<arg>${results}</arg>
<arg>failed_jobs</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.164978" elapsed="0.000166"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.165297" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.165343" level="INFO">${failed_count} = 0</msg>
<var>${failed_count}</var>
<arg>${failed_jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.165221" elapsed="0.000137"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.165551" level="INFO">📊 Validation complete: 0 failed jobs found</msg>
<arg>📊 Validation complete: ${failed_count} failed jobs found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.165432" elapsed="0.000266"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T22:29:47.165744" elapsed="0.000030"/>
</return>
<msg time="2025-10-07T22:29:47.165880" level="INFO">${job_results} = {'failed_jobs': [], 'total_jobs': 12, 'successful_jobs': 12}</msg>
<var>${job_results}</var>
<arg>${JOB_STATUS}</arg>
<doc>Validate recent backup jobs completed successfully</doc>
<status status="PASS" start="2025-10-07T22:29:47.159443" elapsed="0.006455"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.166154" level="INFO">${failed_jobs} = []</msg>
<var>${failed_jobs}</var>
<arg>${job_results}</arg>
<arg>failed_jobs</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.166039" elapsed="0.000132"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.166477" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.166551" level="INFO">${failed_count} = 0</msg>
<var>${failed_count}</var>
<arg>${failed_jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.166363" elapsed="0.000212"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.166905" level="INFO">📊 Job validation results: 0 failed jobs found</msg>
<arg>📊 Job validation results: ${failed_count} failed jobs found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.166748" elapsed="0.000715"/>
</kw>
<if>
<branch type="IF" condition="${failed_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Failed Job: VM ${failed['vm_name']} - Status: ${failed['status']}, Error: ${failed['error_message']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.167816" elapsed="0.000017"/>
</kw>
<var name="${failed}"/>
<status status="NOT RUN" start="2025-10-07T22:29:47.167757" elapsed="0.000110"/>
</iter>
<var>${failed}</var>
<value>@{failed_jobs}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.167705" elapsed="0.000188"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Job validation failed: ${failed_count} backup jobs failed</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.167973" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.167584" elapsed="0.000430"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.167558" elapsed="0.000478"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.168270" level="INFO">✅ Job validation: All recent backup jobs completed successfully</msg>
<arg>✅ Job validation: All recent backup jobs completed successfully</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.168175" elapsed="0.000197"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.169333" level="INFO">✅ Completed: Critical - Validate Recent Job Completion Status - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.169202" elapsed="0.000248"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.169066" elapsed="0.000429"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.169610" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.169521" elapsed="0.000209"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.169051" elapsed="0.000701"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.168793" elapsed="0.001005"/>
</kw>
<doc>✅ Validate recent backup jobs completed successfully</doc>
<tag>critical</tag>
<tag>job_success</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-07T22:29:47.158167" elapsed="0.011794"/>
</test>
<test id="s1-t12" name="Critical - Validate Backup Recency" line="255">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.171174" level="INFO">🏁 Starting: Critical - Validate Backup Recency</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.171051" elapsed="0.000232"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.170817" elapsed="0.000517"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.171575" level="INFO">🔍 Validating backup recency...</msg>
<arg>🔍 Validating backup recency...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.171477" elapsed="0.000187"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.171997" level="INFO">📋 Maximum backup age: 26 hours</msg>
<arg>📋 Maximum backup age: ${MAX_BACKUP_AGE_HOURS} hours</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.171849" elapsed="0.000275"/>
</kw>
<kw name="Validate Backup Recency" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.172679" level="INFO">✅ Validating backup recency...</msg>
<arg>✅ Validating backup recency...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.172584" elapsed="0.000207"/>
</kw>
<kw name="Backup Validator Validate Backup Recency" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.173112" level="FAIL">TypeError: '&gt;' not supported between instances of 'float' and 'str'</msg>
<var>${results}</var>
<arg>${timestamp_data}</arg>
<arg>${MAX_BACKUP_AGE_HOURS}</arg>
<doc>Validate backups are recent and within acceptable time windows</doc>
<status status="FAIL" start="2025-10-07T22:29:47.172895" elapsed="0.000633">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${stale_backups}</var>
<arg>${results}</arg>
<arg>stale_backups</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.173646" elapsed="0.000017"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${stale_count}</var>
<arg>${stale_backups}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.173750" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${stale_count} stale backups found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.173835" elapsed="0.000012"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.173881" elapsed="0.000014"/>
</return>
<var>${recency_results}</var>
<arg>${TIMESTAMP_DATA}</arg>
<doc>Validate backups are recent and within acceptable time windows</doc>
<status status="FAIL" start="2025-10-07T22:29:47.172350" elapsed="0.001612">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${stale_backups}</var>
<arg>${recency_results}</arg>
<arg>stale_backups</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.174125" elapsed="0.000017"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${stale_count}</var>
<arg>${stale_backups}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.174285" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Recency validation results: ${stale_count} stale backups found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.174417" elapsed="0.000015"/>
</kw>
<if>
<branch type="IF" condition="${stale_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Stale Backup: VM ${stale['vm_name']} - Last backup: ${stale['last_backup_time']}, Age: ${stale['age_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.174690" elapsed="0.000012"/>
</kw>
<var name="${stale}"/>
<status status="NOT RUN" start="2025-10-07T22:29:47.174633" elapsed="0.000097"/>
</iter>
<var>${stale}</var>
<value>@{stale_backups}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.174592" elapsed="0.000158"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Recency validation failed: ${stale_count} VMs have stale backups</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.174811" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.174551" elapsed="0.000291"/>
</branch>
<status status="NOT RUN" start="2025-10-07T22:29:47.174534" elapsed="0.000324"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Recency validation: All backups are current and within acceptable time windows</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.174973" elapsed="0.000014"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.175628" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.175501" elapsed="0.000165"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.175883" level="INFO">❌ Completed: Critical - Validate Backup Recency - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.175756" elapsed="0.000251"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.175683" elapsed="0.000374"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.175489" elapsed="0.000586"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.175301" elapsed="0.000836"/>
</kw>
<doc>✅ Validate backups are recent and within acceptable time windows</doc>
<tag>backup_recency</tag>
<tag>critical</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:29:47.170327" elapsed="0.005897">TypeError: '&gt;' not supported between instances of 'float' and 'str'</status>
</test>
<test id="s1-t13" name="Critical - Validate Offsite Replication Configuration" line="280">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.177742" level="INFO">🏁 Starting: Critical - Validate Offsite Replication Configuration</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.177569" elapsed="0.000424"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.177196" elapsed="0.000885"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.178481" level="INFO">🔍 Validating offsite replication configuration...</msg>
<arg>🔍 Validating offsite replication configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.178328" elapsed="0.000282"/>
</kw>
<kw name="Validate Offsite Replication Configuration" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.179548" level="INFO">✅ Validating offsite replication configuration...</msg>
<arg>✅ Validating offsite replication configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.179379" elapsed="0.000319"/>
</kw>
<kw name="Backup Validator Validate Offsite Replication" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.180068" level="INFO">${results} = {'violations': [], 'total_required_vms': 3, 'compliant_vms': 3}</msg>
<var>${results}</var>
<arg>${replication_data}</arg>
<arg>${OFFSITE_REQUIRED_VMS}</arg>
<doc>Validate offsite replication is enabled for critical VMs</doc>
<status status="PASS" start="2025-10-07T22:29:47.179815" elapsed="0.000283"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.180339" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.180203" elapsed="0.000166"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.180547" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.180604" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.180461" elapsed="0.000162"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.180836" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.180708" elapsed="0.000275"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T22:29:47.181035" elapsed="0.000035"/>
</return>
<msg time="2025-10-07T22:29:47.181191" level="INFO">${replication_results} = {'violations': [], 'total_required_vms': 3, 'compliant_vms': 3}</msg>
<var>${replication_results}</var>
<arg>${REPLICATION_DATA}</arg>
<doc>Validate offsite replication is enabled for critical VMs</doc>
<status status="PASS" start="2025-10-07T22:29:47.178879" elapsed="0.002331"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.181645" level="INFO">${offsite_violations} = []</msg>
<var>${offsite_violations}</var>
<arg>${replication_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.181442" elapsed="0.000233"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.181962" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.182020" level="INFO">${offsite_violation_count} = 0</msg>
<var>${offsite_violation_count}</var>
<arg>${offsite_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.181871" elapsed="0.000168"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.182320" level="INFO">📊 Offsite validation results: 0 violations found</msg>
<arg>📊 Offsite validation results: ${offsite_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.182187" elapsed="0.000238"/>
</kw>
<if>
<branch type="IF" condition="${offsite_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Offsite Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.182824" elapsed="0.000018"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-07T22:29:47.182753" elapsed="0.000123"/>
</iter>
<var>${violation}</var>
<value>@{offsite_violations}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.182702" elapsed="0.000198"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Offsite replication validation failed: ${offsite_violation_count} VMs missing offsite protection</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.182979" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.182573" elapsed="0.000446"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.182550" elapsed="0.000490"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.183285" level="INFO">✅ Offsite validation: Critical VMs have proper offsite replication configured</msg>
<arg>✅ Offsite validation: Critical VMs have proper offsite replication configured</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.183187" elapsed="0.000203"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.184193" level="INFO">✅ Completed: Critical - Validate Offsite Replication Configuration - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.184074" elapsed="0.000224"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.183950" elapsed="0.000396"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.184461" elapsed="0.000018"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.184372" elapsed="0.000150"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.183936" elapsed="0.000606"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.183691" elapsed="0.000894"/>
</kw>
<doc>✅ Validate offsite replication is enabled for critical VMs</doc>
<tag>critical</tag>
<tag>dr</tag>
<tag>offsite_compliance</tag>
<tag>validation</tag>
<status status="PASS" start="2025-10-07T22:29:47.176662" elapsed="0.008090"/>
</test>
<test id="s1-t14" name="Normal - Comprehensive Backup Compliance Validation" line="304">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.186293" level="INFO">🏁 Starting: Normal - Comprehensive Backup Compliance Validation</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.186182" elapsed="0.000224"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.185977" elapsed="0.000544"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.186742" level="INFO">🔍 Performing comprehensive backup compliance validation...</msg>
<arg>🔍 Performing comprehensive backup compliance validation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.186655" elapsed="0.000180"/>
</kw>
<kw name="Validate Complete Backup Compliance" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.187461" level="INFO">🔍 Performing comprehensive backup compliance validation...</msg>
<arg>🔍 Performing comprehensive backup compliance validation...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.187353" elapsed="0.000257"/>
</kw>
<kw name="Validate Backup Policy Applied" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.188065" level="INFO">✅ Validating backup policy application...</msg>
<arg>✅ Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.187987" elapsed="0.000202"/>
</kw>
<kw name="Backup Validator Validate Policies" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.188450" level="INFO">${results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${results}</var>
<arg>${policy_data}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Validate all VMs have backup policies applied</doc>
<status status="PASS" start="2025-10-07T22:29:47.188295" elapsed="0.000176"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-07T22:29:47.188682" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-07T22:29:47.188561" elapsed="0.000140"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.188874" level="INFO">Length is 0.</msg>
<msg time="2025-10-07T22:29:47.188928" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-07T22:29:47.188788" elapsed="0.000157"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.189134" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.189021" elapsed="0.000222"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-07T22:29:47.189294" elapsed="0.000044"/>
</return>
<msg time="2025-10-07T22:29:47.189450" level="INFO">${policy_validation} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${policy_validation}</var>
<arg>${POLICY_DATA}</arg>
<doc>Validate all VMs have appropriate backup policies applied</doc>
<status status="PASS" start="2025-10-07T22:29:47.187777" elapsed="0.001692"/>
</kw>
<kw name="Validate Schedule Alignment With RPO" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.189875" level="INFO">✅ Validating schedule alignment with RPO requirements...</msg>
<arg>✅ Validating schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.189790" elapsed="0.000189"/>
</kw>
<kw name="Backup Validator Validate Rpo Alignment" owner="BackupValidator">
<msg time="2025-10-07T22:29:47.190238" level="FAIL">TypeError: '&gt;' not supported between instances of 'int' and 'str'</msg>
<var>${results}</var>
<arg>${schedule_data}</arg>
<arg>${VM_CRITICALITY}</arg>
<arg>${RPO_REQUIREMENTS}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-07T22:29:47.190071" elapsed="0.000510">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.190677" elapsed="0.000014"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.190758" elapsed="0.000012"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${rpo_violation_count} RPO violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.190833" elapsed="0.000011"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.190884" elapsed="0.000013"/>
</return>
<var>${rpo_validation}</var>
<arg>${SCHEDULE_DATA}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-07T22:29:47.189597" elapsed="0.001366">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Validate Retention Settings Compliance" owner="backup_keywords">
<var>${retention_validation}</var>
<arg>${RETENTION_DATA}</arg>
<doc>Validate retention settings meet compliance standards</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191085" elapsed="0.000017"/>
</kw>
<kw name="Validate Recent Job Completion Status" owner="backup_keywords">
<var>${job_validation}</var>
<arg>${JOB_STATUS}</arg>
<doc>Validate recent backup jobs completed successfully</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191199" elapsed="0.000015"/>
</kw>
<kw name="Validate Backup Recency" owner="backup_keywords">
<var>${recency_validation}</var>
<arg>${TIMESTAMP_DATA}</arg>
<doc>Validate backups are recent and within acceptable time windows</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191312" elapsed="0.000014"/>
</kw>
<kw name="Validate Offsite Replication Configuration" owner="backup_keywords">
<var>${offsite_validation}</var>
<arg>${REPLICATION_DATA}</arg>
<doc>Validate offsite replication is enabled for critical VMs</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191427" elapsed="0.000015"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${total_violations}</var>
<arg>${policy_validation}['violations'].__len__() + ${rpo_validation}['rpo_violations'].__len__() + ${retention_validation}['violations'].__len__() + ${job_validation}['failed_jobs'].__len__() + ${recency_validation}['stale_backups'].__len__() + ${offsite_validation}['violations'].__len__()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191507" elapsed="0.000013"/>
</kw>
<if>
<branch type="IF" condition="${total_violations} &gt; 0">
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Comprehensive validation found ${total_violations} total issues</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191645" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.191577" elapsed="0.000104"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>✅ Comprehensive validation: All checks passed</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.191757" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.191700" elapsed="0.000144"/>
</branch>
<status status="NOT RUN" start="2025-10-07T22:29:47.191560" elapsed="0.000301"/>
</if>
<return>
<value>${total_violations}</value>
<status status="NOT RUN" start="2025-10-07T22:29:47.191894" elapsed="0.000011"/>
</return>
<doc>Perform comprehensive backup compliance validation</doc>
<status status="FAIL" start="2025-10-07T22:29:47.187146" elapsed="0.004817">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Comprehensive validation summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.192144" elapsed="0.000021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - vCenter API connection: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.192346" elapsed="0.000021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Backup policies applied: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.192525" elapsed="0.000019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Schedule alignment with RPO: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.192691" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Retention settings compliance: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.192844" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Recent job completion: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.193052" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Backup recency: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.193327" elapsed="0.000020"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Offsite replication: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.193589" elapsed="0.000027"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Comprehensive backup compliance validation: PASSED</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.193777" elapsed="0.000017"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-07T22:29:47.194663" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2025-10-07T22:29:47.194496" elapsed="0.000216"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.194982" level="INFO">❌ Completed: Normal - Comprehensive Backup Compliance Validation - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.194801" elapsed="0.000355"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.194735" elapsed="0.000457"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.194475" elapsed="0.000736"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-07T22:29:47.194193" elapsed="0.001061"/>
</kw>
<doc>🔗 Perform comprehensive validation of all backup compliance aspects</doc>
<tag>comprehensive</tag>
<tag>normal</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-07T22:29:47.185232" elapsed="0.010127">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</test>
<kw name="Generate Backup Validation Executive Summary" owner="backup_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.196892" level="INFO">📊 Generating Backup Validation Executive Summary...</msg>
<arg>📊 Generating Backup Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.196537" elapsed="0.000501"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-07T22:29:47.197441" level="INFO">${end_time} = 2025-10-07 22:29:47</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-07T22:29:47.197189" elapsed="0.000283"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.198557" level="INFO">${TEST_END_TIME} = 2025-10-07 22:29:47</msg>
<arg>${TEST_END_TIME}</arg>
<arg>${end_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-07T22:29:47.197605" elapsed="0.000984"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.198746" level="INFO">${summary_file} = results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-07T22:29:47.198664" elapsed="0.000100"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.199073" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:29:47
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>💾 TEST-15: BACKUP VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${end_time}</arg>
<arg>🎯 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>📋 Test Suite: Test-15 Backup Configuration Validation</arg>
<arg>========================================</arg>
<arg>📋 TEST OBJECTIVES</arg>
<arg>========================================</arg>
<arg>1. Connect to vCenter REST API</arg>
<arg>2. Collect backup configuration via API calls</arg>
<arg>3. Validate backup compliance against standards</arg>
<arg>========================================</arg>
<arg>📊 VALIDATION SCOPE</arg>
<arg>========================================</arg>
<arg>✅ Backup policy application</arg>
<arg>✅ Schedule alignment with RPO</arg>
<arg>✅ Retention settings compliance</arg>
<arg>✅ Recent job completion status</arg>
<arg>✅ Backup recency validation</arg>
<arg>✅ Offsite replication configuration</arg>
<arg>========================================</arg>
<arg>📋 TARGET VMS</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:47.198838" elapsed="0.000258"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.199499" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:29:47
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:47.199358" elapsed="0.000226"/>
</kw>
<var name="${vm}">production-db-01</var>
<status status="PASS" start="2025-10-07T22:29:47.199293" elapsed="0.000325"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.199879" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:29:47
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:47.199731" elapsed="0.000170"/>
</kw>
<var name="${vm}">production-web-01</var>
<status status="PASS" start="2025-10-07T22:29:47.199677" elapsed="0.000254"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.200159" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:29:47
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:47.200032" elapsed="0.000147"/>
</kw>
<var name="${vm}">production-app-01</var>
<status status="PASS" start="2025-10-07T22:29:47.199981" elapsed="0.000227"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.200895" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:29:47
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:47.200307" elapsed="0.000611"/>
</kw>
<var name="${vm}">file-server-01</var>
<status status="PASS" start="2025-10-07T22:29:47.200257" elapsed="0.000693"/>
</iter>
<var>${vm}</var>
<value>@{TARGET_VMS}</value>
<status status="PASS" start="2025-10-07T22:29:47.199191" elapsed="0.001780"/>
</for>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.201299" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-07 22:29:47
🎯 vCenter Server: vce...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>========================================</arg>
<arg>🔍 COMPLIANCE REQUIREMENTS</arg>
<arg>========================================</arg>
<arg>📅 Maximum backup age: ${MAX_BACKUP_AGE_HOURS} hours</arg>
<arg>💾 Minimum daily retention: ${MIN_DAILY_RETENTION} days</arg>
<arg>📦 Minimum weekly retention: ${MIN_WEEKLY_RETENTION} weeks</arg>
<arg>🌐 Offsite replication: Required for critical VMs</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 API data collected in JSON format</arg>
<arg>📊 Robot Framework reports: results/test15_backup_validation/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>💾 Backup policies validated</arg>
<arg>📅 Schedule compliance verified</arg>
<arg>🗄️ Retention settings confirmed</arg>
<arg>🌐 Offsite replication validated</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-07T22:29:47.201040" elapsed="0.000279"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-07T22:29:47.202151" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation\Test15_Backup_Validation_Executive_Summary.txt"&gt;C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation\Test15_Backup_Validation_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-07T22:29:47.201446" elapsed="0.000753"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.202413" level="INFO">📊 Executive summary generated: results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.202280" elapsed="0.000280"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.202782" level="INFO">✅ Test-15 Backup Validation completed successfully!</msg>
<arg>✅ Test-15 Backup Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.202674" elapsed="0.000227"/>
</kw>
<if>
<branch type="IF" condition="${VCENTER_API_CONN}">
<kw name="Vcenter Api Disconnect" owner="VCenterAPILibrary">
<arg>${VCENTER_API_CONN}</arg>
<doc>Disconnect from vCenter API</doc>
<status status="PASS" start="2025-10-07T22:29:47.203097" elapsed="0.000087"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-07T22:29:47.203333" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-07T22:29:47.203257" elapsed="0.000179"/>
</kw>
<status status="PASS" start="2025-10-07T22:29:47.202985" elapsed="0.000490"/>
</branch>
<status status="PASS" start="2025-10-07T22:29:47.202967" elapsed="0.000531"/>
</if>
<doc>Generate executive summary report for backup validation test</doc>
<status status="PASS" start="2025-10-07T22:29:47.196360" elapsed="0.007179"/>
</kw>
<doc>💾 Backup Configuration Validation Test Suite - Test-15
🔍 Process: Connect to vCenter API → Collect Backup Configuration → Validate Backup Compliance
✅ Pass if backup configuration meets data criticality requirements and compliance standards
📊 Validates: Backup policies, schedules, retention, job status, offsite replication</doc>
<status status="FAIL" start="2025-10-07T22:29:46.964365" elapsed="0.239202"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="4" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">api_collection</stat>
<stat pass="1" fail="0" skip="0">backup_jobs</stat>
<stat pass="1" fail="0" skip="0">backup_policy</stat>
<stat pass="0" fail="1" skip="0">backup_recency</stat>
<stat pass="1" fail="0" skip="0">backup_schedule</stat>
<stat pass="1" fail="0" skip="0">backup_timestamp</stat>
<stat pass="1" fail="0" skip="0">compliance</stat>
<stat pass="0" fail="1" skip="0">comprehensive</stat>
<stat pass="1" fail="0" skip="0">connection</stat>
<stat pass="10" fail="3" skip="0">critical</stat>
<stat pass="2" fail="0" skip="0">dr</stat>
<stat pass="1" fail="0" skip="0">infrastructure</stat>
<stat pass="1" fail="0" skip="0">job_status</stat>
<stat pass="1" fail="0" skip="0">job_success</stat>
<stat pass="0" fail="1" skip="0">normal</stat>
<stat pass="1" fail="0" skip="0">offsite_compliance</stat>
<stat pass="1" fail="0" skip="0">offsite_replication</stat>
<stat pass="1" fail="0" skip="0">policy_compliance</stat>
<stat pass="1" fail="0" skip="0">recency</stat>
<stat pass="1" fail="0" skip="0">retention</stat>
<stat pass="0" fail="1" skip="0">retention_compliance</stat>
<stat pass="1" fail="0" skip="0">rpo</stat>
<stat pass="0" fail="1" skip="0">rpo_compliance</stat>
<stat pass="3" fail="4" skip="0">validation</stat>
<stat pass="1" fail="0" skip="0">vcenter_api</stat>
</tag>
<suite>
<stat name="Backup Validation" id="s1" pass="10" fail="4" skip="0">Backup Validation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
