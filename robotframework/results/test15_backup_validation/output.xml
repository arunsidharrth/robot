<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.13.8 on win32)" generated="2025-10-08T22:29:47.010428" rpa="false" schemaversion="5">
<suite id="s1" name="Backup Validation" source="C:\Users\write\project_2025\robot\robotframework\tests\test15_backup_validation\backup_validation.robot">
<kw name="Initialize Backup Validation Test Environment" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.069591" level="INFO">🚀 Initializing Backup Validation Test Environment...</msg>
<arg>🚀 Initializing Backup Validation Test Environment...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.069433" elapsed="0.000308"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.070746" level="INFO">${VCENTER_API_CONN} = None</msg>
<arg>${VCENTER_API_CONN}</arg>
<arg>${None}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:29:47.069894" elapsed="0.000893"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.071925" level="INFO">${TEST_START_TIME} = </msg>
<arg>${TEST_START_TIME}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:29:47.070876" elapsed="0.001081"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:29:47.072220" level="INFO">${start_time} = 2025-10-08 22:29:47</msg>
<var>${start_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:29:47.072038" elapsed="0.000204"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.072461" level="INFO">${TEST_START_TIME} = 2025-10-08 22:29:47</msg>
<arg>${TEST_START_TIME}</arg>
<arg>${start_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:29:47.072335" elapsed="0.000154"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2025-10-08T22:29:47.072695" level="INFO" html="true">Directory '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation"&gt;C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation&lt;/a&gt;' already exists.</msg>
<arg>results/test15_backup_validation</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2025-10-08T22:29:47.072559" elapsed="0.000177"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.075174" level="INFO">✅ Test environment initialized at 2025-10-08 22:29:47</msg>
<arg>✅ Test environment initialized at ${TEST_START_TIME}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.072813" elapsed="0.002513"/>
</kw>
<doc>Initialize test environment for backup validation</doc>
<status status="PASS" start="2025-10-08T22:29:47.068876" elapsed="0.006543"/>
</kw>
<test id="s1-t1" name="Critical - Connect to vCenter API" line="18">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.076654" level="INFO">🏁 Starting: Critical - Connect to vCenter API</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.076504" elapsed="0.000291"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-08T22:29:47.076207" elapsed="0.000651"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.077227" level="INFO">🔍 Establishing API connection to vCenter...</msg>
<arg>🔍 Establishing API connection to vCenter...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.077084" elapsed="0.000293"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.077692" level="INFO">📋 vCenter Server: allxdvitap01</msg>
<arg>📋 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.077558" elapsed="0.000224"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.078094" level="INFO">📋 API Endpoint: https://allxdvitap01/api</msg>
<arg>📋 API Endpoint: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.077964" elapsed="0.000254"/>
</kw>
<kw name="Connect To vCenter API" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.078825" level="INFO">🔗 Connecting to vCenter API: https://allxdvitap01/api</msg>
<arg>🔗 Connecting to vCenter API: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.078677" elapsed="0.000273"/>
</kw>
<kw name="Vcenter Api Connect" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.079343" level="INFO">${connection} = {'endpoint': 'https://allxdvitap01/api', 'username': 'administrator@vsphere.local', 'authenticated': True, 'timeout': 30, 'verify_ssl': True, 'session_token': 'mock-session-token-12345'}</msg>
<var>${connection}</var>
<arg>${VCENTER_API_ENDPOINT}</arg>
<arg>${VCENTER_USERNAME}</arg>
<arg>${VCENTER_PASSWORD}</arg>
<arg>${API_TIMEOUT}</arg>
<arg>${API_VERIFY_SSL}</arg>
<doc>Establish connection to vCenter REST API</doc>
<status status="PASS" start="2025-10-08T22:29:47.079050" elapsed="0.000315"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.079607" level="INFO">${VCENTER_API_CONN} = {'endpoint': 'https://allxdvitap01/api', 'username': 'administrator@vsphere.local', 'authenticated': True, 'timeout': 30, 'verify_ssl': True, 'session_token': 'mock-session-token-12345'}</msg>
<arg>${VCENTER_API_CONN}</arg>
<arg>${connection}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:29:47.079459" elapsed="0.000178"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.079839" level="INFO">✅ Connected to vCenter API: https://allxdvitap01/api</msg>
<arg>✅ Connected to vCenter API: ${VCENTER_API_ENDPOINT}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.079716" elapsed="0.000232"/>
</kw>
<return>
<value>${connection}</value>
<status status="PASS" start="2025-10-08T22:29:47.080004" elapsed="0.000060"/>
</return>
<doc>Establish connection to vCenter REST API</doc>
<status status="PASS" start="2025-10-08T22:29:47.078462" elapsed="0.001692"/>
</kw>
<kw name="Verify vCenter API Connection" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.080615" level="INFO">🔍 Verifying vCenter API connection status...</msg>
<arg>🔍 Verifying vCenter API connection status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.080525" elapsed="0.000202"/>
</kw>
<kw name="Vcenter Api Verify Connection" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.080959" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>${VCENTER_API_CONN}</arg>
<doc>Verify vCenter API connection is active</doc>
<status status="PASS" start="2025-10-08T22:29:47.080825" elapsed="0.000154"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.081193" level="INFO">✅ vCenter API connection verified: True</msg>
<arg>✅ vCenter API connection verified: ${status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.081067" elapsed="0.000284"/>
</kw>
<return>
<value>${status}</value>
<status status="PASS" start="2025-10-08T22:29:47.081625" elapsed="0.000048"/>
</return>
<msg time="2025-10-08T22:29:47.081798" level="INFO">${connection_status} = True</msg>
<var>${connection_status}</var>
<doc>Verify vCenter API connection is active</doc>
<status status="PASS" start="2025-10-08T22:29:47.080349" elapsed="0.001470"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${connection_status}</arg>
<arg>msg=Failed to establish vCenter API connection</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.081985" elapsed="0.000152"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.082380" level="INFO">✅ vCenter API connection established to query VM backup policy configuration and status</msg>
<arg>✅ vCenter API connection established to query VM backup policy configuration and status</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.082286" elapsed="0.000209"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.083591" level="INFO">✅ Completed: Critical - Connect to vCenter API - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.083436" elapsed="0.000308"/>
</kw>
<status status="PASS" start="2025-10-08T22:29:47.083233" elapsed="0.000567"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.083969" elapsed="0.000020"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.083852" elapsed="0.000172"/>
</branch>
<status status="PASS" start="2025-10-08T22:29:47.083203" elapsed="0.000845"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-08T22:29:47.082910" elapsed="0.001194"/>
</kw>
<doc>🔗 Establish API connection to VMware vCenter to query VM backup policy configuration and status</doc>
<tag>connection</tag>
<tag>critical</tag>
<tag>infrastructure</tag>
<tag>vcenter_api</tag>
<status status="PASS" start="2025-10-08T22:29:47.075511" elapsed="0.008795"/>
</test>
<test id="s1-t2" name="Critical - Collect Backup Configuration via API" line="35">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.085688" level="INFO">🏁 Starting: Critical - Collect Backup Configuration via API</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.085561" elapsed="0.000272"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-08T22:29:47.085341" elapsed="0.000566"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.086231" level="INFO">🔍 Collecting backup configuration via API...</msg>
<arg>🔍 Collecting backup configuration via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.086106" elapsed="0.000240"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.086677" level="INFO">📋 Target VMs: ['production-db-01', 'production-web-01', 'production-app-01', 'file-server-01']</msg>
<arg>📋 Target VMs: ${TARGET_VMS}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.086525" elapsed="0.000284"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.087081" level="INFO">📊 Retrieving VM backup policy details...</msg>
<arg>📊 Retrieving VM backup policy details...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.086984" elapsed="0.000212"/>
</kw>
<kw name="Collect Backup Policy Configuration" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.087709" level="INFO">📊 Collecting backup policy configuration via API...</msg>
<arg>📊 Collecting backup policy configuration via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.087619" elapsed="0.000211"/>
</kw>
<kw name="Vcenter Api Get Backup Policies" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.088103" level="INFO">${policies} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<var>${policies}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get backup policy configuration for VMs via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.087932" elapsed="0.000193"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.088296" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.088358" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${policies}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.088213" elapsed="0.000162"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.088608" level="INFO">📊 Collected backup policies for 4 VMs</msg>
<arg>📊 Collected backup policies for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.088455" elapsed="0.000260"/>
</kw>
<return>
<value>${policies}</value>
<status status="PASS" start="2025-10-08T22:29:47.088765" elapsed="0.000038"/>
</return>
<msg time="2025-10-08T22:29:47.088916" level="INFO">${policy_data} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<var>${policy_data}</var>
<doc>Collect VM backup policy configuration via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.087423" elapsed="0.001514"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.089420" level="INFO">${POLICY_DATA} = [{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}, {'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'polic...</msg>
<arg>${POLICY_DATA}</arg>
<arg>${policy_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:47.089181" elapsed="0.000291"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.089773" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.089832" level="INFO">${vm_count} = 4</msg>
<var>${vm_count}</var>
<arg>${policy_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.089665" elapsed="0.000185"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${vm_count} &gt; 0</arg>
<arg>msg=No backup policies found for target VMs</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.090013" elapsed="0.000210"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.091710" level="INFO">📊 VM: production-db-01 - Policy: Critical-DB-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.090698" elapsed="0.001146"/>
</kw>
<var name="${policy}">{'vm_name': 'production-db-01', 'policy_name': 'Critical-DB-Policy', 'policy_id': 'policy-001', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-08T22:29:47.090623" elapsed="0.001258"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.093121" level="INFO">📊 VM: production-web-01 - Policy: High-Priority-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.092059" elapsed="0.001227"/>
</kw>
<var name="${policy}">{'vm_name': 'production-web-01', 'policy_name': 'High-Priority-Policy', 'policy_id': 'policy-002', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-08T22:29:47.091980" elapsed="0.001362"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.094591" level="INFO">📊 VM: production-app-01 - Policy: High-Priority-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.093567" elapsed="0.001168"/>
</kw>
<var name="${policy}">{'vm_name': 'production-app-01', 'policy_name': 'High-Priority-Policy', 'policy_id': 'policy-002', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-08T22:29:47.093457" elapsed="0.001331"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.096067" level="INFO">📊 VM: file-server-01 - Policy: Standard-Policy</msg>
<arg>📊 VM: ${policy['vm_name']} - Policy: ${policy['policy_name']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.094978" elapsed="0.001203"/>
</kw>
<var name="${policy}">{'vm_name': 'file-server-01', 'policy_name': 'Standard-Policy', 'policy_id': 'policy-003', 'policy_applied': True}</var>
<status status="PASS" start="2025-10-08T22:29:47.094888" elapsed="0.001330"/>
</iter>
<var>${policy}</var>
<value>@{policy_data}</value>
<status status="PASS" start="2025-10-08T22:29:47.090469" elapsed="0.005777"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.096712" level="INFO">✅ Backup policy details collected for 4 VMs</msg>
<arg>✅ Backup policy details collected for ${vm_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.096537" elapsed="0.000287"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.097129" level="INFO">📊 Retrieving backup schedule settings...</msg>
<arg>📊 Retrieving backup schedule settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.097010" elapsed="0.000250"/>
</kw>
<kw name="Collect Backup Schedule Settings" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.097909" level="INFO">📊 Collecting backup schedule settings via API...</msg>
<arg>📊 Collecting backup schedule settings via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.097796" elapsed="0.000241"/>
</kw>
<kw name="Vcenter Api Get Backup Schedules" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.098356" level="INFO">${schedules} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-09 02:29:47'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<var>${schedules}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get backup schedule settings for VMs via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.098143" elapsed="0.000237"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.098551" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.098602" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${schedules}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.098469" elapsed="0.000149"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.098813" level="INFO">📊 Collected backup schedules for 4 VMs</msg>
<arg>📊 Collected backup schedules for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.098697" elapsed="0.000223"/>
</kw>
<return>
<value>${schedules}</value>
<status status="PASS" start="2025-10-08T22:29:47.098967" elapsed="0.000034"/>
</return>
<msg time="2025-10-08T22:29:47.099116" level="INFO">${schedule_data} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-09 02:29:47'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<var>${schedule_data}</var>
<doc>Collect backup schedule settings via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.097561" elapsed="0.001575"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.099543" level="INFO">${SCHEDULE_DATA} = [{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-09 02:29:47'}, {'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'nex...</msg>
<arg>${SCHEDULE_DATA}</arg>
<arg>${schedule_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:47.099332" elapsed="0.000255"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.099838" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.099894" level="INFO">${schedule_count} = 4</msg>
<var>${schedule_count}</var>
<arg>${schedule_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.099748" elapsed="0.000163"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${schedule_count} &gt; 0</arg>
<arg>msg=No backup schedules found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.100058" elapsed="0.000173"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.101883" level="INFO">📊 VM: production-db-01 - Frequency: Every 4 hours, RPO: 4h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.100544" elapsed="0.001454"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-db-01', 'frequency': 'Every 4 hours', 'rpo_hours': 4, 'next_run': '2025-10-09 02:29:47'}</var>
<status status="PASS" start="2025-10-08T22:29:47.100472" elapsed="0.001568"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.103732" level="INFO">📊 VM: production-web-01 - Frequency: Every 12 hours, RPO: 12h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.102215" elapsed="0.001654"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-web-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'next_run': '2025-10-09 10:29:47'}</var>
<status status="PASS" start="2025-10-08T22:29:47.102127" elapsed="0.001783"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.105511" level="INFO">📊 VM: production-app-01 - Frequency: Every 12 hours, RPO: 12h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.104172" elapsed="0.001501"/>
</kw>
<var name="${schedule}">{'vm_name': 'production-app-01', 'frequency': 'Every 12 hours', 'rpo_hours': 12, 'next_run': '2025-10-09 10:29:47'}</var>
<status status="PASS" start="2025-10-08T22:29:47.104078" elapsed="0.001640"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.107244" level="INFO">📊 VM: file-server-01 - Frequency: Daily, RPO: 24h</msg>
<arg>📊 VM: ${schedule['vm_name']} - Frequency: ${schedule['frequency']}, RPO: ${schedule['rpo_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.105916" elapsed="0.001457"/>
</kw>
<var name="${schedule}">{'vm_name': 'file-server-01', 'frequency': 'Daily', 'rpo_hours': 24, 'next_run': '2025-10-09 22:29:47'}</var>
<status status="PASS" start="2025-10-08T22:29:47.105813" elapsed="0.001598"/>
</iter>
<var>${schedule}</var>
<value>@{schedule_data}</value>
<status status="PASS" start="2025-10-08T22:29:47.100346" elapsed="0.007093"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.107829" level="INFO">✅ Schedule settings collected for 4 VMs</msg>
<arg>✅ Schedule settings collected for ${schedule_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.107654" elapsed="0.000312"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.108383" level="INFO">📊 Retrieving recent backup job status...</msg>
<arg>📊 Retrieving recent backup job status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.108264" elapsed="0.000257"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.108834" level="INFO">📋 Looking back 7 days</msg>
<arg>📋 Looking back ${BACKUP_LOOKBACK_DAYS} days</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.108702" elapsed="0.000241"/>
</kw>
<kw name="Collect Recent Backup Job Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.109454" level="INFO">📊 Collecting recent backup job status via API...</msg>
<arg>📊 Collecting recent backup job status via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.109361" elapsed="0.000190"/>
</kw>
<kw name="Vcenter Api Get Recent Backup Jobs" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.109979" level="INFO">${jobs} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_mess...</msg>
<var>${jobs}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<arg>${BACKUP_LOOKBACK_DAYS}</arg>
<doc>Get recent backup job status for VMs via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.109658" elapsed="0.000347"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.110191" level="INFO">Length is 12.</msg>
<msg time="2025-10-08T22:29:47.110243" level="INFO">${count} = 12</msg>
<var>${count}</var>
<arg>${jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.110109" elapsed="0.000151"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.110455" level="INFO">📊 Collected 12 recent backup jobs</msg>
<arg>📊 Collected ${count} recent backup jobs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.110342" elapsed="0.000224"/>
</kw>
<return>
<value>${jobs}</value>
<status status="PASS" start="2025-10-08T22:29:47.110615" elapsed="0.000034"/>
</return>
<msg time="2025-10-08T22:29:47.110773" level="INFO">${job_status} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_mess...</msg>
<var>${job_status}</var>
<doc>Collect recent backup job status via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.109170" elapsed="0.001623"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.111223" level="INFO">${JOB_STATUS} = [{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_mess...</msg>
<arg>${JOB_STATUS}</arg>
<arg>${job_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:47.110993" elapsed="0.000273"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.111549" level="INFO">Length is 12.</msg>
<msg time="2025-10-08T22:29:47.111618" level="INFO">${job_count} = 12</msg>
<var>${job_count}</var>
<arg>${job_status}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.111435" elapsed="0.000209"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${job_count} &gt; 0</arg>
<arg>msg=No recent backup jobs found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.111785" elapsed="0.000167"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.113657" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-08 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.112244" elapsed="0.001541"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_messa...</var>
<status status="PASS" start="2025-10-08T22:29:47.112174" elapsed="0.001661"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.115568" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-06 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.114022" elapsed="0.001673"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-1', 'status': 'Success', 'start_time': '2025-10-06 21:59:47', 'end_time': '2025-10-06 22:29:47', 'data_transferred_gb': 60, 'error_messa...</var>
<status status="PASS" start="2025-10-08T22:29:47.113932" elapsed="0.001814"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.117450" level="INFO">📊 VM: production-db-01 - Status: Success, Completion: 2025-10-04 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.115923" elapsed="0.001634"/>
</kw>
<var name="${job}">{'vm_name': 'production-db-01', 'job_id': 'job-production-db-01-2', 'status': 'Success', 'start_time': '2025-10-04 21:59:47', 'end_time': '2025-10-04 22:29:47', 'data_transferred_gb': 70, 'error_messa...</var>
<status status="PASS" start="2025-10-08T22:29:47.115841" elapsed="0.001870"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.119254" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-08 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.117861" elapsed="0.001536"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_mes...</var>
<status status="PASS" start="2025-10-08T22:29:47.117791" elapsed="0.001668"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.121290" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-06 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.119651" elapsed="0.001806"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-1', 'status': 'Success', 'start_time': '2025-10-06 21:59:47', 'end_time': '2025-10-06 22:29:47', 'data_transferred_gb': 60, 'error_mes...</var>
<status status="PASS" start="2025-10-08T22:29:47.119566" elapsed="0.001940"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.123143" level="INFO">📊 VM: production-web-01 - Status: Success, Completion: 2025-10-04 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.121711" elapsed="0.001565"/>
</kw>
<var name="${job}">{'vm_name': 'production-web-01', 'job_id': 'job-production-web-01-2', 'status': 'Success', 'start_time': '2025-10-04 21:59:47', 'end_time': '2025-10-04 22:29:47', 'data_transferred_gb': 70, 'error_mes...</var>
<status status="PASS" start="2025-10-08T22:29:47.121607" elapsed="0.001718"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.125115" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-08 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.123512" elapsed="0.001717"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_mes...</var>
<status status="PASS" start="2025-10-08T22:29:47.123423" elapsed="0.001843"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.126748" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-06 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.125404" elapsed="0.001487"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-1', 'status': 'Success', 'start_time': '2025-10-06 21:59:47', 'end_time': '2025-10-06 22:29:47', 'data_transferred_gb': 60, 'error_mes...</var>
<status status="PASS" start="2025-10-08T22:29:47.125338" elapsed="0.001604"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.128638" level="INFO">📊 VM: production-app-01 - Status: Success, Completion: 2025-10-04 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.127134" elapsed="0.001642"/>
</kw>
<var name="${job}">{'vm_name': 'production-app-01', 'job_id': 'job-production-app-01-2', 'status': 'Success', 'start_time': '2025-10-04 21:59:47', 'end_time': '2025-10-04 22:29:47', 'data_transferred_gb': 70, 'error_mes...</var>
<status status="PASS" start="2025-10-08T22:29:47.127045" elapsed="0.001783"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.130597" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-08 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.129024" elapsed="0.001714"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-0', 'status': 'Success', 'start_time': '2025-10-08 21:59:47', 'end_time': '2025-10-08 22:29:47', 'data_transferred_gb': 50, 'error_message':...</var>
<status status="PASS" start="2025-10-08T22:29:47.128930" elapsed="0.001855"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.132529" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-06 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.130967" elapsed="0.001691"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-1', 'status': 'Success', 'start_time': '2025-10-06 21:59:47', 'end_time': '2025-10-06 22:29:47', 'data_transferred_gb': 60, 'error_message':...</var>
<status status="PASS" start="2025-10-08T22:29:47.130879" elapsed="0.001832"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.134686" level="INFO">📊 VM: file-server-01 - Status: Success, Completion: 2025-10-04 22:29:47</msg>
<arg>📊 VM: ${job['vm_name']} - Status: ${job['status']}, Completion: ${job['end_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.132917" elapsed="0.001923"/>
</kw>
<var name="${job}">{'vm_name': 'file-server-01', 'job_id': 'job-file-server-01-2', 'status': 'Success', 'start_time': '2025-10-04 21:59:47', 'end_time': '2025-10-04 22:29:47', 'data_transferred_gb': 70, 'error_message':...</var>
<status status="PASS" start="2025-10-08T22:29:47.132828" elapsed="0.002065"/>
</iter>
<var>${job}</var>
<value>@{job_status}</value>
<status status="PASS" start="2025-10-08T22:29:47.112059" elapsed="0.022870"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.135358" level="INFO">✅ Recent job status collected: 12 jobs</msg>
<arg>✅ Recent job status collected: ${job_count} jobs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.135183" elapsed="0.000346"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.136077" level="INFO">📊 Retrieving retention policy settings...</msg>
<arg>📊 Retrieving retention policy settings...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.135973" elapsed="0.000222"/>
</kw>
<kw name="Collect Retention Policy Settings" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.137489" level="INFO">📊 Collecting retention policy settings via API...</msg>
<arg>📊 Collecting retention policy settings via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.136683" elapsed="0.000947"/>
</kw>
<kw name="Vcenter Api Get Retention Policies" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.137926" level="INFO">${retention} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<var>${retention}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get retention policy settings for VMs via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.137745" elapsed="0.000205"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.138121" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.138175" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${retention}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.138038" elapsed="0.000155"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.138404" level="INFO">📊 Collected retention policies for 4 VMs</msg>
<arg>📊 Collected retention policies for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.138278" elapsed="0.000248"/>
</kw>
<return>
<value>${retention}</value>
<status status="PASS" start="2025-10-08T22:29:47.138584" elapsed="0.000037"/>
</return>
<msg time="2025-10-08T22:29:47.138750" level="INFO">${retention_data} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<var>${retention_data}</var>
<doc>Collect retention policy settings via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.136433" elapsed="0.002341"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.139133" level="INFO">${RETENTION_DATA} = [{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}, {'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_re...</msg>
<arg>${RETENTION_DATA}</arg>
<arg>${retention_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:47.138959" elapsed="0.000211"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.139409" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.139470" level="INFO">${retention_count} = 4</msg>
<var>${retention_count}</var>
<arg>${retention_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.139318" elapsed="0.000170"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${retention_count} &gt; 0</arg>
<arg>msg=No retention policies found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.139624" elapsed="0.000182"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.141379" level="INFO">📊 VM: production-db-01 - Daily: 14d, Weekly: 8w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.140116" elapsed="0.001402"/>
</kw>
<var name="${retention}">{'vm_name': 'production-db-01', 'daily_retention': 14, 'weekly_retention': 8, 'monthly_retention': 6, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-08T22:29:47.140047" elapsed="0.001522"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.143007" level="INFO">📊 VM: production-web-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.141755" elapsed="0.001375"/>
</kw>
<var name="${retention}">{'vm_name': 'production-web-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-08T22:29:47.141671" elapsed="0.001497"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.144498" level="INFO">📊 VM: production-app-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.143314" elapsed="0.001293"/>
</kw>
<var name="${retention}">{'vm_name': 'production-app-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-08T22:29:47.143245" elapsed="0.001400"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.146159" level="INFO">📊 VM: file-server-01 - Daily: 7d, Weekly: 4w</msg>
<arg>📊 VM: ${retention['vm_name']} - Daily: ${retention['daily_retention']}d, Weekly: ${retention['weekly_retention']}w</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.144801" elapsed="0.001466"/>
</kw>
<var name="${retention}">{'vm_name': 'file-server-01', 'daily_retention': 7, 'weekly_retention': 4, 'monthly_retention': 3, 'retention_unit': 'snapshots'}</var>
<status status="PASS" start="2025-10-08T22:29:47.144719" elapsed="0.001584"/>
</iter>
<var>${retention}</var>
<value>@{retention_data}</value>
<status status="PASS" start="2025-10-08T22:29:47.139921" elapsed="0.006409"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.146683" level="INFO">✅ Retention policies collected for 4 VMs</msg>
<arg>✅ Retention policies collected for ${retention_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.146518" elapsed="0.000272"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.147083" level="INFO">📊 Retrieving latest backup timestamps...</msg>
<arg>📊 Retrieving latest backup timestamps...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.146966" elapsed="0.000229"/>
</kw>
<kw name="Collect Latest Backup Timestamps" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.147920" level="INFO">📊 Collecting latest backup timestamps via API...</msg>
<arg>📊 Collecting latest backup timestamps via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.147807" elapsed="0.000238"/>
</kw>
<kw name="Vcenter Api Get Latest Backup Timestamps" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.148391" level="INFO">${timestamps} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-08 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<var>${timestamps}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get latest successful backup timestamps for VMs via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.148148" elapsed="0.000268"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.148717" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.148773" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${timestamps}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.148628" elapsed="0.000163"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.148998" level="INFO">📊 Collected latest backup timestamps for 4 VMs</msg>
<arg>📊 Collected latest backup timestamps for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.148881" elapsed="0.000264"/>
</kw>
<return>
<value>${timestamps}</value>
<status status="PASS" start="2025-10-08T22:29:47.149212" elapsed="0.000040"/>
</return>
<msg time="2025-10-08T22:29:47.149420" level="INFO">${timestamp_data} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-08 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<var>${timestamp_data}</var>
<doc>Collect latest successful backup timestamps via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.147566" elapsed="0.001882"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.149868" level="INFO">${TIMESTAMP_DATA} = [{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-08 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}, {'vm_name': 'production-web-01...</msg>
<arg>${TIMESTAMP_DATA}</arg>
<arg>${timestamp_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:47.149672" elapsed="0.000231"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.150148" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.150205" level="INFO">${timestamp_count} = 4</msg>
<var>${timestamp_count}</var>
<arg>${timestamp_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.150059" elapsed="0.000165"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${timestamp_count} &gt; 0</arg>
<arg>msg=No backup timestamps found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.150363" elapsed="0.000169"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.151743" level="INFO">📊 VM: production-db-01 - Last Backup: 2025-10-08 19:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.150819" elapsed="0.001044"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-db-01', 'last_backup_time': '2025-10-08 19:29:47', 'backup_id': 'backup-production-db-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-08T22:29:47.150753" elapsed="0.001157"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.153190" level="INFO">📊 VM: production-web-01 - Last Backup: 2025-10-08 14:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.152086" elapsed="0.001244"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-web-01', 'last_backup_time': '2025-10-08 14:29:47', 'backup_id': 'backup-production-web-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-08T22:29:47.152004" elapsed="0.001381"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.154604" level="INFO">📊 VM: production-app-01 - Last Backup: 2025-10-08 12:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.153579" elapsed="0.001142"/>
</kw>
<var name="${timestamp}">{'vm_name': 'production-app-01', 'last_backup_time': '2025-10-08 12:29:47', 'backup_id': 'backup-production-app-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-08T22:29:47.153490" elapsed="0.001275"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.156061" level="INFO">📊 VM: file-server-01 - Last Backup: 2025-10-08 07:29:47</msg>
<arg>📊 VM: ${timestamp['vm_name']} - Last Backup: ${timestamp['last_backup_time']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.154936" elapsed="0.001313"/>
</kw>
<var name="${timestamp}">{'vm_name': 'file-server-01', 'last_backup_time': '2025-10-08 07:29:47', 'backup_id': 'backup-file-server-01-latest', 'backup_size_gb': 100, 'backup_type': 'Full'}</var>
<status status="PASS" start="2025-10-08T22:29:47.154855" elapsed="0.001450"/>
</iter>
<var>${timestamp}</var>
<value>@{timestamp_data}</value>
<status status="PASS" start="2025-10-08T22:29:47.150635" elapsed="0.005709"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.156693" level="INFO">✅ Latest timestamps collected for 4 VMs</msg>
<arg>✅ Latest timestamps collected for ${timestamp_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.156547" elapsed="0.000256"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.157134" level="INFO">📊 Retrieving offsite replication status...</msg>
<arg>📊 Retrieving offsite replication status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.157007" elapsed="0.000244"/>
</kw>
<kw name="Collect Offsite Replication Status" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.157879" level="INFO">📊 Collecting offsite replication status via API...</msg>
<arg>📊 Collecting offsite replication status via API...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.157783" elapsed="0.000207"/>
</kw>
<kw name="Vcenter Api Get Offsite Replication Status" owner="VCenterAPILibrary">
<msg time="2025-10-08T22:29:47.158303" level="INFO">${replication} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-08 16:29:47', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<var>${replication}</var>
<arg>${VCENTER_API_CONN}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Get offsite replication status for VMs via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.158094" elapsed="0.000232"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.158493" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.158545" level="INFO">${count} = 4</msg>
<var>${count}</var>
<arg>${replication}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.158412" elapsed="0.000150"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.158751" level="INFO">📊 Collected offsite replication status for 4 VMs</msg>
<arg>📊 Collected offsite replication status for ${count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.158639" elapsed="0.000232"/>
</kw>
<return>
<value>${replication}</value>
<status status="PASS" start="2025-10-08T22:29:47.158938" elapsed="0.000042"/>
</return>
<msg time="2025-10-08T22:29:47.159216" level="INFO">${replication_data} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-08 16:29:47', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<var>${replication_data}</var>
<doc>Collect offsite replication status via API</doc>
<status status="PASS" start="2025-10-08T22:29:47.157535" elapsed="0.001708"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.159684" level="INFO">${REPLICATION_DATA} = [{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-08 16:29:47', 'replication_status': 'Healthy'}, {'vm_name': 'production-web-01'...</msg>
<arg>${REPLICATION_DATA}</arg>
<arg>${replication_data}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-10-08T22:29:47.159514" elapsed="0.000204"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.160031" level="INFO">Length is 4.</msg>
<msg time="2025-10-08T22:29:47.160109" level="INFO">${replication_count} = 4</msg>
<var>${replication_count}</var>
<arg>${replication_data}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.159903" elapsed="0.000229"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${replication_count} &gt; 0</arg>
<arg>msg=No offsite replication data found</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-10-08T22:29:47.160313" elapsed="0.000223"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.162222" level="INFO">📊 VM: production-db-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.160928" elapsed="0.001442"/>
</kw>
<var name="${replication}">{'vm_name': 'production-db-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-08 16:29:47', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-08T22:29:47.160823" elapsed="0.001599"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.163930" level="INFO">📊 VM: production-web-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.162619" elapsed="0.001440"/>
</kw>
<var name="${replication}">{'vm_name': 'production-web-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-08 16:29:47', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-08T22:29:47.162522" elapsed="0.001601"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.165641" level="INFO">📊 VM: production-app-01 - Enabled: True, Target: DR-Site-East</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.164311" elapsed="0.001456"/>
</kw>
<var name="${replication}">{'vm_name': 'production-app-01', 'offsite_enabled': True, 'offsite_target': 'DR-Site-East', 'last_replication': '2025-10-08 16:29:47', 'replication_status': 'Healthy'}</var>
<status status="PASS" start="2025-10-08T22:29:47.164225" elapsed="0.001593"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.167352" level="INFO">📊 VM: file-server-01 - Enabled: False, Target: None</msg>
<arg>📊 VM: ${replication['vm_name']} - Enabled: ${replication['offsite_enabled']}, Target: ${replication['offsite_target']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.165998" elapsed="0.001462"/>
</kw>
<var name="${replication}">{'vm_name': 'file-server-01', 'offsite_enabled': False, 'offsite_target': None, 'last_replication': None, 'replication_status': 'Disabled'}</var>
<status status="PASS" start="2025-10-08T22:29:47.165913" elapsed="0.001583"/>
</iter>
<var>${replication}</var>
<value>@{replication_data}</value>
<status status="PASS" start="2025-10-08T22:29:47.160667" elapsed="0.006853"/>
</for>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.167866" level="INFO">✅ Offsite replication status collected for 4 VMs</msg>
<arg>✅ Offsite replication status collected for ${replication_count} VMs</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.167704" elapsed="0.000268"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.168257" level="INFO">✅ All backup configuration data collected via API in text/JSON format</msg>
<arg>✅ All backup configuration data collected via API in text/JSON format</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.168143" elapsed="0.000223"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.169234" level="INFO">✅ Completed: Critical - Collect Backup Configuration via API - PASS</msg>
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.169058" elapsed="0.000342"/>
</kw>
<status status="PASS" start="2025-10-08T22:29:47.168918" elapsed="0.000540"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.169614" elapsed="0.000022"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.169508" elapsed="0.000171"/>
</branch>
<status status="PASS" start="2025-10-08T22:29:47.168898" elapsed="0.000803"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-08T22:29:47.168671" elapsed="0.001085"/>
</kw>
<doc>📊 Use vCenter REST API calls to retrieve VM backup policy details, schedule settings, recent job status, retention policies, and latest backup timestamps in text/JSON format</doc>
<tag>api</tag>
<tag>backup_collection</tag>
<tag>critical</tag>
<status status="PASS" start="2025-10-08T22:29:47.084714" elapsed="0.085198"/>
</test>
<test id="s1-t3" name="Critical - Validate Backup Compliance" line="111">
<kw name="Log Test Start" owner="backup_keywords" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.171618" level="INFO">🏁 Starting: Critical - Validate Backup Compliance</msg>
<arg>🏁 Starting: ${test_name}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.171457" elapsed="0.000303"/>
</kw>
<arg>${TEST_NAME}</arg>
<doc>📝 Log the start of a test case</doc>
<status status="PASS" start="2025-10-08T22:29:47.171134" elapsed="0.000694"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.172120" level="INFO">🔍 Validating backup compliance against data criticality requirements and compliance standards...</msg>
<arg>🔍 Validating backup compliance against data criticality requirements and compliance standards...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.172016" elapsed="0.000317"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.172657" level="INFO">🔍 Validating backup policy application...</msg>
<arg>🔍 Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.172534" elapsed="0.000236"/>
</kw>
<kw name="Validate Backup Policy Applied" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.173410" level="INFO">✅ Validating backup policy application...</msg>
<arg>✅ Validating backup policy application...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.173300" elapsed="0.000240"/>
</kw>
<kw name="Backup Validator Validate Policies" owner="BackupValidator">
<msg time="2025-10-08T22:29:47.173837" level="INFO">${results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${results}</var>
<arg>${policy_data}</arg>
<arg>${TARGET_VMS}</arg>
<doc>Validate all VMs have backup policies applied</doc>
<status status="PASS" start="2025-10-08T22:29:47.173656" elapsed="0.000201"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-08T22:29:47.174071" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-08T22:29:47.173952" elapsed="0.000138"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.174246" level="INFO">Length is 0.</msg>
<msg time="2025-10-08T22:29:47.174300" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.174172" elapsed="0.000146"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.174516" level="INFO">📊 Validation complete: 0 violations found</msg>
<arg>📊 Validation complete: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.174401" elapsed="0.000214"/>
</kw>
<return>
<value>${results}</value>
<status status="PASS" start="2025-10-08T22:29:47.174665" elapsed="0.000037"/>
</return>
<msg time="2025-10-08T22:29:47.174804" level="INFO">${policy_results} = {'violations': [], 'total_vms': 4, 'compliant_vms': 4}</msg>
<var>${policy_results}</var>
<arg>${POLICY_DATA}</arg>
<doc>Validate all VMs have appropriate backup policies applied</doc>
<status status="PASS" start="2025-10-08T22:29:47.173034" elapsed="0.001789"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2025-10-08T22:29:47.175205" level="INFO">${violations} = []</msg>
<var>${violations}</var>
<arg>${policy_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2025-10-08T22:29:47.175029" elapsed="0.000202"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.175540" level="INFO">Length is 0.</msg>
<msg time="2025-10-08T22:29:47.175612" level="INFO">${violation_count} = 0</msg>
<var>${violation_count}</var>
<arg>${violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-10-08T22:29:47.175415" elapsed="0.000219"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.175939" level="INFO">📊 Policy validation: 0 violations found</msg>
<arg>📊 Policy validation: ${violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.175809" elapsed="0.000239"/>
</kw>
<if>
<branch type="IF" condition="${violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.176450" elapsed="0.000016"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-08T22:29:47.176384" elapsed="0.000112"/>
</iter>
<var>${violation}</var>
<value>@{violations}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.176331" elapsed="0.000188"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Backup policy validation failed: ${violation_count} VMs without proper policies</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.176591" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.176196" elapsed="0.000432"/>
</branch>
<status status="PASS" start="2025-10-08T22:29:47.176168" elapsed="0.000478"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.176876" level="INFO">✅ Applied policy validated</msg>
<arg>✅ Applied policy validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.176782" elapsed="0.000216"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.177380" level="INFO">🔍 Validating backup schedule alignment with RPO requirements...</msg>
<arg>🔍 Validating backup schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.177286" elapsed="0.000220"/>
</kw>
<kw name="Validate Schedule Alignment With RPO" owner="backup_keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.178038" level="INFO">✅ Validating schedule alignment with RPO requirements...</msg>
<arg>✅ Validating schedule alignment with RPO requirements...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.177942" elapsed="0.000213"/>
</kw>
<kw name="Backup Validator Validate Rpo Alignment" owner="BackupValidator">
<msg time="2025-10-08T22:29:47.178542" level="FAIL">TypeError: '&gt;' not supported between instances of 'int' and 'str'</msg>
<var>${results}</var>
<arg>${schedule_data}</arg>
<arg>${VM_CRITICALITY}</arg>
<arg>${RPO_REQUIREMENTS}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-08T22:29:47.178283" elapsed="0.001159">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.179554" elapsed="0.000017"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.179647" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Validation complete: ${rpo_violation_count} RPO violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.179734" elapsed="0.000014"/>
</kw>
<return>
<value>${results}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.179783" elapsed="0.000013"/>
</return>
<var>${schedule_results}</var>
<arg>${SCHEDULE_DATA}</arg>
<doc>Validate backup schedules meet RPO requirements</doc>
<status status="FAIL" start="2025-10-08T22:29:47.177727" elapsed="0.002163">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${rpo_violations}</var>
<arg>${schedule_results}</arg>
<arg>rpo_violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.180141" elapsed="0.000023"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${rpo_violation_count}</var>
<arg>${rpo_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.180331" elapsed="0.000021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 RPO validation: ${rpo_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.180503" elapsed="0.000021"/>
</kw>
<if>
<branch type="IF" condition="${rpo_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ RPO Violation: VM ${violation['vm_name']} - Current: ${violation['current_rpo']}h, Required: ${violation['required_rpo']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.180825" elapsed="0.000017"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-08T22:29:47.180748" elapsed="0.000127"/>
</iter>
<var>${violation}</var>
<value>@{rpo_violations}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.180695" elapsed="0.000201"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>RPO validation failed: ${rpo_violation_count} VMs exceed RPO requirements</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.180979" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.180649" elapsed="0.000367"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:29:47.180630" elapsed="0.000404"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Schedule alignment with RPO validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.181160" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔍 Validating retention settings compliance...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.181299" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Minimum daily retention: ${MIN_DAILY_RETENTION} days</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.181498" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Minimum weekly retention: ${MIN_WEEKLY_RETENTION} weeks</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.181638" elapsed="0.000016"/>
</kw>
<kw name="Validate Retention Settings Compliance" owner="backup_keywords">
<var>${retention_results}</var>
<arg>${RETENTION_DATA}</arg>
<doc>Validate retention settings meet compliance standards</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.181829" elapsed="0.000020"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${retention_violations}</var>
<arg>${retention_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.181974" elapsed="0.000015"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${retention_violation_count}</var>
<arg>${retention_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.182111" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Retention validation: ${retention_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.182253" elapsed="0.000016"/>
</kw>
<if>
<branch type="IF" condition="${retention_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Retention Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.182494" elapsed="0.000014"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-08T22:29:47.182437" elapsed="0.000098"/>
</iter>
<var>${violation}</var>
<value>@{retention_violations}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.182402" elapsed="0.000152"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Retention validation failed: ${retention_violation_count} VMs with insufficient retention</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.182621" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.182370" elapsed="0.000285"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:29:47.182355" elapsed="0.000317"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Retention settings validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.182788" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔍 Validating recent backup job completion status...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.182981" elapsed="0.000016"/>
</kw>
<kw name="Validate Recent Job Completion Status" owner="backup_keywords">
<var>${job_results}</var>
<arg>${JOB_STATUS}</arg>
<doc>Validate recent backup jobs completed successfully</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.183158" elapsed="0.000018"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${failed_jobs}</var>
<arg>${job_results}</arg>
<arg>failed_jobs</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.183302" elapsed="0.000015"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${failed_count}</var>
<arg>${failed_jobs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.183438" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Job validation: ${failed_count} failed jobs found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.183576" elapsed="0.000015"/>
</kw>
<if>
<branch type="IF" condition="${failed_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Failed Job: VM ${failed['vm_name']} - Status: ${failed['status']}, Error: ${failed['error_message']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.183811" elapsed="0.000013"/>
</kw>
<var name="${failed}"/>
<status status="NOT RUN" start="2025-10-08T22:29:47.183754" elapsed="0.000096"/>
</iter>
<var>${failed}</var>
<value>@{failed_jobs}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.183720" elapsed="0.000148"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Job validation failed: ${failed_count} backup jobs failed</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.183928" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.183689" elapsed="0.000308"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:29:47.183675" elapsed="0.000342"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Job completion status validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.184134" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔍 Validating backup recency...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.184270" elapsed="0.000014"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📋 Maximum backup age: ${MAX_BACKUP_AGE_HOURS} hours</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.184486" elapsed="0.000016"/>
</kw>
<kw name="Validate Backup Recency" owner="backup_keywords">
<var>${recency_results}</var>
<arg>${TIMESTAMP_DATA}</arg>
<doc>Validate backups are recent and within acceptable time windows</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.184668" elapsed="0.000019"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${stale_backups}</var>
<arg>${recency_results}</arg>
<arg>stale_backups</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.184816" elapsed="0.000015"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${stale_count}</var>
<arg>${stale_backups}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.184953" elapsed="0.000014"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Recency validation: ${stale_count} stale backups found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.185082" elapsed="0.000015"/>
</kw>
<if>
<branch type="IF" condition="${stale_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Stale Backup: VM ${stale['vm_name']} - Last backup: ${stale['last_backup_time']}, Age: ${stale['age_hours']}h</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.185315" elapsed="0.000026"/>
</kw>
<var name="${stale}"/>
<status status="NOT RUN" start="2025-10-08T22:29:47.185256" elapsed="0.000125"/>
</iter>
<var>${stale}</var>
<value>@{stale_backups}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.185222" elapsed="0.000179"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Recency validation failed: ${stale_count} VMs have stale backups</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.185461" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.185193" elapsed="0.000301"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:29:47.185179" elapsed="0.000332"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Backup recency validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.185777" elapsed="0.000024"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>🔍 Validating offsite replication configuration...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.186010" elapsed="0.000021"/>
</kw>
<kw name="Validate Offsite Replication Configuration" owner="backup_keywords">
<var>${replication_results}</var>
<arg>${REPLICATION_DATA}</arg>
<doc>Validate offsite replication is enabled for critical VMs</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.186530" elapsed="0.000555"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<var>${offsite_violations}</var>
<arg>${replication_results}</arg>
<arg>violations</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.187291" elapsed="0.000021"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<var>${offsite_violation_count}</var>
<arg>${offsite_violations}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.187476" elapsed="0.000018"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Offsite validation: ${offsite_violation_count} violations found</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.187631" elapsed="0.000017"/>
</kw>
<if>
<branch type="IF" condition="${offsite_violation_count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>⚠️ Offsite Violation: VM ${violation['vm_name']} - ${violation['reason']}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.187941" elapsed="0.000016"/>
</kw>
<var name="${violation}"/>
<status status="NOT RUN" start="2025-10-08T22:29:47.187879" elapsed="0.000105"/>
</iter>
<var>${violation}</var>
<value>@{offsite_violations}</value>
<status status="NOT RUN" start="2025-10-08T22:29:47.187824" elapsed="0.000182"/>
</for>
<kw name="Fail" owner="BuiltIn">
<arg>Offsite replication validation failed: ${offsite_violation_count} VMs missing offsite protection</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.188079" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.187774" elapsed="0.000342"/>
</branch>
<status status="NOT RUN" start="2025-10-08T22:29:47.187752" elapsed="0.000382"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>✅ Offsite replication validated</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.188302" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 Backup compliance validation summary:</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.188496" elapsed="0.000020"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Applied policy: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.188667" elapsed="0.000017"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Schedule alignment with RPO: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.188926" elapsed="0.000019"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Retention settings: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.189076" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Job completion status: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.189213" elapsed="0.000016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Backup recency: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.189361" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>📊 - Offsite replication: ✅</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.189496" elapsed="0.000015"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>✅ Backup compliance validation: PASSED - All VMs meet data criticality requirements and compliance standards</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.189632" elapsed="0.000015"/>
</kw>
<kw name="Log Test End" owner="backup_keywords" type="TEARDOWN">
<if>
<branch type="IF" condition="&quot;${test_status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>✅ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-10-08T22:29:47.190483" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2025-10-08T22:29:47.190328" elapsed="0.000200"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.190777" level="INFO">❌ Completed: Critical - Validate Backup Compliance - FAIL</msg>
<arg>❌ Completed: ${test_name} - ${test_status}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.190615" elapsed="0.000308"/>
</kw>
<status status="PASS" start="2025-10-08T22:29:47.190548" elapsed="0.000424"/>
</branch>
<status status="PASS" start="2025-10-08T22:29:47.190312" elapsed="0.000685"/>
</if>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>📝 Log the end of a test case</doc>
<status status="PASS" start="2025-10-08T22:29:47.190064" elapsed="0.000995"/>
</kw>
<doc>✅ Compare all API-collected backup data (applied policy, schedule alignment with RPO, retention settings, job completion status, offsite replication) against data criticality requirements and compliance standards to ensure proper backup protection</doc>
<tag>compliance</tag>
<tag>critical</tag>
<tag>validation</tag>
<status status="FAIL" start="2025-10-08T22:29:47.170437" elapsed="0.020760">TypeError: '&gt;' not supported between instances of 'int' and 'str'</status>
</test>
<kw name="Generate Backup Validation Executive Summary" owner="backup_keywords" type="TEARDOWN">
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.192399" level="INFO">📊 Generating Backup Validation Executive Summary...</msg>
<arg>📊 Generating Backup Validation Executive Summary...</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.192296" elapsed="0.000212"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2025-10-08T22:29:47.192791" level="INFO">${end_time} = 2025-10-08 22:29:47</msg>
<var>${end_time}</var>
<arg>result_format=%Y-%m-%d %H:%M:%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2025-10-08T22:29:47.192618" elapsed="0.000194"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.193940" level="INFO">${TEST_END_TIME} = 2025-10-08 22:29:47</msg>
<arg>${TEST_END_TIME}</arg>
<arg>${end_time}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-10-08T22:29:47.192909" elapsed="0.001066"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.194159" level="INFO">${summary_file} = results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</msg>
<var>${summary_file}</var>
<arg>results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-08T22:29:47.194059" elapsed="0.000120"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.194497" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:29:47
🎯 vCenter Server: all...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>========================================</arg>
<arg>💾 TEST-15: BACKUP VALIDATION</arg>
<arg>📊 EXECUTIVE SUMMARY REPORT</arg>
<arg>========================================</arg>
<arg>📅 Report Generated: ${end_time}</arg>
<arg>🎯 vCenter Server: ${VCENTER_SERVER}</arg>
<arg>📋 Test Suite: Test-15 Backup Configuration Validation</arg>
<arg>========================================</arg>
<arg>📋 TEST OBJECTIVES</arg>
<arg>========================================</arg>
<arg>1. Connect to vCenter REST API</arg>
<arg>2. Collect backup configuration via API calls</arg>
<arg>3. Validate backup compliance against standards</arg>
<arg>========================================</arg>
<arg>📊 VALIDATION SCOPE</arg>
<arg>========================================</arg>
<arg>✅ Backup policy application</arg>
<arg>✅ Schedule alignment with RPO</arg>
<arg>✅ Retention settings compliance</arg>
<arg>✅ Recent job completion status</arg>
<arg>✅ Backup recency validation</arg>
<arg>✅ Offsite replication configuration</arg>
<arg>========================================</arg>
<arg>📋 TARGET VMS</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:47.194254" elapsed="0.000267"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.194954" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:29:47
🎯 vCenter Server: all...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:47.194788" elapsed="0.000189"/>
</kw>
<var name="${vm}">production-db-01</var>
<status status="PASS" start="2025-10-08T22:29:47.194728" elapsed="0.000284"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.195279" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:29:47
🎯 vCenter Server: all...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:47.195135" elapsed="0.000167"/>
</kw>
<var name="${vm}">production-web-01</var>
<status status="PASS" start="2025-10-08T22:29:47.195070" elapsed="0.000264"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.195581" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:29:47
🎯 vCenter Server: all...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:47.195444" elapsed="0.000159"/>
</kw>
<var name="${vm}">production-app-01</var>
<status status="PASS" start="2025-10-08T22:29:47.195390" elapsed="0.000252"/>
</iter>
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.195886" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:29:47
🎯 vCenter Server: all...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>...</arg>
<arg>🖥️ ${vm}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:47.195750" elapsed="0.000157"/>
</kw>
<var name="${vm}">file-server-01</var>
<status status="PASS" start="2025-10-08T22:29:47.195697" elapsed="0.000358"/>
</iter>
<var>${vm}</var>
<value>@{TARGET_VMS}</value>
<status status="PASS" start="2025-10-08T22:29:47.194626" elapsed="0.001456"/>
</for>
<kw name="Catenate" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.196467" level="INFO">${summary_content} = ========================================
💾 TEST-15: BACKUP VALIDATION
📊 EXECUTIVE SUMMARY REPORT
========================================

📅 Report Generated: 2025-10-08 22:29:47
🎯 vCenter Server: all...</msg>
<var>${summary_content}</var>
<arg>SEPARATOR=\n</arg>
<arg>${summary_content}</arg>
<arg>========================================</arg>
<arg>🔍 COMPLIANCE REQUIREMENTS</arg>
<arg>========================================</arg>
<arg>📅 Maximum backup age: ${MAX_BACKUP_AGE_HOURS} hours</arg>
<arg>💾 Minimum daily retention: ${MIN_DAILY_RETENTION} days</arg>
<arg>📦 Minimum weekly retention: ${MIN_WEEKLY_RETENTION} weeks</arg>
<arg>🌐 Offsite replication: Required for critical VMs</arg>
<arg>========================================</arg>
<arg>✅ VALIDATION RESULTS</arg>
<arg>========================================</arg>
<arg>Results available in detailed test reports.</arg>
<arg>========================================</arg>
<arg>📁 SUPPORTING DOCUMENTATION</arg>
<arg>========================================</arg>
<arg>📄 API data collected in JSON format</arg>
<arg>📊 Robot Framework reports: results/test15_backup_validation/</arg>
<arg>========================================</arg>
<arg>🏆 COMPLIANCE STATUS</arg>
<arg>========================================</arg>
<arg>✅ Test execution completed successfully</arg>
<arg>💾 Backup policies validated</arg>
<arg>📅 Schedule compliance verified</arg>
<arg>🗄️ Retention settings confirmed</arg>
<arg>🌐 Offsite replication validated</arg>
<arg>🔍 Results ready for stakeholder review</arg>
<arg>End of Executive Summary</arg>
<arg>========================================</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2025-10-08T22:29:47.196169" elapsed="0.000322"/>
</kw>
<kw name="Create File" owner="OperatingSystem">
<msg time="2025-10-08T22:29:47.197323" level="INFO" html="true">Created file '&lt;a href="file://C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation\Test15_Backup_Validation_Executive_Summary.txt"&gt;C:\Users\write\project_2025\robot\robotframework\results\test15_backup_validation\Test15_Backup_Validation_Executive_Summary.txt&lt;/a&gt;'.</msg>
<arg>${summary_file}</arg>
<arg>${summary_content}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="PASS" start="2025-10-08T22:29:47.196622" elapsed="0.000754"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.197590" level="INFO">📊 Executive summary generated: results/test15_backup_validation/Test15_Backup_Validation_Executive_Summary.txt</msg>
<arg>📊 Executive summary generated: ${summary_file}</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.197465" elapsed="0.000268"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.197973" level="INFO">✅ Test-15 Backup Validation completed successfully!</msg>
<arg>✅ Test-15 Backup Validation completed successfully!</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.197857" elapsed="0.000268"/>
</kw>
<if>
<branch type="IF" condition="${VCENTER_API_CONN}">
<kw name="Vcenter Api Disconnect" owner="VCenterAPILibrary">
<arg>${VCENTER_API_CONN}</arg>
<doc>Disconnect from vCenter API</doc>
<status status="PASS" start="2025-10-08T22:29:47.198323" elapsed="0.000095"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-10-08T22:29:47.198585" level="INFO">🔌 Disconnected from vCenter API</msg>
<arg>🔌 Disconnected from vCenter API</arg>
<arg>console=yes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-10-08T22:29:47.198496" elapsed="0.000198"/>
</kw>
<status status="PASS" start="2025-10-08T22:29:47.198204" elapsed="0.000550"/>
</branch>
<status status="PASS" start="2025-10-08T22:29:47.198185" elapsed="0.000602"/>
</if>
<doc>Generate executive summary report for backup validation test</doc>
<status status="PASS" start="2025-10-08T22:29:47.192145" elapsed="0.006697"/>
</kw>
<doc>💾 Backup Configuration Validation Test Suite - Test-15
🔍 Process: Connect to vCenter API → Collect Backup Configuration → Validate Backup Compliance
✅ Pass if backup configuration meets data criticality requirements and compliance standards
📊 Validates: Backup policies, schedules, retention, job status, offsite replication</doc>
<status status="FAIL" start="2025-10-08T22:29:47.011924" elapsed="0.186952"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">backup_collection</stat>
<stat pass="0" fail="1" skip="0">compliance</stat>
<stat pass="1" fail="0" skip="0">connection</stat>
<stat pass="2" fail="1" skip="0">critical</stat>
<stat pass="1" fail="0" skip="0">infrastructure</stat>
<stat pass="0" fail="1" skip="0">validation</stat>
<stat pass="1" fail="0" skip="0">vcenter_api</stat>
</tag>
<suite>
<stat name="Backup Validation" id="s1" pass="2" fail="1" skip="0">Backup Validation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
